load-history is a variable defined in `C source code'.
Its value is shown below.

Documentation:
Alist mapping file names to symbols and features.
Each alist element is a list that starts with a file name,
except for one element (optional) that starts with nil and describes
definitions evaluated from buffers not visiting files.

The file name is absolute and is the true file name (i.e. it doesn't
contain symbolic links) of the loaded file.

The remaining elements of each list are symbols defined as variables
and cons cells of the form `(provide . FEATURE)', `(require . FEATURE)',
`(defun . FUNCTION)', `(autoload . SYMBOL)', `(defface . SYMBOL)'
and `(t . SYMBOL)'.  An element `(t . SYMBOL)' precedes an entry
`(defun . FUNCTION)', and means that SYMBOL was an autoload before
this file redefined it as a function.

During preloading, the file name recorded is relative to the main Lisp
directory.  These file names are converted to absolute at startup.

Value: 
(("/home/hobbes/nxhtml/autostart.el" nxhtml-install-dir
  (defun . nxhtml-custom-autoload)
  (defun . nxhtml-list-loaded-features)
  (provide . nxhtml-autostart))
 ("/home/hobbes/nxhtml/nxhtml/nxhtml-autoload.el"
  (require . majmodpri)
  (require . moz)
  (defun . javascript-moz-setup)
  nxhtml-src-dir
  (provide . nxhtml-autoload))
 ("/home/hobbes/nxhtml/related/moz.el"
  (require . comint)
  (require . cc-cmds)
  moz-minor-mode-map moz-minor-mode
  (t . moz-minor-mode)
  (defun . moz-minor-mode)
  (defun . run-mozilla)
  moz-repl-name moz-input-separator moz-repl-host moz-repl-port moz-temporary-file
  (defun . moz-temporary-file)
  (defun . moz-send-region)
  (defun . moz-send-defun)
  (defun . moz-send-defun-and-go)
  (defun . moz-save-buffer-and-send)
  inferior-moz-buffer
  (defun . inferior-moz-insert-moz-repl)
  inferior-moz-mode-map inferior-moz-mode-map inferior-moz-mode-syntax-table inferior-moz-mode-abbrev-table inferior-moz-mode-abbrev-table
  (t . inferior-moz-mode)
  (defun . inferior-moz-mode)
  (defun . inferior-moz-track-repl-name)
  (defun . inferior-moz-self-insert-or-repl-name)
  (defun . inferior-moz-input-sender)
  (defun . inferior-moz-switch-to-mozilla)
  (defun . inferior-moz-process)
  (defun . inferior-moz-start-process)
  (provide . moz))
 ("/usr/share/emacs/23.0.93/lisp/progmodes/cc-cmds.elc"
  (require . cc-defs)
  (require . cc-vars)
  (require . cc-engine)
  c-fix-backslashes
  (defun . c-indent-line)
  (defun . c-newline-and-indent)
  (defun . c-show-syntactic-information)
  (defun . c-syntactic-information-on-region)
  (defun . c-update-modeline)
  (defun . c-toggle-syntactic-indentation)
  (defun . c-toggle-auto-newline)
  (defun . c-toggle-auto-state)
  (defun . c-toggle-hungry-state)
  (defun . c-toggle-auto-hungry-state)
  (defun . c-toggle-electric-state)
  (defun . c-electric-backspace)
  (defun . c-hungry-delete-backwards)
  (defun . c-hungry-backspace)
  (defun . c-electric-delete-forward)
  (defun . c-hungry-delete-forward)
  (defun . c-electric-delete)
  (defun . c-hungry-delete)
  (defun . c-electric-pound)
  (defun . c-point-syntax)
  (defun . c-brace-newlines)
  (defun . c-try-one-liner)
  (defun . c-electric-brace)
  (defun . c-electric-slash)
  (defun . c-electric-star)
  (defun . c-electric-semi&comma)
  (defun . c-electric-colon)
  (defun . c-electric-lt-gt)
  (defun . c-electric-paren)
  (defun . c-electric-continued-statement)
  (defun . c-forward-into-nomenclature)
  (defun . c-backward-into-nomenclature)
  (defun . c-scope-operator)
  (defun . c-in-function-trailer-p)
  (defun . c-where-wrt-brace-construct)
  (defun . c-backward-to-nth-BOF-{)
  (defun . c-beginning-of-defun)
  (defun . c-forward-to-nth-EOF-})
  (defun . c-end-of-defun)
  (defun . c-defun-name)
  (defun . c-declaration-limits)
  (defun . c-mark-function)
  (defun . c-cpp-define-name)
  (defun . c-in-comment-line-prefix-p)
  (defun . c-narrow-to-comment-innards)
  (defun . c-beginning-of-sentence-in-comment)
  (defun . c-end-of-sentence-in-comment)
  (defun . c-beginning-of-sentence-in-string)
  (defun . c-end-of-sentence-in-string)
  (defun . c-ascertain-preceding-literal)
  (defun . c-ascertain-following-literal)
  (defun . c-after-statement-terminator-p)
  (defun . c-back-over-illiterals)
  (defun . c-forward-over-illiterals)
  (defun . c-one-line-string-p)
  (defun . c-beginning-of-statement)
  (defun . c-end-of-statement)
  (defun . c-calc-comment-indent)
  (defun . c-comment-indent)
  (defun . c-outline-level)
  (defun . c-up-conditional)
  (defun . c-up-conditional-with-else)
  (defun . c-down-conditional)
  (defun . c-down-conditional-with-else)
  (defun . c-backward-conditional)
  (defun . c-forward-conditional)
  (defun . c-indent-command)
  (defun . c-indent-exp)
  (defun . c-indent-defun)
  (defun . c-indent-region)
  (defun . c-fn-region-is-active-p)
  (defun . c-indent-line-or-region)
  c-progress-info
  (defun . c-progress-init)
  (defun . c-progress-update)
  (defun . c-progress-fini)
  (defun . c-backslash-region)
  (defun . c-append-backslashes-forward)
  (defun . c-delete-backslashes-forward)
  c-auto-fill-prefix c-lit-limits c-lit-type
  (defun . c-guess-fill-prefix)
  (defun . c-mask-paragraph)
  (defun . c-fill-paragraph)
  (defun . c-do-auto-fill)
  (defun . c-indent-new-comment-line)
  (defun . c-comment-line-break-function)
  (defun . c-context-line-break)
  (defun . c-context-open-line)
  (provide . cc-cmds))
 ("/usr/share/emacs/23.0.93/lisp/progmodes/cc-engine.elc"
  (require . cc-defs)
  (require . cc-vars)
  (defun . c-declare-lang-variables)
  c++-template-syntax-table c-identifier-syntax-modifications c-identifier-syntax-table c-get-state-before-change-function c-before-font-lock-function c-symbol-start c-symbol-key c-nonsymbol-chars c-opt-identifier-concat-key c-identifier-start c-identifier-key c-string-escaped-newlines c-multiline-string-start-char c-opt-cpp-prefix c-anchored-cpp-prefix c-opt-cpp-start c-opt-cpp-macro-define-start c-opt-cpp-macro-define-id c-overloadable-operators-regexp c-opt-op-identifier-prefix c-nonsymbol-token-regexp c-assignment-op-regexp c-<>-multichar-token-regexp c-<-op-cont-regexp c->-op-cont-regexp c-stmt-delim-chars c-stmt-delim-chars-with-comma c-line-comment-starter c-comment-start-regexp c-block-comment-start-regexp c-literal-start-regexp c-doc-comment-start-regexp c-syntactic-ws-start c-syntactic-ws-end c-syntactic-eol c-at-vsemi-p-fn c-vsemi-status-unknown-p-fn c-paragraph-start c-paragraph-separate c-primitive-type-key c-type-prefix-key c-opt-type-modifier-key c-opt-type-component-key c-class-key c-brace-list-key c-other-decl-block-key c-other-decl-block-key-in-symbols-alist c-decl-hangon-key c-prefix-spec-kwds-re c-specifier-key c-not-decl-init-keywords c-opt-block-decls-with-vars-key c-colon-type-list-re c-opt-<>-sexp-key c-block-stmt-1-key c-block-stmt-2-key c-opt-block-stmt-key c-simple-stmt-key c-paren-stmt-key c-opt-asm-stmt-key c-case-kwds-regexp c-label-kwds-regexp c-opt-inexpr-brace-list-key c-decl-block-key c-opt-bitfield-key c-keywords-regexp c-keywords-obarray c-regular-keywords-regexp c-primary-expr-regexp c-decl-prefix-re c-decl-start-re c-decl-prefix-or-start-re c-cast-parens c-block-prefix-charset c-type-decl-prefix-key c-type-decl-suffix-key c-after-suffixed-type-decl-key c-after-suffixed-type-maybe-decl-key c-opt-type-concat-key c-opt-type-suffix-key c-known-type-key c-special-brace-lists c-recognize-knr-p c-recognize-typeless-decls c-recognize-<>-arglists c-recognize-paren-inits c-recognize-paren-inexpr-blocks c-opt-<>-arglist-start c-opt-<>-arglist-start-in-paren c-opt-postfix-decl-spec-key c-recognize-colon-labels c-label-prefix-re c-nonlabel-token-key c-opt-extra-label-key c-opt-friend-key c-opt-method-key c-type-decl-end-used c-hungry-delete-key c-electric-flag c-auto-newline
  (defun . c-calculate-state)
  c-in-literal-cache c-macro-start
  (defun . c-query-and-set-macro-start)
  (defun . c-query-macro-start)
  (defun . c-beginning-of-macro)
  (defun . c-end-of-macro)
  (defun . c-forward-over-cpp-define-id)
  (defun . c-forward-to-cpp-define-body)
  (defun . c-syntactic-content)
  (defun . c-shift-line-indentation)
  (defun . c-keyword-sym)
  (defun . c-keyword-member)
  c-string-syntax c-string-syntax c-string-limit-regexp c-string-limit-regexp c-ws*-string-limit-regexp c-ws*-string-limit-regexp c-parsing-error
  (defun . c-echo-parsing-error)
  c-literal-faces
  (defun . c-put-c-type-property)
  (defun . c-clear-c-type-property)
  (defun . c-debug-add-face)
  (defun . c-debug-remove-face)
  (defun . c-bos-push-state)
  (defun . c-bos-pop-state)
  (defun . c-bos-pop-state-and-retry)
  (defun . c-bos-save-pos)
  (defun . c-bos-restore-pos)
  (defun . c-bos-save-error-info)
  (defun . c-bos-report-error)
  (defun . c-beginning-of-statement-1)
  (defun . c-crosses-statement-barrier-p)
  (defun . c-at-statement-start-p)
  (defun . c-at-expression-start-p)
  (defun . c-forward-single-comment)
  (defun . c-forward-comments)
  (defun . c-backward-single-comment)
  (defun . c-backward-comments)
  (defun . c-debug-sws-msg)
  (defun . c-put-is-sws)
  (defun . c-put-in-sws)
  (defun . c-remove-is-sws)
  (defun . c-remove-in-sws)
  (defun . c-remove-is-and-in-sws)
  (defun . c-invalidate-sws-region-after)
  (defun . c-forward-sws)
  (defun . c-backward-sws)
  (defun . c-partial-ws-p)
  c-state-cache c-state-cache-start c-state-cache-good-pos
  (defun . c-invalidate-state-cache)
  (defun . c-get-fallback-start-pos)
  (defun . c-parse-state)
  c-debug-parse-state
  (defun . c-debug-parse-state)
  (defun . c-toggle-parse-state-debug)
  (defun . c-whack-state-before)
  (defun . c-whack-state-after)
  (defun . c-most-enclosing-brace)
  (defun . c-least-enclosing-brace)
  (defun . c-safe-position)
  (defun . c-beginning-of-syntax)
  (defun . c-on-identifier)
  (defun . c-simple-skip-symbol-backward)
  (defun . c-beginning-of-current-token)
  (defun . c-end-of-current-token)
  c-jump-syntax-balanced c-jump-syntax-balanced c-jump-syntax-unbalanced c-jump-syntax-unbalanced
  (defun . c-forward-token-2)
  (defun . c-backward-token-2)
  (defun . c-forward-token-1)
  (defun . c-backward-token-1)
  (defun . c-syntactic-re-search-forward)
  (defun . c-syntactic-skip-backward)
  (defun . c-slow-in-literal)
  (defun . c-fast-in-literal)
  (defun . c-in-literal)
  (defun . c-literal-limits)
  (defun . c-literal-limits-fast)
  (defun . c-collect-line-comments)
  (defun . c-literal-type)
  c-find-decl-syntactic-pos c-find-decl-match-pos
  (defun . c-invalidate-find-decl-cache)
  (defun . c-debug-put-decl-spot-faces)
  (defun . c-debug-remove-decl-spot-faces)
  (defun . c-find-decl-prefix-search)
  (defun . c-find-decl-spots)
  c-found-types
  (defun . c-clear-found-types)
  (defun . c-add-type)
  (defun . c-unfind-type)
  (defun . c-check-type)
  (defun . c-list-found-types)
  (defun . c-trim-found-types)
  (defun . c-after-change-check-<>-operators)
  c-promote-possible-types c-parse-and-markup-<>-arglists c-restricted-<>-arglists c-record-type-identifiers c-record-ref-identifiers c-last-identifier-range
  (defun . c-record-type-id)
  (defun . c-record-ref-id)
  c-record-found-types
  (defun . c-forward-keyword-prefixed-id)
  (defun . c-forward-id-comma-list)
  (defun . c-forward-keyword-clause)
  (defun . c-forward-<>-arglist)
  (defun . c-forward-<>-arglist-recur)
  (defun . c-backward-<>-arglist)
  (defun . c-forward-name)
  (defun . c-forward-type)
  (defun . c-fdoc-shift-type-backward)
  (defun . c-forward-decl-or-cast-1)
  (defun . c-forward-label)
  (defun . c-forward-objc-directive)
  (defun . c-beginning-of-inheritance-list)
  (defun . c-in-method-def-p)
  (defun . c-in-gcc-asm-p)
  (defun . c-at-toplevel-p)
  (defun . c-just-after-func-arglist-p)
  (defun . c-in-knr-argdecl)
  (defun . c-skip-conditional)
  (defun . c-after-conditional)
  (defun . c-after-special-operator-id)
  (defun . c-backward-to-block-anchor)
  (defun . c-backward-to-decl-anchor)
  (defun . c-search-decl-header-end)
  (defun . c-beginning-of-decl-1)
  (defun . c-end-of-decl-1)
  (defun . c-looking-at-decl-block)
  (defun . c-search-uplist-for-classkey)
  (defun . c-inside-bracelist-p)
  (defun . c-looking-at-special-brace-list)
  (defun . c-looking-at-bos)
  (defun . c-looking-at-inexpr-block)
  (defun . c-looking-at-inexpr-block-backward)
  c-auto-newline-analysis
  (defun . c-brace-anchor-point)
  (defun . c-add-syntax)
  (defun . c-append-syntax)
  (defun . c-add-stmt-syntax)
  (defun . c-add-class-syntax)
  (defun . c-guess-continued-construct)
  (t . c-guess-basic-syntax)
  (defun . c-guess-basic-syntax)
  (defun . c-evaluate-offset)
  (defun . c-calc-offset)
  (defun . c-get-offset)
  (defun . c-get-syntactic-indentation)
  (provide . cc-engine))
 ("/usr/share/emacs/23.0.93/lisp/progmodes/cc-vars.elc"
  (require . cc-defs)
  (defun . c-constant-symbol)
  c-style-variables c-fallback-style
  (defun . c-set-stylevar-fallback)
  (defun . defcustom-c-stylevar)
  (defun . c-valid-offset)
  c-strict-syntax-p c-echo-syntactic-information-p c-report-syntactic-errors c-basic-offset c-tab-always-indent c-insert-tab-function c-syntactic-indentation c-syntactic-indentation-in-macros c-comment-only-line-offset c-indent-comment-alist c-indent-comments-syntactically-p c-block-comment-prefix c-comment-prefix-regexp c-doc-comment-style c-ignore-auto-fill c-cleanup-list c-hanging-braces-alist c-max-one-liner-length c-hanging-colons-alist c-hanging-semi&comma-criteria c-backslash-column c-backslash-max-column c-auto-align-backslashes c-backspace-function c-delete-function c-require-final-newline c-electric-pound-behavior c-special-indent-hook c-label-minimum-indentation c-progress-interval c-objc-method-arg-min-delta-to-bracket c-objc-method-arg-unfinished-offset c-objc-method-parameter-offset c-default-style c-offsets-alist c-inside-block-syms c-inside-block-syms c-style-variables-are-local-p c-mode-hook c++-mode-hook objc-mode-hook java-mode-hook idl-mode-hook pike-mode-hook awk-mode-hook c-mode-common-hook c-initialization-hook c-enable-xemacs-performance-kludge-p c-old-style-variable-behavior
  (defun . c-make-font-lock-extra-types-blurb)
  c-font-lock-extra-types c++-font-lock-extra-types objc-font-lock-extra-types java-font-lock-extra-types idl-font-lock-extra-types pike-font-lock-extra-types c-file-style c-file-offsets c-indentation-style c-current-comment-prefix c-string-par-start c-string-par-separate c-sentence-end-with-esc-eol
  (provide . cc-vars))
 ("/usr/share/emacs/23.0.93/lisp/progmodes/cc-defs.elc"
  (require . regexp-opt)
  c-version c-version-sym c-version-sym c-buffer-is-cc-mode c-inside-eval-when-compile
  (defun . cc-eval-when-compile)
  (defun . c-point)
  (defun . c-region-is-active-p)
  (defun . c-set-region-active)
  (defun . c-delete-and-extract-region)
  (defun . c-safe)
  (defun . c-int-to-char)
  (defun . c-sentence-end)
  (defun . c-default-value-sentence-end)
  (defun . c-save-buffer-state)
  (defun . c-tentative-buffer-changes)
  (defun . c-tnt-chng-record-state)
  (defun . c-tnt-chng-cleanup)
  (defun . c-forward-syntactic-ws)
  (defun . c-backward-syntactic-ws)
  (defun . c-forward-sexp)
  (defun . c-backward-sexp)
  (defun . c-safe-scan-lists)
  (defun . c-go-list-forward)
  (defun . c-go-list-backward)
  (defun . c-up-list-forward)
  (defun . c-up-list-backward)
  (defun . c-down-list-forward)
  (defun . c-down-list-backward)
  (defun . c-go-up-list-forward)
  (defun . c-go-up-list-backward)
  (defun . c-go-down-list-forward)
  (defun . c-go-down-list-backward)
  (defun . c-beginning-of-defun-1)
  (defun . c-at-vsemi-p)
  (defun . c-vsemi-status-unknown-p)
  (defun . c-benign-error)
  (defun . c-with-syntax-table)
  (defun . c-skip-ws-forward)
  (defun . c-skip-ws-backward)
  c-langs-are-parametric
  (defun . c-major-mode-is)
  c-use-extents c-use-extents
  (defun . c-put-char-property-fun)
  (defun . c-put-char-property)
  (defun . c-get-char-property)
  (defun . c-clear-char-property-fun)
  (defun . c-clear-char-property)
  (defun . c-clear-char-properties)
  (defun . c-clear-char-property-with-value-function)
  (defun . c-clear-char-property-with-value)
  (defun . c-put-overlay)
  (defun . c-delete-overlay)
  (defun . c-end-of-defun-1)
  c-<-as-paren-syntax c-<-as-paren-syntax
  (defun . c-mark-<-as-paren)
  c->-as-paren-syntax c->-as-paren-syntax
  (defun . c-mark->-as-paren)
  (defun . c-intersect-lists)
  (defun . c-lookup-lists)
  (defun . c-langelem-sym)
  (defun . c-langelem-pos)
  (defun . c-langelem-col)
  (defun . c-langelem-2nd-pos)
  (defun . c-keep-region-active)
  (defun . c-mode-symbol)
  (defun . c-mode-var)
  (defun . c-got-face-at)
  (defun . c-face-name-p)
  (defun . c-concat-separated)
  (defun . c-make-keywords-re)
  (defun . c-make-bare-char-alt)
  (defun . c-regexp-opt)
  (defun . c-regexp-opt-depth)
  c-emacs-features c-alpha c-alpha c-alnum c-alnum c-digit c-digit c-upper c-upper c-lower c-lower
  (defun . c-add-language)
  c-lang-constants c-lang-const-expansion
  (defun . c-get-current-file)
  (defun . c-lang-defconst-eval-immediately)
  (defun . c-lang-defconst)
  (defun . c-define-lang-constant)
  (defun . c-lang-const)
  c-lang-constants-under-evaluation
  (defun . c-get-lang-constant)
  (defun . c-find-assignment-for-mode)
  (defun . c-lang-major-mode-is)
  (provide . cc-defs))
 ("/home/hobbes/nxhtml/util/majmodpri.el" majmodpri:version majmodpri-idle-sort-timer
  (defun . majmodpri-cancel-idle-sort)
  (defun . majmodpri-start-idle-sort)
  (defun . majmodpri-sort-lists-in-timer)
  majmodpri-schwarzian-ordnum
  (defun . majmodpri-schwarzian-in)
  (defun . majmodpri-schwarzian-out)
  majmodpri-no-nxml
  (defun . majmodpri-priority)
  (defun . majmodpri-compare-auto-modes)
  (defun . majmodpri-sort-auto-mode-alist)
  (defun . majmodpri-sort-magic-list)
  (t . majmodpri-sort-lists)
  (defun . majmodpri-sort-lists)
  (t . majmodpri-apply)
  (defun . majmodpri-apply)
  (defun . majmodpri-sort-apply-to-current)
  (t . majmodpri-apply-priorities)
  (defun . majmodpri-apply-priorities)
  majmodpri-mode-priorities majmodpri-lists-to-sort majmodpri-sort-after-load
  (provide . majmodpri))
 ("/home/hobbes/nxhtml/etc/schema/schema-path-patch.el" rncpp-this-dir
  (defun . rncpp-get-nxml-schema-dir)
  (defun . rncpp-patch-xhtml-loader))
 ("/home/hobbes/nxhtml/nxhtml/nxhtml-menu.el" nxhtml-menu:version
  (require . cl)
  (require . cus-edit)
  (require . dired)
  (require . gimp)
  (require . html-site)
  (require . nxhtml-mode)
  (require . css-color)
  (require . flymake)
  (require . flymake-php)
  (require . flymake-js)
  (require . udev-ecb)
  (require . udev-cedet)
  (require . udev-rinari)
  (defun . nxhtml-nxhtml-in-buffer)
  (defun . nxhtml-nxml-in-buffer)
  (defun . nxhtml-html-in-buffer)
  (defun . nxhtml-nxml-html-in-buffer)
  (defun . nxhtml-this-file-can-have-toc)
  (defun . nxhtml-buffer-possibly-local-viewable)
  (defun . nxhtml-buffer-possibly-remote-viewable)
  (defun . nxhtml-insert-menu-dynamically)
  (defun . nxhtml-menu-image-file)
  (defun . nxhtml-gimp-can-edit)
  (t . nxhtml-edit-with-gimp)
  (defun . nxhtml-edit-with-gimp)
  (t . nxhtml-browse-file)
  (defun . nxhtml-browse-file)
  (t . nxhtml-browse-region)
  (defun . nxhtml-browse-region)
  nxhtml-browseable-buffer-file
  (defun . nxhtml-save-browseable-temp-file)
  nxhtml-minor-mode-menu-map nxhtml-minor-mode-map nxhtml-minor-mode
  (defun . nxhtml-minor-mode)
  nxhtml-minor-mode-modes
  (defun . nxhtml-maybe-turn-on-minor-mode)
  nxhtml-minor-mode-major-mode nxhtml-global-minor-mode
  (t . nxhtml-global-minor-mode)
  (defun . nxhtml-global-minor-mode)
  nxhtml-global-minor-mode-buffers
  (defun . nxhtml-global-minor-mode-enable-in-buffers)
  (defun . nxhtml-global-minor-mode-check-buffers)
  (defun . nxhtml-global-minor-mode-cmhh)
  (defun . nxhtml-docfile)
  (defun . nxhtml-docfile-url)
  (defun . nxhtml-overview)
  (defun . nxhtml-tutorials)
  (defun . nxhtml-custom-valfaced)
  (defun . nxhtml-custom-insert-nxhtml-row)
  (defun . nxhtml-custom-h1)
  (defun . widget-button-notify)
  (defun . widget-insert-link)
  (defun . widget-insert-button)
  (defun . nxhtml-custom-url-link)
  (defun . nxhtml-custom-describe-defun)
  (defun . custom-set-and-prepare-save)
  (defun . nxhtml-welcome)
  nxhtml-skip-welcome
  (defun . nxhtml-skip-welcome)
  (defun . nxhtml-say-welcome-unless-skip)
  (provide . nxhtml-menu))
 ("/home/hobbes/nxhtml/util/udev-rinari.el" udev-rinari:version
  (require . udev)
  udev-rinari-dir udev-rinari-load-rinari udev-rinari-steps udev-rinari-update-buffer
  (defun . udev-rinari-buffer-name)
  (defun . udev-rinari-check-conflicts)
  (defun . udev-rinari-setup-when-finished)
  (t . udev-rinari-update)
  (defun . udev-rinari-update)
  udev-rinari-fetch-buffer
  (defun . udev-rinari-fetch)
  udev-rinari-diff-file udev-rinari-fetch-diff-buffer
  (defun . udev-rinari-fetch-diff)
  (defun . udev-rinari-check-diff)
  (provide . udev-rinari))
 ("/home/hobbes/nxhtml/util/udev-cedet.el" udev-cedet:version
  (require . udev)
  udev-cedet-dir
  (defun . udev-cedet-load-cedet)
  udev-cedet-load-cedet udev-cedet-steps
  (defun . udev-cedet-buffer-name)
  udev-cedet-update-buffer
  (defun . udev-cedet-setup-when-finished)
  (t . udev-cedet-update)
  (defun . udev-cedet-update)
  (defun . udev-cedet-fetch)
  (defun . udev-cedet-cvs-dir)
  (defun . udev-cedet-fetch-diff)
  (defun . udev-cedet-check-diff)
  (defun . udev-cedet-install-add-debug)
  (defun . udev-cedet-install)
  (provide . udev-cedet))
 ("/home/hobbes/nxhtml/util/udev-ecb.el" udev-ecb:version
  (require . udev)
  udev-ecb-dir
  (defun . udev-ecb-load-ecb)
  udev-ecb-load-ecb udev-ecb-steps
  (defun . udev-ecb-buffer-name)
  udev-ecb-update-buffer
  (defun . udev-ecb-check-cedet)
  (defun . udev-ecb-setup-when-finished)
  (t . udev-ecb-update)
  (defun . udev-ecb-update)
  (defun . udev-ecb-fetch)
  (defun . udev-ecb-cvs-dir)
  (defun . udev-ecb-fetch-diff)
  (defun . udev-ecb-check-diff)
  (defun . udev-ecb-install)
  (provide . udev-ecb))
 ("/home/hobbes/nxhtml/util/udev.el" udev:version
  (require . cl)
  (require . cus-edit)
  udev-log-buffer udev-is-log-buffer
  (defun . udev-check-is-log-buffer)
  udev-this-chain udev-last-error
  (defun . udev-set-last-error)
  (defun . udev-chain)
  (defun . udev-this-step)
  (defun . udev-goto-next-step)
  (defun . udev-num-steps)
  (defun . udev-step-num)
  (defun . udev-finish-function)
  udev-control-mode-map udev-control-mode-map udev-control-mode-syntax-table udev-control-mode-abbrev-table udev-control-mode-abbrev-table
  (defun . udev-control-mode)
  (defun . udev-call-first-step)
  udev-step-keymap
  (defun . udev-step-at-point)
  (defun . udev-rerun-this-step)
  (defun . udev-continue-from-this-step)
  (defun . udev-goto-this-step-source)
  (defun . udev-call-this-step)
  (defun . udev-call-next-step)
  udev-orig-sentinel
  (defun . udev-compilation-sentinel)
  (defun . udev-set-compilation-end-message)
  udev-continue-on-error-function
  (defun . udev-buffer-name)
  udev-this-dir
  (defun . udev-batch-compile)
  (defun . udev-fetch-cvs-diff)
  (defun . udev-cvs-diff-continue)
  (defun . udev-check-cvs-diff)
  (defun . udev-send-buffer-process)
  (provide . udev))
 ("/home/hobbes/nxhtml/related/flymake-js.el"
  (require . flymake)
  flymake-allowed-js-file-name-masks flymake-js-err-line-pattern-re flymake-js-rhino-jar flymake-js-rhino-js flymake-js-engine
  (defun . flymake-js-init)
  (defun . flymake-js-load)
  flymake-js-has-engine
  (defun . flymake-js-has-engine)
  (defun . flymake-js-turn-on)
  flymake-js-on
  (provide . flymake-js))
 ("/home/hobbes/nxhtml/related/flymake-php.el"
  (require . flymake)
  flymake-allowed-php-file-name-masks flymake-php-err-line-pattern-re
  (defun . flymake-php-init)
  flymake-php-has-engine
  (defun . flymake-php-has-engine)
  (defun . flymake-php-turn-on)
  flymake-php-on
  (defun . flymake-php-load)
  (provide . flymake-php))
 ("/usr/share/emacs/23.0.93/lisp/progmodes/flymake.elc" flymake-is-running flymake-timer flymake-last-change-time flymake-check-start-time flymake-check-was-interrupted flymake-err-info flymake-new-err-info
  (defun . flymake-makehash)
  (defun . flymake-float-time)
  (defun . flymake-replace-regexp-in-string)
  (defun . flymake-split-string)
  (defun . flymake-get-temp-dir)
  (defun . flymake-line-beginning-position)
  (defun . flymake-line-end-position)
  (defun . flymake-posn-at-point-as-event)
  (defun . flymake-popup-menu)
  (defun . flymake-make-emacs-menu)
  flymake-log-level
  (defun . flymake-log)
  (defun . flymake-ins-after)
  (defun . flymake-set-at)
  flymake-processes flymake-output-residual flymake-allowed-file-name-masks
  (defun . flymake-get-file-name-mode-and-masks)
  (defun . flymake-can-syntax-check-file)
  (defun . flymake-get-init-function)
  (defun . flymake-get-cleanup-function)
  (defun . flymake-get-real-file-name-function)
  flymake-find-buildfile-cache
  (defun . flymake-get-buildfile-from-cache)
  (defun . flymake-add-buildfile-to-cache)
  (defun . flymake-clear-buildfile-cache)
  (defun . flymake-find-buildfile)
  (defun . flymake-fix-file-name)
  (defun . flymake-same-files)
  flymake-master-file-dirs flymake-master-file-count-limit
  (defun . flymake-find-possible-master-files)
  (defun . flymake-master-file-compare)
  flymake-check-file-limit
  (defun . flymake-check-patch-master-file-buffer)
  (defun . flymake-replace-region)
  (defun . flymake-read-file-to-temp-buffer)
  (defun . flymake-copy-buffer-to-temp-buffer)
  (defun . flymake-check-include)
  (defun . flymake-find-buffer-for-file)
  (defun . flymake-create-master-file)
  (defun . flymake-save-buffer-in-file)
  (defun . flymake-save-string-to-file)
  (defun . flymake-read-file-to-string)
  (defun . flymake-process-filter)
  (defun . flymake-process-sentinel)
  (defun . flymake-post-syntax-check)
  (defun . flymake-parse-output-and-residual)
  (defun . flymake-parse-residual)
  (defun . flymake-er-make-er)
  (defun . flymake-er-get-line)
  (defun . flymake-er-get-line-err-info-list)
  (defun . flymake-ler-file)
  (defun . flymake-ler-line)
  (defun . flymake-ler-type)
  (defun . flymake-ler-text)
  (defun . flymake-ler-full-file)
  (defun . flymake-ler-p)
  (defun . copy-flymake-ler)
  (defun . flymake-ler-make-ler)
  (defun . flymake-ler-set-file)
  (defun . flymake-ler-set-full-file)
  (defun . flymake-ler-set-line)
  (defun . flymake-get-line-err-count)
  (defun . flymake-get-err-count)
  (defun . flymake-fix-line-numbers)
  (defun . flymake-highlight-err-lines)
  (defun . flymake-overlay-p)
  (defun . flymake-make-overlay)
  (defun . flymake-delete-own-overlays)
  (defun . flymake-region-has-flymake-overlays)
  (defface . flymake-errline)
  (defface . flymake-warnline)
  (defun . flymake-highlight-line)
  (defun . flymake-parse-err-lines)
  (defun . flymake-split-output)
  (defun . flymake-reformat-err-line-patterns-from-compile-el)
  (require . compile)
  flymake-err-line-patterns
  (defun . flymake-parse-line)
  (defun . flymake-find-err-info)
  (defun . flymake-line-err-info-is-less-or-equal)
  (defun . flymake-add-line-err-info)
  (defun . flymake-add-err-info)
  (defun . flymake-get-project-include-dirs-imp)
  flymake-get-project-include-dirs-function
  (defun . flymake-get-project-include-dirs)
  (defun . flymake-get-system-include-dirs)
  flymake-project-include-dirs-cache
  (defun . flymake-get-project-include-dirs-from-cache)
  (defun . flymake-add-project-include-dirs-to-cache)
  (defun . flymake-clear-project-include-dirs-cache)
  (defun . flymake-get-include-dirs)
  (defun . flymake-safe-delete-file)
  (defun . flymake-safe-delete-directory)
  flymake-compilation-prevents-syntax-check
  (defun . flymake-start-syntax-check)
  (defun . flymake-start-syntax-check-process)
  (defun . flymake-kill-process)
  (defun . flymake-stop-all-syntax-checks)
  (defun . flymake-compilation-is-running)
  (defun . flymake-compile)
  flymake-no-changes-timeout
  (defun . flymake-on-timer-event)
  (defun . flymake-current-line-no)
  (defun . flymake-count-lines)
  (defun . flymake-display-err-menu-for-current-line)
  (defun . flymake-make-err-menu-data)
  (defun . flymake-goto-file-and-line)
  flymake-mode-line flymake-mode-line-e-w flymake-mode-line-status
  (defun . flymake-report-status)
  (defun . flymake-display-warning)
  flymake-gui-warnings-enabled
  (defun . flymake-report-fatal-status)
  flymake-start-syntax-check-on-find-file flymake-mode
  (t . flymake-mode)
  (defun . flymake-mode)
  (t . flymake-mode-on)
  (defun . flymake-mode-on)
  (t . flymake-mode-off)
  (defun . flymake-mode-off)
  flymake-start-syntax-check-on-newline
  (defun . flymake-after-change-function)
  (defun . flymake-after-save-hook)
  (defun . flymake-kill-buffer-hook)
  (defun . flymake-find-file-hook)
  (defun . flymake-get-first-err-line-no)
  (defun . flymake-get-last-err-line-no)
  (defun . flymake-get-next-err-line-no)
  (defun . flymake-get-prev-err-line-no)
  (defun . flymake-skip-whitespace)
  (defun . flymake-goto-line)
  (defun . flymake-goto-next-error)
  (defun . flymake-goto-prev-error)
  (defun . flymake-patch-err-text)
  (defun . flymake-create-temp-inplace)
  (defun . flymake-create-temp-with-folder-structure)
  (defun . flymake-delete-temp-directory)
  flymake-temp-source-file-name flymake-master-file-name flymake-temp-master-file-name flymake-base-dir
  (defun . flymake-init-create-temp-buffer-copy)
  (defun . flymake-simple-cleanup)
  (defun . flymake-get-real-file-name)
  (defun . flymake-get-full-patched-file-name)
  (defun . flymake-get-full-nonpatched-file-name)
  (defun . flymake-init-find-buildfile-dir)
  (defun . flymake-init-create-temp-source-and-master-buffer-copy)
  (defun . flymake-master-cleanup)
  (defun . flymake-get-syntax-check-program-args)
  (defun . flymake-get-make-cmdline)
  (defun . flymake-get-ant-cmdline)
  (defun . flymake-simple-make-init-impl)
  (defun . flymake-simple-make-init)
  (defun . flymake-master-make-init)
  (defun . flymake-find-make-buildfile)
  (defun . flymake-master-make-header-init)
  (defun . flymake-simple-make-java-init)
  (defun . flymake-simple-ant-java-init)
  (defun . flymake-simple-java-cleanup)
  (defun . flymake-perl-init)
  (defun . flymake-php-init)
  (defun . flymake-get-tex-args)
  (defun . flymake-simple-tex-init)
  (defun . flymake-master-tex-init)
  (defun . flymake-get-include-dirs-dot)
  (defun . flymake-xml-init)
  (provide . flymake))
 ("/home/hobbes/nxhtml/util/css-color.el" css-color:version
  (require . cl)
  (defun . css-color-turn-on-in-buffer)
  css-color-mode-major-mode css-color-global-mode
  (t . css-color-global-mode)
  (defun . css-color-global-mode)
  css-color-global-mode-buffers
  (defun . css-color-global-mode-enable-in-buffers)
  (defun . css-color-global-mode-check-buffers)
  (defun . css-color-global-mode-cmhh)
  css-color-hex-chars css-color-hex-re css-color-hsl-re css-color-rgb-re css-color-html-colors css-color-html-re css-color-color-re css-color-keywords css-color-mode
  (t . css-color-mode)
  (defun . css-color-mode)
  (defun . css-color-font-lock-hook-fun)
  css-color-map css-color-generic-map
  (defun . css-color-pal-lumsig)
  (defun . css-color-foreground-color)
  (defun . css-color-normalize-hue)
  (defun . css-color-within-bounds)
  (defun . css-color-hex-to-rgb)
  (defun . css-color-hex-to-hsv)
  (defun . css-color-rgb-to-hex)
  (defun . css-color-rgb-to-hsv)
  (defun . css-color-rgb-to-hsl)
  (defun . css-color-hsv-to-hsl)
  (defun . css-color-hsv-to-hex)
  (defun . css-color-hsv-to-rgb)
  (defun . css-color-hsv-to-prop-hexstring)
  (defun . css-color-hsl-to-rgb-fractions)
  (defun . css-color-hsl-to-rgb)
  (defun . css-color-hsl-to-hex)
  (defun . css-color-hue-to-rgb)
  (defun . css-color-parse-hsl)
  (defun . css-color-inchue)
  (defun . css-color-incsat)
  (defun . css-color-incval)
  (defun . css-color-hexval-beginning)
  (defun . css-color-replcolor-at-p)
  (defun . css-color-get-color-at-point)
  (defun . css-color-adj-hue-at-p)
  (defun . css-color-adj-saturation-at-p)
  (defun . css-color-adj-value-at-p)
  (defun . css-color-what-channel)
  (defun . css-color-adjust-hex-at-p)
  (defun . css-color-up)
  (defun . css-color-down)
  (defun . css-color-hue-up)
  (defun . css-color-hue-down)
  (defun . css-color-saturation-up)
  (defun . css-color-saturation-down)
  (defun . css-color-value-up)
  (defun . css-color-value-down)
  (defun . css-color-num-up)
  (defun . css-color-num-down)
  (defun . css-color-beginning-of-color)
  (defun . css-color-end-of-color)
  (defun . css-color-color-info)
  css-color-type-circle
  (defun . css-color-next-type)
  (defun . css-color-cycle-type)
  (defun . css-color-string-hex-to-hsl)
  (defun . css-color-string-hsl-to-rgb)
  (defun . css-color-string-rgb-to-name)
  (defun . css-color-string-name-to-hex)
  (defun . css-color-string-rgb-to-hex)
  (defun . css-color-string-hsl-to-hex)
  (defun . css-color-next-channel)
  (defun . css-color-hexify-anystring)
  (defun . css-color-toggle-percentage)
  css-color-fg-history css-color-bg-history
  (defun . css-color-test)
  (defun . css-color-run-tests)
  (provide . css-color))
 ("/home/hobbes/nxhtml/nxhtml/nxhtml-mode.el"
  (require . mumamo)
  (require . cl)
  (require . appmenu-fold)
  (require . fold-dwim)
  (require . typesetter)
  (require . button)
  (require . loadhist)
  (require . nxml-mode)
  (require . rngalt)
  (require . url-parse)
  (require . url-expand)
  (require . popcmp)
  (require . html-imenu)
  (require . tidy-xhtml)
  (require . html-quote)
  (defun . nxhtml-version)
  (defun . nxhtml-setup-for-fold-dwim)
  (defun . nxhtml-outline-level)
  (defun . nxhtml-hs-forward-element)
  nxhtml-use-imenu nxhtml-default-encoding
  (defun . nxhtml-insert-empty-frames-page)
  (defun . nxhtml-insert-empty-page)
  (defun . nxhtml-empty-page-completion)
  nxhtml-mode-hook
  (defun . nxhtml-help)
  nxhtml-current-validation-header tidy-menu-symbol
  (defun . tidy-menu-symbol)
  (defun . nxhtml-change-mode)
  nxhtml-heading-element-name-regexp nxhtml-mode-map nxhtml-mode-syntax-table nxhtml-mode-abbrev-table nxhtml-mode-abbrev-table
  (t . nxhtml-mode)
  (defun . nxhtml-mode)
  (defun . nxhtml-quote-html)
  nxhtml-single-tags
  (defun . nxthml-is-single-tag)
  nxhtml-help-attribute-name nxhtml-help-attribute-name-tag nxhtml-help-tag
  (t . nxhtml-short-tag-help)
  (defun . nxhtml-short-tag-help)
  nxhtml-no-single-tags nxhtml-no-end-tags nxhtml-predicate-error
  (defun . nxhtml-find-ids)
  (defun . nxhtml-read-url)
  (defun . nxhtml-read-url-type)
  nxhtml-read-url-history nxhtml-read-web-url-history nxhtml-read-mail-url-history nxhtml-in-xml-attribute-value-regex
  (defun . nxhtml-mailto-predicate)
  nxhtml-image-completion-pattern
  (defun . nxhtml-image-url-predicate)
  nxhtml-css-completion-pattern
  (defun . nxhtml-css-url-predicate)
  nxhtml-script-completion-pattern
  (defun . nxhtml-script-url-predicate)
  (defun . nxhtml-coding-systems-complete)
  nxhtml-in-proc-instr-back-regex nxhtml-in-proc-instr-forw-regex rngalt-in-pre-attribute-value-regex
  (defun . nxhtml-check-where)
  nxhtml-tag-sets nxhtml-attr-sets
  (defun . nxhtml-complete-last-try)
  (defun . nxhtml-img-tag-do-also)
  (defun . nxhtml-redisplay-complete)
  (defun . nxhtml-read-from-minibuffer)
  (defun . nxhtml-meta-tag-do-also)
  (defun . nxhtml-style-tag-do-also)
  (defun . nxhtml-script-tag-do-also)
  (defun . nxhtml-link-tag-do-also)
  (defun . nxhtml-input-tag-do-also)
  (defun . nxhtml-do-also-value)
  (defun . nxhtml-form-tag-do-also)
  nxhtml-complete-tag-do-also
  (defun . nxhtml-complete-tag-do-also)
  (defun . nxhtml-turn-onoff-tag-do-also)
  nxhtml-tag-do-also
  (defun . nxhtml-tag-do-also-toggle)
  (defun . nxhtml-check-tag-do-also)
  nxhtml-validation-header-mode
  (t . nxhtml-validation-header-mode)
  (defun . nxhtml-validation-header-mode)
  (defun . nxhtml-can-insert-page-here)
  (defun . nxhtml-complete-first-try)
  (defun . nxhtml-completing-read-tag)
  (defun . nxhtml-add-required-to-attr-set)
  (defun . nxhtml-get-tag-specific-attr-help)
  nxhtml-in-start-tag-regex
  (defun . nxhtml-completing-read-attribute-name)
  (defun . nxhtml-completing-read-attribute-value)
  (defun . nxhtml-read-link-type)
  (defun . nxhtml-read-link-media)
  (defun . nxhtml-read-link-rel)
  (defun . nxhtml-read-meta-name)
  (defun . nxhtml-read-meta-content)
  (defun . nxhtml-read-meta-scheme)
  (defun . nxhtml-read-meta-http-equiv)
  nxhtml-validation-headers nxhtml-default-validation-header
  (defun . nxhtml-must-have-validation-headers)
  nxhtml-set-validation-header-hist nxhtml-guess-validation-header-alist
  (defun . nxhtml-guess-validation-header)
  (defun . nxhtml-open-dir-saved-validation-headers)
  (defun . nxhtml-get-saved-validation-header)
  (defun . nxhtml-remove-saved-validation-header)
  (defun . nxhtml-save-validation-header)
  (defun . nxhtml-update-saved-validation-header)
  (defun . nxhtml-get-default-validation-header)
  (defun . nxhtml-set-validation-header)
  (defun . nxhtml-apply-validation-header)
  (defun . nxhtml-update-validation-header)
  (defun . nxhtml-vhm-change-major)
  (defun . nxhtml-recheck-validation-header)
  (defun . nxhtml-validation-header-empty)
  (defun . nxhtml-turn-on-validation-header-mode)
  (defun . nxhtml-vhm-mumamo-change-major)
  (defun . nxhtml-vhm-mumamo-after-change-major)
  nxhtml-validation-headers-check nxhtml-validation-header-mumamo-modes
  (defun . nxhtml-add-validation-header-if-mumamo)
  nxhtml-validation-header-if-mumamo
  (defun . nxhtml-validation-header-if-mumamo-toggle)
  (defun . nxhtml-warnings-are-visible)
  nxhtml-old-rng-error-face
  (defun . nxhtml-toggle-visible-warnings)
  nxml-untag-select
  (defun . nxml-untag-element)
  (defun . nxhtml-rollover-insert-2v)
  (provide . nxhtml-mode))
 ("/home/hobbes/nxhtml/nxhtml/html-quote.el" html-quote-html
  (defun . html-quote-html-char)
  (defun . html-quote-html-string)
  (provide . html-quote))
 ("/home/hobbes/nxhtml/nxhtml/tidy-xhtml.el" tidy-xhtml:version
  (require . cl)
  (require . ediff)
  (require . mumamo)
  (require . html-site)
  (require . easymenu)
  (require . compile)
  (require . cus-edit)
  (require . help-mode)
  (defun . tidy-xemacs-p)
  (defun . tidy-windows-p)
  (defun . tidy-x-event-function)
  (defun . tidy-x-event-object)
  (defun . tidy-x-find-menu-item)
  (defun . tidy-x-get-popup-menu-response)
  (defun . tidy-x-make-event)
  (defun . tidy-x-misc-user-event-p)
  tidy-warnings tidy-errors tidy-message tidy-batch-last-file tidy-default-config-file tidy-config-file-parsed tidy-config-file tidy-shell-program tidy-temp-directory tidy-menu-lock tidy-menu-x-position tidy-debug
  (defun . tidy-toggle-debug)
  tidy-options-alist
  (defun . tidy-build-options-alist)
  tidy-xhtml-values
  (defun . tidy-xhtml-options-ok)
  (defun . tidy-show-xhtml-options)
  (defun . tidy-set-xhtml-options)
  current-menubar
  (defun . tidy-menu-position)
  (defun . tidy-menu-lock)
  (defun . tidy-menu-lookup)
  tidy-menu tidy-menu-position tidy-menu-state
  (defun . tidy-menu-position)
  (defun . tidy-menu-lock)
  (defun . tidy-menu-lookup)
  (defun . tidy-set)
  (defun . tidy-boolean-entry)
  (defun . tidy-list-entry)
  (defun . tidy-set-string)
  (defun . tidy-set-integer)
  (defun . tidy-string-entry)
  (defun . tidy-integer-entry)
  (defun . tidy-exe-found)
  tidy-top-menu tidy-newline-menu tidy-doctype-menu tidy-emacs-encoding-lbl
  (defun . tidy-create-encoding-menu)
  tidy-output-encoding-menu tidy-menu-symbol
  (t . tidy-build-menu)
  (defun . tidy-build-menu)
  (defun . event-point)
  (defun . tidy-describe-this-option-mouse)
  (defun . tidy-describe-this-option)
  (defun . tidy-quit-describe-options)
  (defun . tidy-current-line)
  (defun . tidy-describe-options)
  (defun . tidy-parse-config-file)
  (defun . tidy-save-settings)
  tidy-markup
  (defun . tidy-set-buffer-unmodified)
  tidy-encodings-mime-charset-list
  (defun . tidy-get-buffer-encoding)
  (defun . tidy-get-tidy-encoding)
  (defun . tidy-temp-config-file)
  tidy-output-buf-name tidy-tidied-buffer
  (defun . tidy-check-is-tidied)
  tidy-control-buffer-name
  (defun . tidy-buffer)
  (defun . tidy-after-ediff)
  (defun . tidy-ediff-buffers)
  (defun . tidy-remove-ctrl-m)
  tidy-html-files-re
  (defun . tidy-is-html-file)
  (defun . tidy-contains)
  tidy-tree-files
  (defun . tidy-tree-next)
  (defun . tidy-tree)
  (defun . tidy-html-site)
  (defun . tidy-batch-sentinel)
  (defun . tidy-batch-output-filter)
  (defun . tidy-batch)
  (defun . wab-compilation-button-at)
  (defun . wab-click)
  wab-errors-supress
  (defun . wab-fb-errmsg)
  (defun . wab-fb-helper)
  wab-button-list
  (defun . wab-fb)
  (defun . wab-backward)
  (defun . wab-forward)
  wab-compilation-mode-map wab-compilation-mode-syntax-table wab-compilation-mode-abbrev-table wab-compilation-mode-abbrev-table
  (defun . wab-compilation-mode)
  tidy-menu-mode-map tidy-menu-mode
  (defun . tidy-menu-mode)
  (provide . tidy-xhtml))
 ("/usr/share/emacs/23.0.93/lisp/ediff.elc" ediff-version ediff-date
  (provide . ediff)
  (require . ediff-init)
  (require . ediff-mult)
  ediff-use-last-dir ediff-last-dir-A ediff-last-dir-B ediff-last-dir-C ediff-last-dir-ancestor ediff-last-merge-autostore-dir
  (defun . ediff-set-read-only-in-buf-A)
  (defun . ediff-get-default-file-name)
  (t . ediff-files)
  (defun . ediff-files)
  (t . ediff-files3)
  (defun . ediff-files3)
  (defun . ediff3)
  (defun . ediff-find-file)
  (defun . ediff-files-internal)
  (defun . ediff)
  (t . ediff-backup)
  (defun . ediff-backup)
  (t . ediff-buffers)
  (defun . ediff-buffers)
  (defun . ebuffers)
  (t . ediff-buffers3)
  (defun . ediff-buffers3)
  (defun . ebuffers3)
  (defun . ediff-buffers-internal)
  (defun . ediff-get-default-directory-name)
  (t . ediff-directories)
  (defun . ediff-directories)
  (defun . edirs)
  (t . ediff-directory-revisions)
  (defun . ediff-directory-revisions)
  (defun . edir-revisions)
  (t . ediff-directories3)
  (defun . ediff-directories3)
  (defun . edirs3)
  (t . ediff-merge-directories)
  (defun . ediff-merge-directories)
  (defun . edirs-merge)
  (t . ediff-merge-directories-with-ancestor)
  (defun . ediff-merge-directories-with-ancestor)
  (t . ediff-merge-directory-revisions)
  (defun . ediff-merge-directory-revisions)
  (defun . edir-merge-revisions)
  (t . ediff-merge-directory-revisions-with-ancestor)
  (defun . ediff-merge-directory-revisions-with-ancestor)
  (defun . edir-merge-revisions-with-ancestor)
  (defun . edirs-merge-with-ancestor)
  (defun . ediff-directories-internal)
  (defun . ediff-directory-revisions-internal)
  (t . ediff-windows-wordwise)
  (defun . ediff-windows-wordwise)
  (t . ediff-windows-linewise)
  (defun . ediff-windows-linewise)
  (defun . ediff-windows)
  (t . ediff-regions-wordwise)
  (defun . ediff-regions-wordwise)
  (t . ediff-regions-linewise)
  (defun . ediff-regions-linewise)
  (defun . ediff-regions-internal)
  (defun . ediff-merge)
  (defun . ediff-merge-on-startup)
  (t . ediff-merge-files)
  (defun . ediff-merge-files)
  (t . ediff-merge-files-with-ancestor)
  (defun . ediff-merge-files-with-ancestor)
  (defun . ediff-merge-with-ancestor)
  (t . ediff-merge-buffers)
  (defun . ediff-merge-buffers)
  (t . ediff-merge-buffers-with-ancestor)
  (defun . ediff-merge-buffers-with-ancestor)
  (t . ediff-merge-revisions)
  (defun . ediff-merge-revisions)
  (t . ediff-merge-revisions-with-ancestor)
  (defun . ediff-merge-revisions-with-ancestor)
  (t . ediff-patch-file)
  (defun . ediff-patch-file)
  (t . ediff-patch-buffer)
  (defun . ediff-patch-buffer)
  (defun . epatch)
  (defun . epatch-buffer)
  (t . ediff-revision)
  (defun . ediff-revision)
  (defun . erevision)
  (defun . ediff-load-version-control)
  (t . ediff-version)
  (defun . ediff-version)
  (t . ediff-documentation)
  (defun . ediff-documentation)
  (require . ediff-util))
 ("/usr/share/emacs/23.0.93/lisp/ediff-util.elc"
  (provide . ediff-util)
  ediff-after-quit-hook-internal
  (require . ediff-init)
  (require . ediff-help)
  (require . ediff-mult)
  (require . ediff-wind)
  (require . ediff-diff)
  (require . ediff-merg)
  (defun . ediff-mode)
  ediff-mode-map
  (defun . ediff-set-keys)
  (defun . ediff-reload-keymap)
  (defun . ediff-setup-keymap)
  (defun . ediff-setup)
  (defun . ediff-setup-control-buffer)
  (defun . ediff-arrange-autosave-in-merge-jobs)
  (defun . ediff-update-diffs)
  (defun . ediff-revert-buffers-then-recompute-diffs)
  (defun . ediff-recenter)
  (defun . ediff-recenter-one-window)
  (defun . ediff-recenter-ancestor)
  (defun . ediff-toggle-split)
  (defun . ediff-toggle-hilit)
  (defun . ediff-toggle-autorefine)
  (defun . ediff-show-ancestor)
  (defun . ediff-make-or-kill-fine-diffs)
  (defun . ediff-toggle-help)
  (defun . ediff-toggle-read-only)
  (defun . ediff-maybe-checkout)
  (defun . ediff-file-checked-out-p)
  (defun . ediff-file-checked-in-p)
  (defun . ediff-file-compressed-p)
  (defun . ediff-swap-buffers)
  (defun . ediff-toggle-wide-display)
  (t . ediff-toggle-multiframe)
  (defun . ediff-toggle-multiframe)
  (t . ediff-toggle-use-toolbar)
  (defun . ediff-toggle-use-toolbar)
  (defun . ediff-kill-bottom-toolbar)
  (defun . ediff-make-bottom-toolbar)
  (defun . ediff-toggle-show-clashes-only)
  (defun . ediff-toggle-skip-changed-regions)
  (defun . ediff-toggle-narrow-region)
  (defun . ediff-visible-region)
  (defun . ediff-operate-on-windows)
  (defun . ediff-scroll-vertically)
  (defun . ediff-scroll-horizontally)
  (defun . ediff-position-region)
  (defun . ediff-get-lines-to-region-end)
  (defun . ediff-get-lines-to-region-start)
  (defun . ediff-get-region-size-coefficient)
  (defun . ediff-next-difference)
  (defun . ediff-previous-difference)
  (defun . ediff-jump-to-difference)
  (defun . ediff-jump-to-difference-at-point)
  (defun . ediff-diff-at-point)
  (defun . ediff-diff-to-diff)
  (defun . ediff-copy-A-to-B)
  (defun . ediff-copy-B-to-A)
  (defun . ediff-copy-A-to-C)
  (defun . ediff-copy-B-to-C)
  (defun . ediff-copy-C-to-B)
  (defun . ediff-copy-C-to-A)
  (defun . ediff-copy-diff)
  (defun . ediff-save-diff-region)
  (defun . ediff-test-save-region)
  (defun . ediff-pop-diff)
  (defun . ediff-restore-diff)
  (defun . ediff-restore-diff-in-merge-buffer)
  (defun . ediff-toggle-regexp-match)
  (defun . ediff-toggle-skip-similar)
  (defun . ediff-focus-on-regexp-matches)
  (defun . ediff-hide-regexp-matches)
  (defun . ediff-quit)
  (defun . ediff-really-quit)
  (defun . ediff-good-frame-under-mouse)
  (defun . ediff-delete-temp-files)
  (defun . ediff-cleanup-mess)
  (defun . ediff-janitor)
  (defun . ediff-dispose-of-variant-according-to-user)
  (defun . ediff-maybe-save-and-delete-merge)
  (defun . ediff-write-merge-buffer-and-maybe-kill)
  (defun . ediff-default-suspend-function)
  (defun . ediff-suspend)
  (defun . ediff-status-info)
  (defun . ediff-select-difference)
  (defun . ediff-unselect-difference)
  (defun . ediff-unselect-and-select-difference)
  (defun . ediff-highlight-diff-in-one-buffer)
  (defun . ediff-unhighlight-diff-in-one-buffer)
  (defun . ediff-unhighlight-diffs-totally-in-one-buffer)
  (defun . ediff-highlight-diff)
  (defun . ediff-unhighlight-diff)
  (defun . ediff-unhighlight-diffs-totally)
  (defun . ediff-read-file-name)
  (defun . ediff-make-temp-file)
  (defun . ediff-make-empty-tmp-file)
  (defun . ediff-verify-file-buffer)
  (defun . ediff-verify-file-merge-buffer)
  (defun . ediff-filename-magic-p)
  (defun . ediff-save-buffer)
  (defun . ediff-clone-buffer-for-region-comparison)
  (defun . ediff-clone-buffer-for-window-comparison)
  (defun . ediff-clone-buffer-for-current-diff-comparison)
  (defun . ediff-make-cloned-buffer)
  (defun . ediff-make-indirect-buffer)
  (defun . ediff-compute-custom-diffs-maybe)
  (defun . ediff-show-diff-output)
  (defun . ediff-inferior-compare-regions)
  (defun . ediff-remove-flags-from-buffer)
  (defun . ediff-place-flags-in-buffer)
  (defun . ediff-place-flags-in-buffer1)
  (defun . ediff-empty-diff-region-p)
  (defun . ediff-whitespace-diff-region-p)
  (defun . ediff-get-region-contents)
  (defun . ediff-get-diff-posn)
  (defun . ediff-restore-highlighting)
  (defun . ediff-clear-diff-vector)
  (defun . ediff-make-bullet-proof-overlay)
  (defun . ediff-make-current-diff-overlay)
  (defun . ediff-other-buffer)
  (defun . ediff-get-selected-buffers)
  (defun . ediff-unique-buffer-name)
  (defun . ediff-submit-report)
  (defun . ediff-choose-syntax-table)
  (defun . ediff-deactivate-mark)
  (defun . ediff-activate-mark)
  (defun . ediff-nuke-selective-display)
  (defun . ediff-save-variables)
  (defun . ediff-restore-variables)
  (defun . ediff-change-saved-variable)
  (defun . ediff-save-protected-variables)
  (defun . ediff-restore-protected-variables)
  (defun . ediff-save-buffer-in-file)
  ediff-command-begin-time
  (defun . ediff-calc-command-time)
  (defun . ediff-save-time)
  (defun . ediff-profile)
  (defun . ediff-print-diff-vector)
  (defun . ediff-debug-info)
  (defun . ediff-member)
  (defun . ediff-format-bindings-of)
  (defun . ediff-intersection)
  (defun . ediff-union)
  (defun . ediff-set-difference)
  (defun . ediff-add-to-history)
  (defun . ediff-copy-list))
 ("/usr/share/emacs/23.0.93/lisp/ediff-merg.elc"
  (require . ediff-init)
  ediff-quit-merge-hook ediff-default-variant ediff-combination-pattern ediff-show-clashes-only ediff-skip-merge-regions-that-differ-from-default
  (defun . ediff-merge-region-is-non-clash)
  (defun . ediff-merge-region-is-non-clash-to-skip)
  (defun . ediff-skip-merge-region-if-changed-from-default-p)
  (defun . ediff-get-combined-region)
  (defun . ediff-set-state-of-all-diffs-in-all-buffers)
  (defun . ediff-set-state-of-diff-in-all-buffers)
  (defun . ediff-set-merge-mode)
  (defun . ediff-do-merge)
  (defun . ediff-re-merge)
  (defun . ediff-shrink-window-C)
  (defun . ediff-combine-diffs)
  (defun . ediff-looks-like-combined-merge)
  (defun . ediff-merge-changed-from-default-p)
  (provide . ediff-merg))
 ("/usr/share/emacs/23.0.93/lisp/ediff-diff.elc"
  (provide . ediff-diff)
  (require . ediff-init)
  ediff-diff-program ediff-diff3-program ediff-shell ediff-cmp-program ediff-cmp-options
  (defun . ediff-set-diff-options)
  ediff-diff-options ediff-ignore-case ediff-ignore-case-option ediff-ignore-case-option3 ediff-actual-diff-options ediff-custom-diff-program ediff-custom-diff-options ediff-match-diff3-line ediff-diff3-options ediff-actual-diff3-options ediff-diff3-ok-lines-regexp ediff-diff-status ediff-auto-refine ediff-ignore-similar-regions ediff-auto-refine-limit ediff-diff-ok-lines-regexp ediff-match-diff-line ediff-setup-diff-regions-function
  (defun . ediff-setup-diff-regions)
  (defun . ediff-make-diff2-buffer)
  (defun . ediff-setup-fine-diff-regions)
  (defun . ediff-prepare-error-list)
  (defun . ediff-extract-diffs)
  (defun . ediff-convert-diffs-to-overlays)
  (defun . ediff-set-diff-overlays-in-one-buffer)
  (defun . ediff-make-fine-diffs)
  (defun . ediff-install-fine-diff-if-necessary)
  (defun . ediff-set-fine-diff-properties)
  (defun . ediff-set-fine-diff-properties-in-one-buffer)
  (defun . ediff-set-fine-overlays-for-combined-merge)
  (defun . ediff-set-fine-overlays-in-one-buffer)
  (defun . ediff-convert-fine-diffs-to-overlays)
  (defun . ediff-get-diff3-group)
  (defun . ediff-extract-diffs3)
  (defun . ediff-setup-diff-regions3)
  (defun . ediff-exec-process)
  (defun . ediff-process-filter)
  (defun . ediff-process-sentinel)
  ediff-forward-word-function ediff-whitespace ediff-word-1 ediff-word-2 ediff-word-3 ediff-word-4
  (defun . ediff-forward-word)
  (defun . ediff-wordify)
  (defun . ediff-copy-to-buffer)
  (defun . ediff-goto-word)
  (defun . ediff-same-file-contents)
  (defun . ediff-same-contents)
  (defun . ediff-same-file-contents-lists)
  (defun . ediff-delete-all-matches)
  (defun . ediff-set-actual-diff-options)
  (defun . ediff-toggle-ignore-case))
 ("/usr/share/emacs/23.0.93/lisp/ediff-wind.elc"
  (require . ediff-init)
  (defun . ediff-compute-toolbar-width)
  (defun . ediff-choose-window-setup-function-automatically)
  ediff-window-setup-function ediff-multiframe ediff-merge-window-share ediff-control-window ediff-window-A ediff-window-B ediff-window-C ediff-window-config-saved ediff-window-alist ediff-window-alist ediff-split-window-function ediff-merge-split-window-function ediff-control-frame-parameters ediff-mouse-pixel-position ediff-mouse-pixel-threshold ediff-grab-mouse ediff-control-frame-position-function ediff-control-frame-upward-shift ediff-narrow-control-frame-leftward-shift ediff-wide-control-frame-rightward-shift ediff-wide-display-p ediff-wide-display-orig-parameters ediff-wide-display-frame ediff-make-wide-display-function ediff-control-frame ediff-prefer-iconified-control-frame
  (defun . ediff-get-window-by-clicking)
  (defun . ediff-select-lowest-window)
  (defun . ediff-setup-windows)
  (defun . ediff-setup-windows-plain)
  (defun . ediff-setup-windows-plain-merge)
  (defun . ediff-setup-windows-plain-compare)
  (defun . ediff-setup-windows-multiframe)
  (defun . ediff-setup-windows-multiframe-merge)
  (defun . ediff-setup-windows-multiframe-compare)
  (defun . ediff-skip-unsuitable-frames)
  (defun . ediff-frame-has-dedicated-windows)
  (defun . ediff-window-ok-for-display)
  (defun . ediff-setup-control-frame)
  (defun . ediff-destroy-control-frame)
  (defun . ediff-make-frame-position)
  (defun . ediff-xemacs-select-frame-hook)
  (defun . ediff-make-wide-display)
  (defun . ediff-refresh-mode-lines)
  (defun . ediff-refresh-control-frame)
  (defun . ediff-make-narrow-control-buffer-id)
  (defun . ediff-make-base-title)
  (defun . ediff-make-wide-control-buffer-id)
  (defun . ediff-get-visible-buffer-window)
  (defun . ediff-keep-window-config)
  (provide . ediff-wind))
 ("/usr/share/emacs/23.0.93/lisp/ediff-help.elc"
  (require . ediff-init)
  ediff-long-help-message-head ediff-long-help-message-tail ediff-long-help-message-compare3 ediff-long-help-message-compare2 ediff-long-help-message-narrow2 ediff-long-help-message-word-mode ediff-long-help-message-merge ediff-long-help-message ediff-brief-message-string ediff-brief-help-message ediff-brief-help-message-function ediff-long-help-message-function ediff-use-long-help-message ediff-help-message ediff-help-region-map
  (defun . ediff-set-help-overlays)
  (defun . ediff-help-for-quick-help)
  (defun . ediff-help-message-line-length)
  (defun . ediff-indent-help-message)
  (defun . ediff-set-help-message)
  (t . ediff-customize)
  (defun . ediff-customize)
  (provide . ediff-help))
 ("/usr/share/emacs/23.0.93/lisp/ediff-mult.elc"
  (provide . ediff-mult)
  (require . ediff-init)
  ediff-meta-buffer ediff-parent-meta-buffer ediff-registry-buffer ediff-meta-buffer-brief-message ediff-meta-buffer-brief-message ediff-meta-buffer-verbose-message ediff-meta-buffer-verbose-message ediff-meta-buffer-map ediff-dir-diffs-buffer-map ediff-meta-action-function ediff-meta-redraw-function ediff-session-action-function ediff-metajob-name ediff-meta-diff-buffer ediff-recurse-to-subdirectories ediff-filtering-regexp-history ediff-default-filtering-regexp ediff-meta-list ediff-meta-session-number ediff-dir-difference-list ediff-dir-diffs-buffer ediff-session-registry ediff-meta-truncate-filenames ediff-meta-mode-hook ediff-registry-setup-hook ediff-before-session-group-setup-hooks ediff-after-session-group-setup-hook ediff-quit-session-group-hook ediff-show-registry-hook ediff-show-session-group-hook ediff-meta-buffer-keymap-setup-hook ediff-meta-patchbufer
  (defun . ediff-get-group-buffer)
  (defun . ediff-get-group-regexp)
  (defun . ediff-get-group-objA)
  (defun . ediff-get-group-objB)
  (defun . ediff-get-group-objC)
  (defun . ediff-get-group-merge-autostore-dir)
  (defun . ediff-get-group-comparison-func)
  (defun . ediff-get-session-buffer)
  (defun . ediff-get-session-status)
  (defun . ediff-set-session-status)
  (defun . ediff-get-session-objA)
  (defun . ediff-get-session-objB)
  (defun . ediff-get-session-objC)
  (defun . ediff-get-session-objA-name)
  (defun . ediff-get-session-objB-name)
  (defun . ediff-get-session-objC-name)
  (defun . ediff-get-file-eqstatus)
  (defun . ediff-set-file-eqstatus)
  (defun . ediff-make-new-meta-list-element)
  (defun . ediff-make-new-meta-list-header)
  (defun . ediff-get-session-activity-marker)
  (defun . ediff-meta-session-p)
  ediff-verbose-help-enabled
  (defun . ediff-toggle-verbose-help-meta-buffer)
  (defun . ediff-setup-meta-map)
  (defun . ediff-meta-mode)
  (defun . ediff-next-meta-item)
  (defun . ediff-next-meta-item1)
  (defun . ediff-previous-meta-item)
  (defun . ediff-previous-meta-item1)
  (defun . ediff-add-slash-if-directory)
  (defun . ediff-toggle-filename-truncation)
  ediff-membership-code1 ediff-membership-code2 ediff-membership-code3 ediff-product-of-memcodes
  (defun . ediff-intersect-directories)
  (defun . ediff-get-directory-files-under-revision)
  (defun . ediff-prepare-meta-buffer)
  (defun . ediff-insert-session-activity-marker-in-meta-buffer)
  (defun . ediff-insert-session-status-in-meta-buffer)
  (defun . ediff-replace-session-activity-marker-in-meta-buffer)
  (defun . ediff-replace-session-status-in-meta-buffer)
  (defun . ediff-insert-session-info-in-meta-buffer)
  (defun . ediff-redraw-directory-group-buffer)
  (defun . ediff-update-markers-in-dir-meta-buffer)
  (defun . ediff-update-session-marker-in-dir-meta-buffer)
  (defun . ediff-problematic-session-p)
  (defun . ediff-meta-insert-file-info1)
  ediff-months
  (defun . ediff-fill-leading-zero)
  (defun . ediff-format-date)
  (defun . ediff-insert-dirs-in-meta-buffer)
  (defun . ediff-draw-dir-diffs)
  (defun . ediff-bury-dir-diffs-buffer)
  (defun . ediff-show-dir-diffs)
  (defun . ediff-dir-diff-copy-file)
  (defun . ediff-up-meta-hierarchy)
  (defun . ediff-redraw-registry-buffer)
  (defun . ediff-set-meta-overlay)
  (defun . ediff-mark-for-hiding-at-pos)
  (defun . ediff-mark-session-for-hiding)
  (defun . ediff-mark-for-operation-at-pos)
  (defun . ediff-mark-session-for-operation)
  (defun . ediff-hide-marked-sessions)
  (defun . ediff-operate-on-marked-sessions)
  (defun . ediff-append-custom-diff)
  (defun . ediff-collect-custom-diffs)
  (defun . ediff-meta-show-patch)
  (defun . ediff-filegroup-action)
  (defun . ediff-registry-action)
  (defun . ediff-show-meta-buffer)
  (defun . ediff-show-current-session-meta-buffer)
  (defun . ediff-show-meta-buff-from-registry)
  (t . ediff-show-registry)
  (defun . ediff-show-registry)
  (defun . eregistry)
  (defun . ediff-update-meta-buffer)
  (defun . ediff-update-registry)
  (defun . ediff-cleanup-meta-buffer)
  (defun . ediff-safe-to-quit)
  (defun . ediff-quit-meta-buffer)
  (defun . ediff-dispose-of-meta-buffer)
  (defun . ediff-get-meta-info)
  (defun . ediff-get-meta-overlay-at-pos)
  (defun . ediff-get-session-number-at-pos)
  (defun . ediff-next-meta-overlay-start)
  (defun . ediff-previous-meta-overlay-start)
  (defun . ediff-patch-file-form-meta)
  (defun . ediff-unmark-all-for-operation)
  (defun . ediff-unmark-all-for-hiding)
  (defun . ediff-meta-mark-equal-files)
  (defun . ediff-mark-if-equal))
 ("/usr/share/emacs/23.0.93/lisp/ediff-init.elc" ediff-force-faces
  (defun . ediff-device-type)
  (defun . ediff-window-display-p)
  (defun . ediff-has-face-support-p)
  (defun . ediff-has-toolbar-support-p)
  (defun . ediff-has-gutter-support-p)
  (defun . ediff-use-toolbar-p)
  (defun . ediff-defvar-local)
  ediff-buffer-A ediff-buffer-B ediff-buffer-C ediff-ancestor-buffer ediff-control-buffer ediff-temp-indirect-buffer ediff-buffer-alist ediff-buffer-alist
  (defun . ediff-odd-p)
  (defun . ediff-buffer-live-p)
  (defun . ediff-get-buffer)
  (defun . ediff-get-value-according-to-buffer-type)
  (defun . ediff-char-to-buftype)
  (defun . ediff-get-symbol-from-alist)
  ediff-difference-vector-alist ediff-difference-vector-alist
  (defun . ediff-get-difference)
  (defun . ediff-no-fine-diffs-p)
  (defun . ediff-get-diff-overlay-from-diff-record)
  (defun . ediff-get-diff-overlay)
  (defun . ediff-get-fine-diff-vector-from-diff-record)
  (defun . ediff-set-fine-diff-vector)
  (defun . ediff-get-state-of-diff)
  (defun . ediff-set-state-of-diff)
  (defun . ediff-get-state-of-merge)
  (defun . ediff-set-state-of-merge)
  (defun . ediff-get-state-of-ancestor)
  (defun . ediff-mark-diff-as-space-only)
  (defun . ediff-get-fine-diff-vector)
  (defun . ediff-with-current-buffer)
  (defun . ediff-multiframe-setup-p)
  (defun . ediff-narrow-control-frame-p)
  (defun . ediff-3way-comparison-job)
  ediff-3way-comparison-job
  (defun . ediff-merge-job)
  ediff-merge-job
  (defun . ediff-patch-job)
  (defun . ediff-merge-with-ancestor-job)
  ediff-merge-with-ancestor-job
  (defun . ediff-3way-job)
  ediff-3way-job
  (defun . ediff-diff3-job)
  ediff-diff3-job
  (defun . ediff-windows-job)
  ediff-windows-job
  (defun . ediff-word-mode-job)
  ediff-word-mode-job
  (defun . ediff-narrow-job)
  ediff-narrow-job
  (defun . ediff-ancestor-metajob)
  (defun . ediff-revision-metajob)
  (defun . ediff-patch-metajob)
  (defun . ediff-one-filegroup-metajob)
  (defun . ediff-collect-diffs-metajob)
  (defun . ediff-merge-metajob)
  (defun . ediff-metajob3)
  (defun . ediff-comparison-metajob3)
  (defun . ediff-in-control-buffer-p)
  (defun . ediff-barf-if-not-control-buffer)
  ediff-before-setup-hook ediff-before-setup-windows-hook ediff-after-setup-windows-hook ediff-before-setup-control-frame-hook ediff-after-setup-control-frame-hook ediff-startup-hook ediff-select-hook ediff-unselect-hook ediff-prepare-buffer-hook ediff-load-hook ediff-mode-hook ediff-keymap-setup-hook ediff-display-help-hook ediff-suspend-hook ediff-quit-hook ediff-cleanup-hook ediff-KILLED-VITAL-BUFFER ediff-KILLED-VITAL-BUFFER ediff-NO-DIFFERENCES ediff-NO-DIFFERENCES ediff-BAD-DIFF-NUMBER ediff-BAD-DIFF-NUMBER ediff-BAD-INFO ediff-BAD-INFO ediff-skip-diff-region-function ediff-hide-regexp-matches-function ediff-focus-on-regexp-matches-function ediff-regexp-focus-A ediff-regexp-focus-B ediff-regexp-focus-C ediff-focus-regexp-connective ediff-regexp-hide-A ediff-regexp-hide-B ediff-regexp-hide-C ediff-hide-regexp-connective ediff-killed-diffs-alist ediff-syntax-table ediff-before-flag-bol ediff-after-flag-eol ediff-before-flag-mol ediff-after-flag-mol ediff-use-faces ediff-use-faces ediff-word-mode ediff-job-name ediff-narrow-bounds ediff-wide-bounds ediff-visible-bounds ediff-start-narrowed ediff-quit-widened ediff-keep-variants ediff-highlight-all-diffs ediff-highlight-all-diffs ediff-control-buffer-suffix ediff-control-buffer-number ediff-buffer-values-orig-A ediff-buffer-values-orig-B ediff-buffer-values-orig-C ediff-buffer-values-orig-Ancestor ediff-buffer-values-orig-alist ediff-buffer-values-orig-alist ediff-protected-variables ediff-protected-variables ediff-difference-vector-A ediff-difference-vector-B ediff-difference-vector-C ediff-difference-vector-Ancestor ediff-difference-vector-alist ediff-difference-vector-alist ediff-state-of-merge ediff-current-difference ediff-number-of-differences ediff-diff-buffer ediff-custom-diff-buffer ediff-fine-diff-buffer ediff-tmp-buffer ediff-msg-buffer ediff-error-buffer ediff-debug-buffer ediff-this-buffer-ediff-sessions ediff-disturbed-overlays ediff-shadow-overlay-priority ediff-version-control-package ediff-coding-system-for-read ediff-coding-system-for-write
  (defun . ediff-read-event)
  (defun . ediff-overlayp)
  (defun . ediff-make-overlay)
  (defun . ediff-delete-overlay)
  (defun . ediff-check-version)
  (defun . ediff-color-display-p)
  ediff-highlighting-style
  (defun . ediff-valid-color-p)
  (defun . ediff-get-face)
  (defun . ediff-display-pixel-width)
  (defun . ediff-display-pixel-height)
  ediff-current-diff-overlay-alist ediff-current-diff-overlay-alist ediff-current-diff-face-alist ediff-current-diff-face-alist
  (defun . ediff-set-overlay-face)
  (defun . ediff-region-help-echo)
  (defun . ediff-set-face-pixmap)
  (defun . ediff-hide-face)
  (defface . ediff-current-diff-A)
  ediff-current-diff-face-A
  (defface . ediff-current-diff-B)
  ediff-current-diff-face-B
  (defface . ediff-current-diff-C)
  ediff-current-diff-face-C
  (defface . ediff-current-diff-Ancestor)
  ediff-current-diff-face-Ancestor
  (defface . ediff-fine-diff-A)
  ediff-fine-diff-face-A
  (defface . ediff-fine-diff-B)
  ediff-fine-diff-face-B
  (defface . ediff-fine-diff-C)
  ediff-fine-diff-face-C
  (defface . ediff-fine-diff-Ancestor)
  ediff-fine-diff-face-Ancestor stipple-pixmap
  (defface . ediff-even-diff-A)
  ediff-even-diff-face-A
  (defface . ediff-even-diff-B)
  ediff-even-diff-face-B
  (defface . ediff-even-diff-C)
  ediff-even-diff-face-C
  (defface . ediff-even-diff-Ancestor)
  ediff-even-diff-face-Ancestor ediff-even-diff-face-alist ediff-even-diff-face-alist
  (defface . ediff-odd-diff-A)
  ediff-odd-diff-face-A
  (defface . ediff-odd-diff-B)
  ediff-odd-diff-face-B
  (defface . ediff-odd-diff-C)
  ediff-odd-diff-face-C
  (defface . ediff-odd-diff-Ancestor)
  ediff-odd-diff-face-Ancestor ediff-odd-diff-face-alist ediff-odd-diff-face-alist ediff-fine-diff-face-alist ediff-fine-diff-face-alist ediff-current-diff-overlay-A ediff-current-diff-overlay-B ediff-current-diff-overlay-C ediff-current-diff-overlay-Ancestor
  (defun . ediff-highest-priority)
  ediff-toggle-read-only-function ediff-make-buffers-readonly-at-startup ediff-verbose-p ediff-autostore-merges ediff-merge-store-file ediff-merge-filename-prefix ediff-no-emacs-help-in-control-buffer ediff-temp-file-prefix ediff-temp-file-mode ediff-metachars ediff-H-glyph ediff-temp-file-A ediff-temp-file-B ediff-temp-file-C
  (defun . ediff-file-remote-p)
  (defun . ediff-listable-file)
  (defun . ediff-frame-unsplittable-p)
  (defun . ediff-get-next-window)
  (defun . ediff-kill-buffer-carefully)
  (defun . ediff-background-face)
  (defun . ediff-paint-background-regions-in-one-buffer)
  (defun . ediff-paint-background-regions)
  (defun . ediff-clear-fine-diff-vector)
  (defun . ediff-clear-fine-differences-in-one-buffer)
  (defun . ediff-clear-fine-differences)
  (defun . ediff-mouse-event-p)
  (defun . ediff-key-press-event-p)
  (defun . ediff-event-point)
  (defun . ediff-event-buffer)
  (defun . ediff-event-key)
  (defun . ediff-frame-iconified-p)
  (defun . ediff-window-visible-p)
  (defun . ediff-frame-char-width)
  (defun . ediff-reset-mouse)
  (defun . ediff-spy-after-mouse)
  (defun . ediff-user-grabbed-mouse)
  (defun . ediff-frame-char-height)
  (defun . ediff-overlay-start)
  (defun . ediff-overlay-end)
  (defun . ediff-empty-overlay-p)
  (defun . ediff-overlay-buffer)
  (defun . ediff-overlay-get)
  (defun . ediff-move-overlay)
  (defun . ediff-overlay-put)
  (defun . ediff-abbreviate-file-name)
  (defun . ediff-strip-last-dir)
  (defun . ediff-truncate-string-left)
  (defun . ediff-nonempty-string-p)
  (defun . ediff-abbrev-jobname)
  (defun . ediff-strip-mode-line-format)
  (defun . ediff-valid-difference-p)
  (defun . ediff-show-all-diffs)
  (defun . ediff-message-if-verbose)
  (defun . ediff-file-attributes)
  (defun . ediff-file-size)
  (defun . ediff-file-modtime)
  (defun . ediff-convert-standard-filename)
  (defun . ediff-with-syntax-table)
  (provide . ediff-init))
 ("/home/hobbes/nxhtml/nxhtml/html-imenu.el" html-imenu:version
  (require . imenu)
  html-imenu-title html-imenu-regexp
  (defun . html-imenu-index)
  (defun . html-imenu-setup)
  (defun . html-imenu-update-menubar)
  (defun . html-imenu-update-menubar-1)
  (provide . html-imenu))
 ("/usr/share/emacs/23.0.93/lisp/imenu.elc" imenu-use-markers imenu-max-item-length imenu-auto-rescan imenu-auto-rescan-maxout imenu-always-use-completion-buffer-p imenu-use-popup-menu imenu-eager-completion-buffer imenu-after-jump-hook imenu-sort-function imenu-max-items imenu-space-replacement imenu-level-separator imenu-generic-expression imenu-create-index-function imenu-prev-index-position-function imenu-extract-index-name-function imenu-name-lookup-function imenu-default-goto-function
  (defun . imenu--subalist-p)
  (defun . imenu-progress-message)
  (defun . imenu-example--name-and-position)
  (defun . imenu-example--lisp-extract-index-name)
  (defun . imenu-example--create-lisp-index)
  imenu-example--function-name-regexp-c
  (defun . imenu-example--create-c-index)
  imenu--rescan-item imenu--rescan-item imenu--index-alist imenu--last-menubar-index-alist imenu--history-list
  (defun . imenu--sort-by-name)
  (defun . imenu--sort-by-position)
  (defun . imenu--relative-position)
  (defun . imenu--split)
  (defun . imenu--split-menu)
  (defun . imenu--split-submenus)
  (defun . imenu--truncate-items)
  (defun . imenu--make-index-alist)
  (defun . imenu--cleanup)
  (defun . imenu--create-keymap)
  (defun . imenu--in-alist)
  imenu-syntax-alist
  (defun . imenu-default-create-index-function)
  imenu-case-fold-search
  (defun . imenu--generic-function)
  (defun . imenu-find-default)
  (defun . imenu--completion-buffer)
  (defun . imenu--mouse-menu)
  (defun . imenu-choose-buffer-index)
  (t . imenu-add-to-menubar)
  (defun . imenu-add-to-menubar)
  (t . imenu-add-menubar-index)
  (defun . imenu-add-menubar-index)
  imenu-buffer-menubar imenu-menubar-modified-tick
  (defun . imenu-update-menubar)
  (defun . imenu--menubar-select)
  (defun . imenu-default-goto-function)
  (t . imenu)
  (defun . imenu)
  (provide . imenu))
 ("/home/hobbes/nxhtml/util/popcmp.el"
  (require . ourcomments-util)
  popcmp-popup-completion
  (defun . popcmp-popup-completion-toggle)
  popcmp-short-help-beside-alts
  (defun . popcmp-short-help-beside-alts-toggle)
  popcmp-group-alternatives
  (defun . popcmp-group-alternatives-toggle)
  (defun . popcmp-getsets)
  (defun . popcmp-getset-alts)
  popcmp-completing-with-help
  (defun . popcmp-add-help)
  (defun . popcmp-remove-help)
  (defun . popcmp-completing-read-nopop)
  (defun . popcmp-completing-read-pop)
  (defun . popcmp-completing-read)
  popcmp-mark-completing-ovl
  (defun . popcmp-mark-completing)
  (defun . popcmp-unmark-completing)
  (provide . popcmp))
 ("/home/hobbes/nxhtml/nxhtml/rngalt.el" rngalt:version
  (require . rng-valid)
  (require . rng-nxml)
  rngalt-complete-first-try rngalt-complete-last-try rngalt-completing-read-tag rngalt-completing-read-attribute-name rngalt-completing-read-attribute-value
  (defun . rngalt-finish-element)
  (defun . rngalt-finish-element-1)
  (defun . rngalt-complete)
  (defun . rngalt-validate)
  rngalt-region-ovl rngalt-region-prepared
  (defun . rngalt-complete-tag-region-prepare)
  (defun . rngalt-complete-tag-region-cleanup)
  (defun . rngalt-complete-tag-region-finish)
  (defun . rngalt-complete-tag)
  rngalt-complete-tag-hooks
  (defun . rngalt-complete-attribute-name)
  (defun . rngalt-complete-attribute-value)
  (defun . rngalt-complete-before-point)
  (defun . rngalt-get-missing-required-attr)
  rngalt-validation-header rngalt-current-schema-file-name rngalt-validation-header-overlay rngalt-major-mode
  (defun . rngalt-after-change-major)
  rngalt-validation-header-keymap
  (defun . rngalt-update-validation-header-overlay)
  (defun . rngalt-update-validation-header-overlay-everywhere)
  rngalt-display-validation-header
  (defun . rngalt-display-validation-header-toggle)
  rngalt-minimal-validation-header
  (defun . rngalt-minimal-validation-header-toggle)
  (defface . rngalt-validation-header-top)
  (defface . rngalt-validation-header-bottom)
  (require . bytecomp)
  (defun . advice-compilation)
  (t . rngalt-set-validation-header)
  (defun . rngalt-set-validation-header)
  (defun . rngalt-reapply-validation-header)
  (defun . rngalt-get-validation-header-buffer)
  (defun . rngalt-get-state-after)
  (defun . rngalt-show-validation-header)
  (defun . rngalt-update-validation-header-buffer)
  (provide . rngalt))
 ("/usr/share/emacs/23.0.93/lisp/nxml/rng-nxml.elc"
  (require . easymenu)
  (require . xmltok)
  (require . nxml-util)
  (require . nxml-ns)
  (require . rng-match)
  (require . rng-util)
  (require . rng-valid)
  (require . nxml-mode)
  (require . rng-loc)
  rng-nxml-auto-validate-flag rng-preferred-prefix-alist rng-complete-end-tags-after-< rng-nxml-easy-menu
  (t . rng-nxml-mode-init)
  (defun . rng-nxml-mode-init)
  rng-tag-history rng-attribute-name-history rng-attribute-value-history rng-complete-target-names rng-complete-name-attribute-flag rng-complete-extra-strings
  (defun . rng-complete)
  rng-in-start-tag-name-regex rng-in-start-tag-name-regex
  (defun . rng-complete-tag)
  rng-in-end-tag-name-regex rng-in-end-tag-name-regex
  (defun . rng-complete-end-tag)
  rng-in-attribute-regex rng-in-attribute-regex rng-undeclared-prefixes
  (defun . rng-complete-attribute-name)
  rng-in-attribute-value-regex rng-in-attribute-value-regex
  (defun . rng-complete-attribute-value)
  (defun . rng-possible-namespace-uris)
  rng-qname-regexp rng-qname-regexp
  (defun . rng-qname-p)
  (defun . rng-expand-qname)
  (defun . rng-start-tag-expand-recover)
  (defun . rng-split-qname)
  (defun . rng-in-mixed-content-p)
  (defun . rng-set-state-after)
  (defun . rng-adjust-state-for-attribute)
  (defun . rng-find-undeclared-prefixes)
  (defun . rng-prune-attribute-at)
  (defun . rng-adjust-state-for-attribute-value)
  (defun . rng-complete-qname-function)
  (defun . rng-generate-qname-list)
  (defun . rng-get-preferred-unused-prefix)
  (defun . rng-strings-to-completion-alist)
  (provide . rng-nxml))
 ("/usr/share/emacs/23.0.93/lisp/loadhist.elc"
  (defun . feature-symbols)
  (defun . feature-file)
  (defun . file-loadhist-lookup)
  (defun . file-provides)
  (defun . file-requires)
  (defun . file-set-intersect)
  (defun . file-dependents)
  (defun . read-feature)
  loadhist-hook-functions unload-feature-special-hooks unload-function-defs-list unload-hook-features-list
  (t . unload-feature)
  (defun . unload-feature)
  (provide . loadhist))
 ("/home/hobbes/nxhtml/util/appmenu-fold.el" appmenu-fold:version
  (require . fold-dwim)
  (require . appmenu)
  (defun . appmenu-fold-no-hs-minor-mode)
  (defun . appmenu-fold-no-outline-minor-mode)
  (defun . appmenu-fold-setup)
  (provide . appmenu-fold))
 ("/home/hobbes/nxhtml/related/fold-dwim.el" fold-dwim:version
  (require . outline)
  (require . hideshow)
  fold-dwim-outline-style-default fold-dwim-toggle-selective-display
  (defun . fold-dwim-maybe-recenter)
  (defun . fold-dwim-toggle-selective-display)
  (defun . fold-dwim-hide-all)
  (defun . fold-dwim-show-all)
  (defun . fold-dwim-hide)
  (defun . fold-dwim-show)
  (defun . fold-dwim-toggle)
  (defun . fold-dwim-auctex-env-or-macro)
  (defun . fold-dwim-outline-invisible-p)
  (defun . fold-dwim-outline-nested-p)
  (provide . fold-dwim))
 ("/usr/share/emacs/23.0.93/lisp/progmodes/hideshow.elc" hs-hide-comments-when-hiding-all hs-minor-mode-hook hs-isearch-open hs-special-modes-alist hs-hide-all-non-comment-function hs-allow-nesting hs-hide-hook hs-show-hook hs-set-up-overlay hs-minor-mode hs-minor-mode-map hs-minor-mode-menu
  (defun . hs-minor-mode-menu)
  hs-c-start-regexp hs-block-start-regexp hs-block-start-mdata-select hs-block-end-regexp hs-forward-sexp-func hs-adjust-block-beginning hs-headline
  (defun . hs-discard-overlays)
  (defun . hs-make-overlay)
  (defun . hs-isearch-show)
  (defun . hs-isearch-show-temporary)
  (defun . hs-forward-sexp)
  (defun . hs-hide-comment-region)
  (defun . hs-hide-block-at-point)
  (defun . hs-inside-comment-p)
  (defun . hs-grok-mode-type)
  (defun . hs-find-block-beginning)
  (defun . hs-hide-level-recursive)
  (defun . hs-life-goes-on)
  (defun . hs-overlay-at)
  (defun . hs-already-hidden-p)
  (defun . hs-c-like-adjust-block-beginning)
  (defun . hs-hide-all)
  (defun . hs-show-all)
  (defun . hs-hide-block)
  (defun . hs-show-block)
  (defun . hs-hide-level)
  (defun . hs-toggle-hiding)
  (defun . hs-mouse-toggle-hiding)
  (defun . hs-hide-initial-comment-block)
  hs-minor-mode
  (t . hs-minor-mode)
  (defun . hs-minor-mode)
  (t . turn-off-hideshow)
  (defun . turn-off-hideshow)
  (provide . hideshow))
 ("/usr/share/emacs/23.0.93/lisp/outline.elc" outline-regexp outline-heading-end-regexp outline-mode-prefix-map outline-mode-menu-bar-map outline-minor-mode-menu-bar-map outline-mode-map outline-font-lock-keywords
  (defface . outline-1)
  (defface . outline-2)
  (defface . outline-3)
  (defface . outline-4)
  (defface . outline-5)
  (defface . outline-6)
  (defface . outline-7)
  (defface . outline-8)
  outline-font-lock-faces
  (defun . outline-font-lock-face)
  outline-view-change-hook outline-mode-hook outline-blank-line outline-mode-map outline-mode-syntax-table outline-mode-abbrev-table outline-mode-abbrev-table
  (t . outline-mode)
  (defun . outline-mode)
  outline-minor-mode-prefix outline-minor-mode
  (t . outline-minor-mode)
  (defun . outline-minor-mode)
  outline-minor-mode-map outline-level outline-heading-alist
  (defun . outline-level)
  (defun . outline-next-preface)
  (defun . outline-next-heading)
  (defun . outline-previous-heading)
  (defun . outline-invisible-p)
  (defun . outline-visible)
  (defun . outline-back-to-heading)
  (defun . outline-on-heading-p)
  (defun . outline-insert-heading)
  (defun . outline-invent-heading)
  (defun . outline-promote)
  (defun . outline-demote)
  (defun . outline-head-from-level)
  (defun . outline-map-region)
  (defun . outline-move-subtree-up)
  (defun . outline-move-subtree-down)
  (defun . outline-end-of-heading)
  (defun . outline-next-visible-heading)
  (defun . outline-previous-visible-heading)
  (defun . outline-mark-subtree)
  outline-isearch-open-invisible-function
  (defun . outline-flag-region)
  (defun . outline-reveal-toggle-invisible)
  (defun . outline-isearch-open-invisible)
  (defun . hide-entry)
  (defun . show-entry)
  (defun . hide-body)
  (defun . hide-region-body)
  (defun . show-all)
  (defun . hide-subtree)
  (defun . hide-leaves)
  (defun . show-subtree)
  (defun . outline-show-heading)
  (defun . hide-sublevels)
  (defun . hide-other)
  (defun . outline-toggle-children)
  (defun . outline-flag-subtree)
  (defun . outline-end-of-subtree)
  (defun . show-branches)
  (defun . show-children)
  (defun . outline-up-heading)
  (defun . outline-forward-same-level)
  (defun . outline-get-next-sibling)
  (defun . outline-backward-same-level)
  (defun . outline-get-last-sibling)
  (defun . outline-headers-as-kill)
  (provide . outline)
  (provide . noutline))
 ("/home/hobbes/nxhtml/util/mumamo.el" mumamo:version
  (require . cl)
  (require . flyspell)
  (require . mlinks)
  (require . nxml-mode)
  (require . rng-valid)
  (require . sgml-mode)
  msgtrc-buffer
  (defun . msgtrc)
  mumamo-message-file-buffer
  (defun . mumamo-msgtrc-to-file)
  (defun . mumamo-msgfntfy)
  (defun . mumamo-msgindent)
  mumamo-display-error-lwarn mumamo-display-error-stop
  (defun . mumamo-message-with-face)
  (defun . mumamo-show-report-message)
  (defun . mumamo-display-error)
  (defun . mumamo-debug-to-backtrace)
  mumamo-use-condition-case mumamo-debugger
  (defun . mumamo-condition-case)
  mumamo-warned-once
  (defun . mumamo-warn-once)
  (defun . mumamo-add-help-tabs)
  (defun . mumamo-insert-describe-button)
  (defface . mumamo-border-face-in)
  (defface . mumamo-border-face-out)
  mumamo-set-major-mode-delay
  (defface . mumamo-background-chunk-submode)
  mumamo-background-chunk-major
  (defface . mumamo-background-chunk-major)
  mumamo-background-chunk-submode mumamo-background-colors
  (defun . mumamo-background-color)
  mumamo-chunk-coloring mumamo-submode-indent-offset mumamo-submode-indent-offset-0 mumamo-major-mode-indent-specials mumamo-check-chunk-major-same mumamo-major-modes
  (defun . mumamo-jit-lock-function)
  (defun . mumamo-jit-lock-register)
  (defun . mumamo-jit-with-buffer-unmodified)
  (defun . mumamo-with-buffer-prepared-for-jit-lock)
  mumamo-find-chunks-timer mumamo-find-chunk-delay
  (defun . mumamo-stop-find-chunks-timer)
  (defun . mumamo-start-find-chunks-timer)
  (defun . mumamo-find-chunks-in-timer)
  mumamo-last-chunk mumamo-last-new-chunk mumamo-last-chunk-change-pos mumamo-old-chunks mumamo-find-chunk-is-active mumamo-use-new-chunks
  (defun . mumamo-toggle-use-new-chunks)
  mumamo-use-both-chunks
  (defun . mumamo-toggle-use-both-chunks)
  (defun . mumamo-make-old-chunks)
  (defun . mumamo-make-new-chunks)
  (defun . mumamo-toggle-and-normal-mode-and-what-at-cursor)
  mumamo-find-chunks-level
  (defun . mumamo-find-chunks)
  (defun . mumamo-find-chunk-after-change)
  (defun . mumamo-after-change)
  (defun . mumamo-jit-lock-after-change)
  (defun . mumamo-jit-lock-after-change-1)
  (defun . mumamo-mark-chunk)
  (defun . mumamo-save-buffer-state)
  (t . mumamo-mark-for-refontification)
  (defun . mumamo-mark-for-refontification)
  mumamo-internal-major-modes-alist mumamo-ppss-last-chunk mumamo-ppss-last-major mumamo-major-mode-substitute
  (defun . mumamo-get-major-mode-substitute)
  (defun . mumamo-with-major-mode-setup)
  (defun . mumamo-with-major-mode-fontification)
  (defun . mumamo-with-major-mode-indentation)
  (defun . mumamo-assert-fontified-t)
  (defun . mumamo-do-fontify)
  (defun . mumamo-do-unfontify)
  (defun . mumamo-fontify-region-with)
  (defun . mumamo-unfontify-region-with)
  (defun . mumamo-unfontify-buffer)
  (defun . mumamo-fontify-buffer)
  (defun . mumamo-unfontify-chunk)
  mumamo-just-changed-major
  (defun . mumamo-fontify-region)
  mumamo-dbg-pretend-fontified
  (defun . mumamo-exc-mode)
  (defun . mumamo-chunk-value-set-min)
  (defun . mumamo-chunk-value-set-max)
  (defun . mumamo-chunk-value-set-syntax-min)
  (defun . mumamo-chunk-value-set-syntax-max)
  (defun . mumamo-chunk-value-min)
  (defun . mumamo-chunk-value-max)
  (defun . mumamo-chunk-value-major)
  (defun . mumamo-chunk-value-syntax-min)
  (defun . mumamo-chunk-value-syntax-max)
  (defun . mumamo-chunk-value-parseable-by)
  (defun . mumamo-chunk-value-fw-exc-fun)
  mumamo-chunks-to-remove
  (defun . mumamo-flush-chunk-syntax)
  (defun . mumamo-fontify-region-1)
  (defun . mumamo-remove-old-overlays)
  mumamo-known-buffer-local-fontifications mumamo-irrelevant-buffer-local-vars
  (defun . mumamo-get-relevant-buffer-local-vars)
  mumamo-major-modes-local-maps
  (defun . mumamo-fetch-major-mode-setup)
  (defun . mumamo-bad-mode)
  (defun . mumamo-get-major-mode-setup)
  (defun . mumamo-remove-chunk-overlays)
  (defun . mumamo-remove-all-chunk-overlays)
  (defun . mumamo-create-chunk-values-at)
  (defun . mumamo-define-no-mode)
  (defun . mumamo-major-mode-from-modespec)
  (defun . mumamo-chunk-equal-chunk-values)
  (defun . mumamo-create-chunk-from-chunk-values)
  (defun . mumamo-create-chunk-at)
  (defun . mumamo-get-existing-chunk-at)
  (defun . mumamo-get-existing-new-chunk-at)
  (defun . mumamo-get-chunk-save-buffer-state)
  (defun . mumamo-chunk-major-mode)
  (defun . mumamo-chunk-syntax-min)
  (defun . mumamo-chunk-syntax-max)
  (defun . mumamo-syntax-maybe-completable)
  mumamo-current-chunk-family
  (defun . mumamo-main-major-mode)
  (defun . mumamo-chunk-start-fw-str)
  (defun . mumamo-chunk-start-fw-re)
  (defun . mumamo-chunk-start-fw-str-inc)
  (defun . mumamo-chunk-start-bw-str)
  (defun . mumamo-chunk-start-bw-re)
  (defun . mumamo-chunk-start-bw-str-inc)
  (defun . mumamo-chunk-end-fw-str)
  (defun . mumamo-chunk-end-fw-re)
  (defun . mumamo-chunk-end-fw-str-inc)
  (defun . mumamo-chunk-end-bw-str)
  (defun . mumamo-chunk-end-bw-re)
  (defun . mumamo-chunk-end-bw-str-inc)
  mumamo-string-syntax-table
  (defun . mumamo-guess-in-string)
  mumamo-find-possible-chunk-new
  (defun . mumamo-find-possible-chunk)
  (defun . mumamo-find-possible-chunk-new)
  (defun . mumamo-find-possible-chunk-old)
  (defun . temp-overlays-here)
  (defun . temp-cursor-pos)
  (defun . temp-test-new-create-chunk)
  (defun . temp-create-last-chunk)
  (defun . mumamo-delete-new-chunks)
  (defun . mumamo-new-create-chunk)
  (defun . mumamo-new-chunk-value-min)
  (defun . mumamo-new-chunk-value-max)
  (defun . mumamo-new-chunk-equal-chunk-values)
  (defun . mumamo-find-next-chunk-values)
  (defun . mumamo-valid-nxml-point)
  (defun . mumamo-valid-nxml-chunk)
  (defun . mumamo-end-chunk-is-valid)
  (defun . mumamo-quick-static-chunk)
  mumamo-unread-command-events-timer
  (defun . mumamo-unread-command-events)
  mumamo-idle-set-major-mode-timer
  (defun . mumamotemp-pre-command)
  (defun . mumamotemp-post-command)
  (defun . mumamotemp-start)
  (defun . mumamo-idle-set-major-mode)
  (defun . mumamo-request-idle-set-major-mode)
  mumamo-done-first-set-major mumamo-multi-major-mode mumamo-safe-commands-in-wrong-major
  (defun . mumamo-set-major-pre-command)
  (defun . mumamo-fetch-local-map)
  (defun . mumamo-set-major-post-command)
  (defun . mumamo-post-command-1)
  (defun . mumamo-post-command)
  mumamo-set-major-running
  (defun . mumamo-change-major-function)
  (defun . mumamo-derived-from-mode)
  mumamo-test-add-hook mumamo-survive-hooks mumamo-survive
  (defun . mumamo-make-variable-buffer-permanent)
  mumamo-survive-done-by-me
  (defun . mumamo-hook-p)
  mumamo-major-mode mumamo-change-major-mode-no-nos mumamo-after-change-major-mode-no-nos mumamo-removed-from-hook
  (defun . mumamo-remove-from-hook)
  (defun . mumamo-addback-to-hooks)
  (defun . mumamo-addback-to-hook)
  mumamo-buffer-locals-dont-set
  (defun . mumamo-save-most-buffer-locals)
  mumamo-restore-most-buffer-locals-in-hook-major
  (defun . mumamo-restore-most-buffer-locals-in-hook)
  (defun . mumamo-restore-most-buffer-locals)
  mumamo-buffer-locals-per-major
  (defun . mumamo-get-hook-value)
  (defun . mumamo-set-major)
  (defun . mumamo-setup-local-fontification-vars)
  (defun . mumamo-set-fontification-functions)
  (defun . mumamo-initialize-state)
  (defun . mumamo-turn-on-actions)
  (defun . mumamo-turn-off-actions)
  mumamo-turn-on-hook mumamo-change-major-mode-hook mumamo-after-change-major-mode-hook mumamo-defined-turn-on-functions
  (defun . mumamo-describe-chunks)
  (defun . mumamo-add-multi-keymap)
  mumamo-map
  (defun . define-mumamo-multi-major-mode)
  (defun . mumamo-indent-line-function)
  (defun . mumamo-indent-line-chunks)
  (defun . mumamo-indent-line-function-1)
  (defun . mumamo-indent-use-widen)
  (defun . mumamo-indent-special-or-default)
  (defun . mumamo-call-indent-line)
  (defun . mumamo-indent-region-function)
  (defun . mumamo-fill-forward-paragraph-function)
  (defun . mumamo-fill-paragraph-function)
  (defun . mumamo-forward-chunk)
  (defun . mumamo-backward-chunk)
  (defun . mumamo-flyspell-verify)
  (defun . flyspell-mumamo-mode)
  (require . bytecomp)
  (defun . advice-compilation)
  mumamo-syntax-chunk-at-pos
  (defun . advice-compilation)
  mumamo-syntax-ppss-major
  (defun . advice-compilation)
  rng-get-major-mode-chunk-function rng-valid-nxml-major-mode-chunk-function rng-end-major-mode-chunk-function
  (defun . advice-compilation)
  (defun . advice-compilation)
  (defun . advice-compilation)
  (provide . mumamo))
 ("/usr/share/emacs/23.0.93/lisp/emacs-lisp/byte-opt.elc"
  (require . bytecomp)
  (defun . byte-compile-log-lap-1)
  (defun . byte-compile-log-lap)
  (defun . byte-optimize-inline-handler)
  (defun . byte-inline-lapcode)
  (t . byte-compile-inline-expand)
  (defun . byte-compile-inline-expand)
  (t . byte-compile-unfold-lambda)
  (defun . byte-compile-unfold-lambda)
  (defun . byte-optimize-form-code-walker)
  (defun . byte-optimize-all-constp)
  (t . byte-optimize-form)
  (defun . byte-optimize-form)
  (defun . byte-optimize-body)
  (defun . byte-compile-trueconstp)
  (defun . byte-compile-nilconstp)
  (defun . byte-optimize-associative-math)
  (defun . byte-optimize-nonassociative-math)
  (defun . byte-optimize-approx-equal)
  (defun . byte-optimize-delay-constants-math)
  (defun . byte-compile-butlast)
  (defun . byte-optimize-plus)
  (defun . byte-optimize-minus)
  (defun . byte-optimize-multiply)
  (defun . byte-optimize-divide)
  (defun . byte-optimize-logmumble)
  (defun . byte-optimize-binary-predicate)
  (defun . byte-optimize-predicate)
  (defun . byte-optimize-identity)
  (defun . byte-optimize-quote)
  (defun . byte-optimize-zerop)
  (defun . byte-optimize-and)
  (defun . byte-optimize-or)
  (defun . byte-optimize-cond)
  (defun . byte-optimize-if)
  (defun . byte-optimize-while)
  (defun . byte-optimize-funcall)
  (defun . byte-optimize-apply)
  (defun . byte-optimize-letX)
  (defun . byte-optimize-nth)
  (defun . byte-optimize-nthcdr)
  (defun . byte-optimize-featurep)
  (defun . byte-optimize-set)
  (defun . byte-compile-splice-in-already-compiled-code)
  byte-constref-ops byte-constref-ops
  (defun . disassemble-offset)
  (t . byte-decompile-bytecode)
  (defun . byte-decompile-bytecode)
  (defun . byte-decompile-bytecode-1)
  byte-tagref-ops byte-tagref-ops byte-conditional-ops byte-conditional-ops byte-after-unbind-ops byte-compile-side-effect-and-error-free-ops byte-compile-side-effect-and-error-free-ops byte-compile-side-effect-free-ops byte-compile-side-effect-free-ops
  (t . byte-optimize-lapcode)
  (defun . byte-optimize-lapcode)
  (provide . byte-opt))
 ("/usr/share/emacs/23.0.93/lisp/emacs-lisp/bytecomp.elc"
  (require . backquote)
  (defun . byte-compile-single-version)
  (defun . byte-compile-version-cond)
  emacs-lisp-file-regexp
  (defun . byte-compiler-base-file-name)
  (defun . byte-compile-dest-file)
  (autoload . byte-compile-inline-expand)
  (autoload . byte-optimize-form)
  (autoload . byte-optimize-lapcode)
  (autoload . byte-compile-unfold-lambda)
  (autoload . byte-decompile-bytecode)
  byte-compile-verbose byte-compile-compatibility byte-optimize byte-compile-delete-errors byte-compile-dynamic byte-compile-disable-print-circle byte-compile-dynamic-docstrings byte-optimize-log byte-compile-error-on-warn byte-compile-warning-types byte-compile-warnings
  (t . byte-compile-warnings-safe-p)
  (defun . byte-compile-warnings-safe-p)
  (defun . byte-compile-warning-enabled-p)
  (t . byte-compile-disable-warning)
  (defun . byte-compile-disable-warning)
  (t . byte-compile-enable-warning)
  (defun . byte-compile-enable-warning)
  byte-compile-interactive-only-functions byte-compile-not-obsolete-var byte-compile-generate-call-tree byte-compile-call-tree byte-compile-call-tree-sort byte-compile-debug byte-compile-constants byte-compile-variables byte-compile-bound-variables byte-compile-const-variables byte-compile-initial-macro-environment byte-compile-macro-environment byte-compile-function-environment byte-compile-unresolved-functions byte-compile-noruntime-functions byte-compile-tag-number byte-compile-output byte-compile-depth byte-compile-maxdepth byte-code-vector byte-stack+-info
  (defun . byte-defop)
  (defun . byte-extrude-byte-code-vectors)
  byte-varref byte-varset byte-varbind byte-call byte-unbind byte-nth byte-nth byte-symbolp byte-symbolp byte-consp byte-consp byte-stringp byte-stringp byte-listp byte-listp byte-eq byte-eq byte-memq byte-memq byte-not byte-not byte-car byte-car byte-cdr byte-cdr byte-cons byte-cons byte-list1 byte-list1 byte-list2 byte-list2 byte-list3 byte-list3 byte-list4 byte-list4 byte-length byte-length byte-aref byte-aref byte-aset byte-aset byte-symbol-value byte-symbol-value byte-symbol-function byte-symbol-function byte-set byte-set byte-fset byte-fset byte-get byte-get byte-substring byte-substring byte-concat2 byte-concat2 byte-concat3 byte-concat3 byte-concat4 byte-concat4 byte-sub1 byte-sub1 byte-add1 byte-add1 byte-eqlsign byte-eqlsign byte-gtr byte-gtr byte-lss byte-lss byte-leq byte-leq byte-geq byte-geq byte-diff byte-diff byte-negate byte-negate byte-plus byte-plus byte-max byte-max byte-min byte-min byte-mult byte-mult byte-point byte-point byte-goto-char byte-goto-char byte-insert byte-insert byte-point-max byte-point-max byte-point-min byte-point-min byte-char-after byte-char-after byte-following-char byte-following-char byte-preceding-char byte-preceding-char byte-current-column byte-current-column byte-indent-to byte-indent-to byte-scan-buffer-OBSOLETE byte-scan-buffer-OBSOLETE byte-eolp byte-eolp byte-eobp byte-eobp byte-bolp byte-bolp byte-bobp byte-bobp byte-current-buffer byte-current-buffer byte-set-buffer byte-set-buffer byte-save-current-buffer byte-set-mark-OBSOLETE byte-set-mark-OBSOLETE byte-interactive-p byte-interactive-p byte-forward-char byte-forward-char byte-forward-word byte-forward-word byte-skip-chars-forward byte-skip-chars-forward byte-skip-chars-backward byte-skip-chars-backward byte-forward-line byte-forward-line byte-char-syntax byte-char-syntax byte-buffer-substring byte-buffer-substring byte-delete-region byte-delete-region byte-narrow-to-region byte-narrow-to-region byte-widen byte-widen byte-end-of-line byte-end-of-line byte-constant2 byte-goto byte-goto-if-nil byte-goto-if-not-nil byte-goto-if-nil-else-pop byte-goto-if-not-nil-else-pop byte-return byte-discard byte-dup byte-save-excursion byte-save-window-excursion byte-save-restriction byte-catch byte-unwind-protect byte-condition-case byte-condition-case byte-temp-output-buffer-setup byte-temp-output-buffer-setup byte-temp-output-buffer-show byte-temp-output-buffer-show byte-unbind-all byte-unbind-all byte-set-marker byte-set-marker byte-match-beginning byte-match-beginning byte-match-end byte-match-end byte-upcase byte-upcase byte-downcase byte-downcase byte-string= byte-string= byte-string< byte-string< byte-equal byte-equal byte-nthcdr byte-nthcdr byte-elt byte-elt byte-member byte-member byte-assq byte-assq byte-nreverse byte-nreverse byte-setcar byte-setcar byte-setcdr byte-setcdr byte-car-safe byte-car-safe byte-cdr-safe byte-cdr-safe byte-nconc byte-nconc byte-quo byte-quo byte-rem byte-rem byte-numberp byte-numberp byte-integerp byte-integerp byte-listN byte-listN byte-concatN byte-concatN byte-insertN byte-insertN byte-constant byte-constant-limit byte-goto-ops byte-goto-always-pop-ops byte-goto-always-pop-ops
  (defun . byte-compile-lapcode)
  (defun . byte-compile-eval)
  (defun . byte-compile-eval-before-compile)
  byte-compile-current-form byte-compile-dest-file byte-compile-current-file byte-compile-current-group byte-compile-current-buffer
  (defun . byte-compile-log)
  (defun . byte-compile-log-1)
  byte-compile-read-position byte-compile-last-position
  (defun . byte-compile-delete-first)
  (defun . byte-compile-set-symbol-position)
  byte-compile-last-warned-form byte-compile-last-logged-file
  (defun . byte-compile-warning-prefix)
  (defun . byte-compile-warning-series)
  (defun . byte-compile-log-file)
  (defun . byte-compile-log-warning)
  (defun . byte-compile-warn)
  (defun . byte-compile-warn-obsolete)
  (defun . byte-compile-report-error)
  (defun . byte-compile-obsolete)
  (defun . byte-compile-fdefinition)
  (defun . byte-compile-arglist-signature)
  (defun . byte-compile-arglist-signatures-congruent-p)
  (defun . byte-compile-arglist-signature-string)
  (defun . byte-compile-callargs-warn)
  (defun . byte-compile-format-warn)
  (defun . byte-compile-nogroup-warn)
  (defun . byte-compile-arglist-warn)
  byte-compile-cl-functions
  (defun . byte-compile-find-cl-functions)
  (defun . byte-compile-cl-warn)
  (defun . byte-compile-print-syms)
  (defun . byte-compile-warn-about-unresolved-functions)
  (defun . byte-compile-const-symbol-p)
  (defun . byte-compile-constp)
  (defun . byte-compile-close-variables)
  (defun . displaying-byte-compile-warnings)
  (t . byte-force-recompile)
  (defun . byte-force-recompile)
  (t . byte-recompile-directory)
  (defun . byte-recompile-directory)
  no-byte-compile
  (t . byte-compile-file)
  (defun . byte-compile-file)
  (t . compile-defun)
  (defun . compile-defun)
  (defun . byte-compile-from-buffer)
  (defun . byte-compile-fix-header)
  (defun . byte-compile-insert-header)
  (defun . byte-compile-output-file-form)
  (defun . byte-compile-output-docform)
  (defun . byte-compile-keep-pending)
  (defun . byte-compile-flush-pending)
  (defun . byte-compile-file-form)
  (defun . byte-compile-file-form-defsubst)
  (defun . byte-compile-file-form-autoload)
  (defun . byte-compile-file-form-defvar)
  (defun . byte-compile-file-form-define-abbrev-table)
  (defun . byte-compile-file-form-custom-declare-variable)
  (defun . byte-compile-file-form-require)
  (defun . byte-compile-file-form-progn)
  (defun . byte-compile-file-form-eval)
  (defun . byte-compile-file-form-defun)
  (defun . byte-compile-file-form-defmacro)
  (defun . byte-compile-file-form-defmumble)
  (defun . byte-compile-output-as-comment)
  (t . byte-compile)
  (defun . byte-compile)
  (defun . byte-compile-sexp)
  (defun . byte-compile-byte-code-maker)
  (defun . byte-compile-byte-code-unmake)
  (defun . byte-compile-check-lambda-list)
  (defun . byte-compile-lambda)
  (defun . byte-compile-constants-vector)
  (defun . byte-compile-top-level)
  (defun . byte-compile-out-toplevel)
  (defun . byte-compile-top-level-body)
  (defun . byte-compile-declare-function)
  (defun . byte-compile-form)
  (defun . byte-compile-normal-call)
  (defun . byte-compile-variable-ref)
  (defun . byte-compile-get-constant)
  (defun . byte-compile-constant)
  (defun . byte-compile-push-constant)
  (defun . byte-defop-compiler)
  (defun . byte-defop-compiler19)
  (defun . byte-defop-compiler-1)
  (defun . byte-compile-subr-wrong-args)
  (defun . byte-compile-no-args)
  (defun . byte-compile-one-arg)
  (defun . byte-compile-two-args)
  (defun . byte-compile-three-args)
  (defun . byte-compile-zero-or-one-arg)
  (defun . byte-compile-one-or-two-args)
  (defun . byte-compile-two-or-three-args)
  (defun . byte-compile-noop)
  (defun . byte-compile-discard)
  (defun . byte-compile-associative)
  (defun . byte-compile-char-before)
  (defun . byte-compile-backward-char)
  (defun . byte-compile-backward-word)
  (defun . byte-compile-list)
  (defun . byte-compile-concat)
  (defun . byte-compile-minus)
  (defun . byte-compile-quo)
  (defun . byte-compile-nconc)
  (defun . byte-compile-fset)
  (defun . byte-compile-funarg)
  (defun . byte-compile-funarg-2)
  (defun . byte-compile-function-form)
  (defun . byte-compile-indent-to)
  (defun . byte-compile-insert)
  (defun . byte-compile-setq)
  (defun . byte-compile-setq-default)
  (defun . byte-compile-quote)
  (defun . byte-compile-quote-form)
  (defun . byte-compile-body)
  (defun . byte-compile-body-do-effect)
  (defun . byte-compile-form-do-effect)
  (defun . byte-compile-progn)
  (defun . byte-compile-prog1)
  (defun . byte-compile-prog2)
  (defun . byte-compile-goto-if)
  (defun . byte-compile-find-bound-condition)
  (defun . byte-compile-maybe-guarded)
  (defun . byte-compile-if)
  (defun . byte-compile-cond)
  (defun . byte-compile-and)
  (defun . byte-compile-and-recursion)
  (defun . byte-compile-or)
  (defun . byte-compile-or-recursion)
  (defun . byte-compile-while)
  (defun . byte-compile-funcall)
  (defun . byte-compile-let)
  (defun . byte-compile-let*)
  (defun . byte-compile-negated)
  (defun . byte-compile-negation-optimizer)
  (defun . byte-compile-catch)
  (defun . byte-compile-unwind-protect)
  (defun . byte-compile-track-mouse)
  (defun . byte-compile-condition-case)
  (defun . byte-compile-save-excursion)
  (defun . byte-compile-save-restriction)
  (defun . byte-compile-save-current-buffer)
  (defun . byte-compile-save-window-excursion)
  (defun . byte-compile-with-output-to-temp-buffer)
  (defun . byte-compile-defun)
  (defun . byte-compile-defmacro)
  (defun . byte-compile-defvar)
  (defun . byte-compile-autoload)
  (defun . byte-compile-lambda-form)
  (defun . byte-compile-file-form-defalias)
  (defun . byte-compile-defalias-warn)
  (defun . byte-compile-no-warnings)
  (defun . byte-compile-make-variable-buffer-local)
  (defun . byte-compile-form-make-variable-buffer-local)
  (defun . byte-compile-make-tag)
  (defun . byte-compile-out-tag)
  (defun . byte-compile-goto)
  (defun . byte-compile-out)
  (defun . byte-compile-annotate-call-tree)
  (t . display-call-tree)
  (defun . display-call-tree)
  (t . batch-byte-compile-if-not-done)
  (defun . batch-byte-compile-if-not-done)
  (t . batch-byte-compile)
  (defun . batch-byte-compile)
  (defun . batch-byte-compile-file)
  (t . batch-byte-recompile-directory)
  (defun . batch-byte-recompile-directory)
  (provide . byte-compile)
  (provide . bytecomp)
  (defun . byte-compile-report-ops))
 ("/usr/share/emacs/23.0.93/lisp/emacs-lisp/cl-macs.elc"
  (require . cl)
  (defun . cl-pop2)
  (require . bytecomp)
  cl-old-bc-file-form cl-simple-funcs cl-simple-funcs cl-safe-funcs cl-safe-funcs
  (defun . cl-simple-expr-p)
  (defun . cl-simple-exprs-p)
  (defun . cl-safe-expr-p)
  (defun . cl-const-expr-p)
  (defun . cl-const-exprs-p)
  (defun . cl-const-expr-val)
  (defun . cl-expr-access-order)
  (defun . cl-expr-contains)
  (defun . cl-expr-contains-any)
  (defun . cl-expr-depends-p)
  (defun . gensym)
  (defun . gentemp)
  (defun . defun*)
  (defun . defmacro*)
  (defun . function*)
  (defun . cl-transform-function-property)
  lambda-list-keywords lambda-list-keywords cl-macro-environment
  (defun . cl-transform-lambda)
  (defun . cl-do-arglist)
  (defun . cl-arglist-args)
  (defun . destructuring-bind)
  cl-not-toplevel
  (defun . eval-when)
  (defun . cl-compile-time-too)
  (defun . load-time-value)
  (defun . case)
  (defun . ecase)
  (defun . typecase)
  (defun . etypecase)
  (defun . block)
  cl-active-block-names
  (defun . cl-byte-compile-block)
  (defun . cl-byte-compile-throw)
  (defun . return)
  (defun . return-from)
  (defun . loop)
  (defun . cl-parse-loop-clause)
  (defun . cl-loop-let)
  (defun . cl-loop-handle-accum)
  (defun . cl-loop-build-ands)
  (defun . do)
  (defun . do*)
  (defun . cl-expand-do-loop)
  (defun . dolist)
  (defun . dotimes)
  (defun . do-symbols)
  (defun . do-all-symbols)
  (defun . psetq)
  (defun . progv)
  (defun . flet)
  (defun . labels)
  (defun . macrolet)
  (defun . symbol-macrolet)
  cl-closure-vars
  (defun . lexical-let)
  (defun . lexical-let*)
  (defun . cl-defun-expander)
  (defun . multiple-value-bind)
  (defun . multiple-value-setq)
  (defun . locally)
  (defun . the)
  cl-proclaim-history cl-declare-stack
  (defun . cl-do-proclaim)
  (defun . declare)
  (defun . define-setf-method)
  (defun . define-setf-expander)
  (defun . defsetf)
  (defun . cl-setf-make-apply)
  (defun . get-setf-method)
  (defun . cl-setf-do-modify)
  (defun . cl-setf-do-store)
  (defun . cl-setf-simple-store-p)
  (defun . setf)
  (defun . psetf)
  (defun . cl-do-pop)
  (defun . remf)
  (defun . shiftf)
  (defun . rotatef)
  (defun . letf)
  (defun . letf*)
  (defun . callf)
  (defun . callf2)
  (defun . define-modify-macro)
  (defun . defstruct)
  (defun . cl-struct-setf-expander)
  (defun . deftype)
  (defun . cl-make-type-test)
  (defun . typep)
  (defun . check-type)
  (defun . assert)
  (defun . define-compiler-macro)
  (defun . compiler-macroexpand)
  (defun . cl-byte-compile-compiler-macro)
  (defun . defsubst*)
  (defun . cl-defsubst-expand))
 ("/usr/share/emacs/23.0.93/lisp/textmodes/sgml-mode.elc" sgml-basic-offset sgml-transformation-function sgml-transformation sgml-mode-hook sgml-specials sgml-quick-keys sgml-mode-map
  (defun . sgml-make-syntax-table)
  sgml-mode-syntax-table sgml-tag-syntax-table sgml-name-8bit-mode sgml-char-names sgml-char-names-table sgml-validate-command sgml-saved-validate-command sgml-slash-distance sgml-namespace-re sgml-namespace-re sgml-name-re sgml-name-re sgml-tag-name-re sgml-tag-name-re sgml-attrs-re sgml-attrs-re sgml-start-tag-regex
  (defface . sgml-namespace)
  sgml-namespace-face sgml-font-lock-keywords-1 sgml-font-lock-keywords-1 sgml-font-lock-keywords-2 sgml-font-lock-keywords-2 sgml-font-lock-keywords sgml-font-lock-syntactic-keywords sgml-face-tag-alist sgml-tag-face-alist sgml-display-text sgml-tags-invisible sgml-tag-alist sgml-tag-help sgml-xml-mode sgml-empty-tags sgml-unclosed-tags
  (defun . sgml-xml-guess)
  (defun . sgml-comment-indent-new-line)
  (defun . sgml-mode-facemenu-add-face-function)
  (defun . sgml-fill-nobreak)
  sgml-mode-map sgml-mode-syntax-table sgml-mode-abbrev-table sgml-mode-abbrev-table
  (t . sgml-mode)
  (defun . sgml-mode)
  (defun . xml-mode)
  (defun . sgml-comment-indent)
  (defun . sgml-slash)
  (defun . sgml-slash-matching)
  (defun . sgml-name-char)
  (defun . sgml-namify-char)
  (defun . sgml-name-self)
  (defun . sgml-maybe-name-self)
  (defun . sgml-name-8bit-mode)
  sgml-tag-last sgml-tag-history
  (defun . sgml-tag)
  (autoload . skeleton-read)
  (defun . sgml-attributes)
  (defun . sgml-auto-attributes)
  (defun . sgml-tag-help)
  (defun . sgml-maybe-end-tag)
  (defun . sgml-skip-tag-backward)
  sgml-electric-tag-pair-overlays sgml-electric-tag-pair-timer
  (defun . sgml-electric-tag-pair-before-change-function)
  (defun . sgml-electric-tag-pair-flush-overlays)
  sgml-electric-tag-pair-mode
  (defun . sgml-electric-tag-pair-mode)
  (defun . sgml-skip-tag-forward)
  (defun . sgml-delete-tag)
  (defun . sgml-tags-invisible)
  (defun . sgml-point-entered)
  (defun . sgml-validate)
  (defun . sgml-at-indentation-p)
  (defun . sgml-lexical-context)
  (defun . sgml-beginning-of-tag)
  (defun . sgml-value)
  (defun . sgml-quote)
  (defun . sgml-pretty-print)
  (defun . sgml-tag-type)
  (defun . sgml-tag-start)
  (defun . sgml-tag-end)
  (defun . sgml-tag-name)
  (defun . sgml-tag-p)
  (defun . copy-sgml-tag)
  (defun . make-sgml-tag)
  (defun . sgml-make-tag)
  (defun . sgml-parse-tag-name)
  (defun . sgml-looking-back-at)
  (defun . sgml-tag-text-p)
  (defun . sgml-parse-tag-backward)
  (defun . sgml-get-context)
  (defun . sgml-show-context)
  (defun . sgml-close-tag)
  (defun . sgml-empty-tag-p)
  (defun . sgml-unclosed-tag-p)
  (defun . sgml-calculate-indent)
  (defun . sgml-indent-line)
  (defun . sgml-guess-indent)
  (defun . sgml-parse-dtd)
  html-mode-hook html-quick-keys html-mode-map html-face-tag-alist html-tag-face-alist html-display-text html-tag-alist html-tag-help html-mode-map html-mode-syntax-table html-mode-abbrev-table html-mode-abbrev-table
  (t . html-mode)
  (defun . html-mode)
  html-imenu-regexp
  (defun . html-imenu-index)
  html-autoview-mode
  (defun . html-autoview-mode)
  (defun . html-href-anchor)
  (defun . html-name-anchor)
  (defun . html-headline-1)
  (defun . html-headline-2)
  (defun . html-headline-3)
  (defun . html-headline-4)
  (defun . html-headline-5)
  (defun . html-headline-6)
  (defun . html-horizontal-rule)
  (defun . html-image)
  (defun . html-line)
  (defun . html-ordered-list)
  (defun . html-unordered-list)
  (defun . html-list-item)
  (defun . html-paragraph)
  (defun . html-checkboxes)
  (defun . html-radio-buttons)
  (provide . sgml-mode))
 ("/usr/share/emacs/23.0.93/lisp/nxml/rng-valid.elc"
  (require . xmltok)
  (require . nxml-enc)
  (require . nxml-util)
  (require . nxml-ns)
  (require . rng-match)
  (require . rng-util)
  (require . rng-loc)
  (defface . rng-error)
  rng-state-cache-distance rng-validate-chunk-size rng-validate-delay rng-validate-quick-delay rng-validate-timer rng-validate-quick-timer rng-error-count rng-message-overlay rng-message-overlay-inhibit-point rng-message-overlay-current rng-open-elements rng-pending-contents rng-collecting-text rng-validate-up-to-date-end rng-conditional-up-to-date-start rng-conditional-up-to-date-end rng-parsing-for-state rng-validate-mode rng-dtd
  (t . rng-validate-mode)
  (defun . rng-validate-mode)
  (defun . rng-set-schema-file-and-validate)
  (defun . rng-set-document-type-and-validate)
  (defun . rng-auto-set-schema-and-validate)
  (defun . rng-after-change-function)
  (defun . rng-compute-mode-line-string)
  (defun . rng-cancel-timers)
  (defun . rng-kill-timers)
  (defun . rng-activate-timers)
  (defun . rng-validate-clear)
  rng-validate-display-point rng-validate-display-modified-p
  (defun . rng-validate-while-idle-continue-p)
  (defun . rng-validate-while-idle)
  (defun . rng-validate-quick-while-idle)
  (defun . rng-validate-done)
  (defun . rng-do-some-validation)
  (defun . rng-validate-prepare)
  (defun . rng-do-some-validation-1)
  (defun . rng-clear-conditional-region)
  (defun . rng-clear-cached-state)
  (defun . rng-cache-state)
  (defun . rng-state-matches-current)
  (defun . rng-get-state)
  (defun . rng-restore-state)
  (defun . rng-set-initial-state)
  (defun . rng-clear-overlays)
  (defun . rng-mark-xmltok-dependent-regions)
  (defun . rng-mark-xmltok-dependent-region)
  (defun . rng-dependent-region-changed)
  (defun . rng-mark-xmltok-errors)
  (defun . rng-mark-invalid)
  (defun . rng-mark-not-well-formed)
  (defun . rng-mark-error)
  (defun . rng-error-modified)
  (defun . rng-echo-area-clear-function)
  (defun . rng-maybe-echo-error-at-point)
  (defun . rng-error-overlay-after)
  (defun . rng-first-error)
  (defun . rng-mouse-first-error)
  (defun . rng-next-error)
  (defun . rng-previous-error)
  (defun . rng-next-error-1)
  (defun . rng-previous-error-1)
  (defun . rng-goto-error-overlay)
  (defun . rng-error-overlay-message)
  (defun . rng-current-message-from-error-overlay-p)
  (defun . rng-find-next-error-overlay)
  (defun . rng-find-previous-error-overlay)
  (defun . rng-forward)
  (defun . rng-process-start-tag)
  (defun . rng-process-namespaces)
  (defun . rng-process-tag-name)
  (defun . rng-process-attributes)
  (defun . rng-process-start-tag-close)
  (defun . rng-mark-start-tag-close)
  (defun . rng-recover-bad-element-prefix)
  (defun . rng-recover-bad-attribute-prefix)
  (defun . rng-recover-duplicate-attribute-name)
  (defun . rng-recover-start-tag-open)
  (defun . rng-recover-attribute-value)
  (defun . rng-recover-attribute-name)
  (defun . rng-missing-attributes-message)
  (defun . rng-process-end-tag)
  (defun . rng-end-element)
  (defun . rng-missing-element-message)
  (defun . rng-recover-mismatched-end-tag)
  (defun . rng-mark-missing-end-tags)
  (defun . rng-mark-mismatched-end-tag)
  (defun . rng-push-tag)
  (defun . rng-pop-tag)
  (defun . rng-contents-string)
  (defun . rng-segment-string)
  (defun . rng-segment-blank-p)
  (defun . rng-contents-region)
  (defun . rng-process-text)
  (defun . rng-process-unknown-char)
  (defun . rng-process-unknown-entity)
  (defun . rng-region-blank-p)
  (defun . rng-flush-text)
  (defun . rng-process-end-document)
  (defun . rng-process-encoding-name)
  (defun . rng-name-to-string)
  (provide . rng-valid))
 ("/usr/share/emacs/23.0.93/lisp/nxml/rng-loc.elc"
  (require . nxml-util)
  (require . nxml-parse)
  (require . rng-parse)
  (require . rng-uri)
  (require . rng-util)
  (require . xmltok)
  rng-current-schema-file-name rng-schema-locating-files-default rng-schema-locating-file-schema-file rng-schema-locating-file-schema rng-schema-locating-files rng-schema-loader-alist rng-cached-document-element rng-document-type-history
  (defun . rng-set-document-type)
  (defun . rng-read-type-id)
  (defun . rng-set-schema-file)
  (defun . rng-set-vacuous-schema)
  (defun . rng-set-schema-file-1)
  (defun . rng-load-schema)
  (defun . rng-what-schema)
  (defun . rng-auto-set-schema)
  (defun . rng-locate-schema-file)
  (defun . rng-possible-type-ids)
  (defun . rng-locate-schema-file-using)
  (defun . rng-match-document-element-rule)
  (defun . rng-match-namespace-rule)
  (defun . rng-document-element)
  (defun . rng-get-start-tag-namespace)
  (defun . rng-match-transform-uri-rule)
  (defun . rng-match-uri-rule)
  (defun . rng-file-name-matches-uri-pattern-p)
  (defun . rng-match-default-rule)
  (defun . rng-possible-type-ids-using)
  (defun . rng-locate-schema-file-from-type-id)
  rng-schema-locating-file-alist
  (defun . rng-get-parsed-schema-locating-file)
  rng-locate-namespace-uri rng-locate-namespace-uri
  (defun . rng-parse-schema-locating-file)
  (defun . rng-save-schema-location)
  (defun . rng-save-schema-location-1)
  (provide . rng-loc))
 ("/usr/share/emacs/23.0.93/lisp/nxml/rng-uri.elc"
  (defun . rng-file-name-uri)
  (defun . rng-uri-escape-multibyte)
  (defun . rng-percent-encode)
  (defun . rng-uri-file-name)
  (defun . rng-uri-pattern-file-name-regexp)
  (defun . rng-uri-pattern-file-name-replace-match)
  (defun . rng-uri-file-name-1)
  (defun . rng-uri-error)
  (defun . rng-uri-split)
  (defun . rng-uri-join)
  (defun . rng-uri-resolve)
  (defun . rng-resolve-path)
  (defun . rng-relative-uri)
  (defun . rng-relative-path)
  (defun . rng-split-path)
  (defun . rng-join-path)
  (defun . rng-uri-unescape-multibyte)
  (defun . rng-multibyte-percent-decode)
  (defun . rng-uri-unescape-unibyte)
  (defun . rng-uri-unescape-unibyte-match)
  (defun . rng-uri-unescape-unibyte-replace)
  (provide . rng-uri))
 ("/usr/share/emacs/23.0.93/lisp/nxml/rng-parse.elc"
  (require . nxml-parse)
  (require . rng-match)
  (require . rng-dt)
  rng-parse-prev-was-start-tag
  (defun . rng-parse-validate-file)
  (defun . rng-parse-do-validate)
  (defun . rng-parse-to-match-name)
  (provide . rng-parse))
 ("/usr/share/emacs/23.0.93/lisp/nxml/nxml-parse.elc"
  (require . nxml-util)
  (require . xmltok)
  (require . nxml-enc)
  (require . nxml-ns)
  nxml-parse-file-name nxml-validate-function
  (defun . nxml-parse-file)
  (defun . nxml-parse-find-file)
  (defun . nxml-parse-instance)
  (defun . nxml-parse-instance-1)
  (defun . nxml-parse-start-tag)
  (defun . nxml-validate-tag)
  (defun . nxml-validate-error-position)
  (defun . nxml-make-name)
  (defun . nxml-current-text-string)
  (defun . nxml-parse-error)
  (defun . nxml-check-xmltok-errors)
  (provide . nxml-parse))
 ("/usr/share/emacs/23.0.93/lisp/nxml/rng-match.elc"
  (require . rng-pttrn)
  (require . rng-util)
  (require . rng-dt)
  rng-not-allowed-ipattern rng-empty-ipattern rng-text-ipattern rng-compile-table rng-being-compiled rng-ipattern-table rng-last-ipattern-index rng-match-state
  (defun . rng-update-match-state)
  (defun . rng-ipattern-defslot)
  (defun . rng-ipattern-get-type)
  (defun . rng-ipattern-set-type)
  (defun . rng-ipattern-get-index)
  (defun . rng-ipattern-set-index)
  (defun . rng-ipattern-get-name-class)
  (defun . rng-ipattern-set-name-class)
  (defun . rng-ipattern-get-datatype)
  (defun . rng-ipattern-set-datatype)
  (defun . rng-ipattern-get-after)
  (defun . rng-ipattern-set-after)
  (defun . rng-ipattern-get-child)
  (defun . rng-ipattern-set-child)
  (defun . rng-ipattern-get-value-object)
  (defun . rng-ipattern-set-value-object)
  (defun . rng-ipattern-get-nullable)
  (defun . rng-ipattern-set-nullable)
  (defun . rng-ipattern-get-memo-text-typed)
  (defun . rng-ipattern-set-memo-text-typed)
  (defun . rng-ipattern-get-memo-map-start-tag-open-deriv)
  (defun . rng-ipattern-set-memo-map-start-tag-open-deriv)
  (defun . rng-ipattern-get-memo-map-start-attribute-deriv)
  (defun . rng-ipattern-set-memo-map-start-attribute-deriv)
  (defun . rng-ipattern-get-memo-start-tag-close-deriv)
  (defun . rng-ipattern-set-memo-start-tag-close-deriv)
  (defun . rng-ipattern-get-memo-text-only-deriv)
  (defun . rng-ipattern-set-memo-text-only-deriv)
  (defun . rng-ipattern-get-memo-mixed-text-deriv)
  (defun . rng-ipattern-set-memo-mixed-text-deriv)
  (defun . rng-ipattern-get-memo-map-data-deriv)
  (defun . rng-ipattern-set-memo-map-data-deriv)
  (defun . rng-ipattern-get-memo-end-tag-deriv)
  (defun . rng-ipattern-set-memo-end-tag-deriv)
  rng-memo-map-alist-max rng-memo-map-alist-max
  (defun . rng-memo-map-get)
  (defun . rng-memo-map-add)
  (defun . rng-make-ipattern)
  (defun . rng-ipattern-maybe-init)
  (defun . rng-ipattern-clear)
  (defun . rng-gen-ipattern-index)
  (defun . rng-put-ipattern)
  (defun . rng-get-ipattern)
  rng-const-ipatterns rng-const-ipatterns
  (defun . rng-intern-after)
  (defun . rng-intern-attribute)
  (defun . rng-intern-data)
  (defun . rng-intern-data-except)
  (defun . rng-intern-value)
  (defun . rng-intern-one-or-more)
  (defun . rng-intern-one-or-more-shortcut)
  (defun . rng-intern-list)
  (defun . rng-intern-group)
  (defun . rng-intern-group-shortcut)
  (defun . rng-normalize-group-list)
  (defun . rng-intern-interleave)
  (defun . rng-normalize-interleave-list)
  (defun . rng-intern-choice)
  (defun . rng-intern-optional)
  (defun . rng-intern-choice1)
  (defun . rng-intern-choice-shortcut)
  (defun . rng-normalize-choice-list)
  (defun . rng-compare-ipattern)
  (defun . rng-name-class-contains)
  (defun . rng-name-class-contains1)
  (defun . rng-name-class-possible-names)
  (defun . rng-ipattern-to-string)
  (defun . rng-name-class-to-string)
  (defun . rng-compile-maybe-init)
  (defun . rng-compile-clear)
  (defun . rng-compile)
  (defun . rng-compile-not-allowed)
  (defun . rng-compile-empty)
  (defun . rng-compile-text)
  (defun . rng-compile-element)
  (defun . rng-element-get-child)
  (defun . rng-compile-attribute)
  (defun . rng-compile-ref)
  (defun . rng-compile-one-or-more)
  (defun . rng-compile-zero-or-more)
  (defun . rng-compile-optional)
  (defun . rng-compile-mixed)
  (defun . rng-compile-list)
  (defun . rng-compile-choice)
  (defun . rng-compile-group)
  (defun . rng-compile-interleave)
  (defun . rng-compile-dt)
  (defun . rng-compile-data)
  (defun . rng-compile-data-except)
  (defun . rng-compile-value)
  (defun . rng-compile-name-class)
  (defun . rng-map-element-attribute)
  (defun . rng-find-element-content-pattern)
  (defun . rng-search-name)
  (defun . rng-find-name-class-uris)
  (defun . rng-accum-namespace-uri)
  (defun . rng-ipattern-text-typed-p)
  (defun . rng-ipattern-compute-text-typed-p)
  (defun . rng-start-tag-open-deriv)
  (defun . rng-ipattern-memo-start-tag-open-deriv)
  (defun . rng-compute-start-tag-open-deriv)
  (defun . rng-start-attribute-deriv)
  (defun . rng-ipattern-memo-start-attribute-deriv)
  (defun . rng-compute-start-attribute-deriv)
  (defun . rng-cons-group-after)
  (defun . rng-subst-group-after)
  (defun . rng-subst-interleave-after)
  (defun . rng-apply-after)
  (defun . rng-start-tag-close-deriv)
  rng-transform-map rng-transform-map
  (defun . rng-compute-start-tag-close-deriv)
  (defun . rng-ignore-attributes-deriv)
  (defun . rng-text-only-deriv)
  (defun . rng-compute-text-only-deriv)
  (defun . rng-mixed-text-deriv)
  (defun . rng-compute-mixed-text-deriv)
  (defun . rng-end-tag-deriv)
  (defun . rng-compute-end-tag-deriv)
  (defun . rng-data-deriv)
  (defun . rng-namespace-context-tracer)
  (defun . rng-namespace-context-get-no-trace)
  rng-memo-data-deriv-max-length
  (defun . rng-ipattern-memo-data-deriv)
  (defun . rng-compute-data-deriv)
  (defun . rng-transform-multi)
  (defun . rng-transform-choice)
  (defun . rng-transform-group)
  (defun . rng-transform-interleave)
  (defun . rng-transform-one-or-more)
  (defun . rng-transform-after-child)
  (defun . rng-transform-interleave-single)
  (defun . rng-transform-group-nullable)
  (defun . rng-transform-group-nullable-gen-choices)
  (defun . rng-members-eq)
  (defun . rng-ipattern-after)
  (defun . rng-unknown-start-tag-open-deriv)
  (defun . rng-ipattern-optionalize-elements)
  (defun . rng-ipattern-empty-before-p)
  (defun . rng-ipattern-possible-start-tags)
  (defun . rng-ipattern-start-tag-possible-p)
  (defun . rng-ipattern-possible-attributes)
  (defun . rng-ipattern-possible-values)
  (defun . rng-ipattern-required-element)
  (defun . rng-ipattern-required-attributes)
  (defun . rng-compile-error)
  (defun . rng-match-state)
  (defun . rng-set-match-state)
  (defun . rng-match-state-equal)
  (defun . rng-schema-changed)
  (defun . rng-match-init-buffer)
  (defun . rng-match-start-document)
  (defun . rng-match-start-tag-open)
  (defun . rng-match-attribute-name)
  (defun . rng-match-attribute-value)
  (defun . rng-match-element-value)
  (defun . rng-match-start-tag-close)
  (defun . rng-match-mixed-text)
  (defun . rng-match-end-tag)
  (defun . rng-match-after)
  (defun . rng-match-out-of-context-start-tag-open)
  (defun . rng-match-possible-namespace-uris)
  (defun . rng-match-unknown-start-tag-open)
  (defun . rng-match-optionalize-elements)
  (defun . rng-match-ignore-attributes)
  (defun . rng-match-text-typed-p)
  (defun . rng-match-empty-content)
  (defun . rng-match-empty-before-p)
  (defun . rng-match-infer-start-tag-namespace)
  (defun . rng-match-nullable-p)
  (defun . rng-match-possible-start-tag-names)
  (defun . rng-match-start-tag-possible-p)
  (defun . rng-match-possible-attribute-names)
  (defun . rng-match-possible-value-strings)
  (defun . rng-match-required-element-name)
  (defun . rng-match-required-attribute-names)
  (defun . rng-match-save)
  (defun . rng-match-with-schema)
  (provide . rng-match))
 ("/usr/share/emacs/23.0.93/lisp/nxml/rng-dt.elc"
  (require . rng-util)
  rng-dt-error-reporter
  (defun . rng-dt-error)
  rng-dt-namespace-context-getter
  (defun . rng-dt-make-value)
  (defun . rng-dt-builtin-compile)
  (provide . rng-dt))
 ("/usr/share/emacs/23.0.93/lisp/nxml/rng-util.elc"
  (defun . rng-make-datatypes-uri)
  rng-xsd-datatypes-uri rng-xsd-datatypes-uri rng-builtin-datatypes-uri rng-builtin-datatypes-uri
  (defun . rng-uniquify-eq)
  (defun . rng-uniquify-equal)
  (defun . rng-blank-p)
  (defun . rng-substq)
  (defun . rng-complete-before-point)
  (defun . rng-completion-exact-p)
  (defun . rng-quote-string)
  (defun . rng-escape-string)
  (defun . rng-collapse-space)
  (provide . rng-util))
 ("/usr/share/emacs/23.0.93/lisp/nxml/rng-pttrn.elc" rng-schema-change-hook rng-current-schema
  (defun . rng-make-ref)
  (defun . rng-ref-set)
  (defun . rng-ref-get)
  (defun . rng-make-choice)
  (defun . rng-make-group)
  (defun . rng-make-interleave)
  (defun . rng-make-zero-or-more)
  (defun . rng-make-one-or-more)
  (defun . rng-make-optional)
  (defun . rng-make-mixed)
  (defun . rng-make-value)
  (defun . rng-make-data)
  (defun . rng-make-data-except)
  (defun . rng-make-list)
  (defun . rng-make-element)
  (defun . rng-make-attribute)
  (defun . rng-make-text)
  (defun . rng-make-empty)
  (defun . rng-make-not-allowed)
  (defun . rng-make-any-name-name-class)
  (defun . rng-make-any-name-except-name-class)
  (defun . rng-make-ns-name-name-class)
  (defun . rng-make-ns-name-except-name-class)
  (defun . rng-make-name-name-class)
  (defun . rng-make-choice-name-class)
  rng-any-content rng-any-element
  (defun . rng-make-name)
  (defun . rng-make-datatype)
  (provide . rng-pttrn))
 ("/usr/share/emacs/23.0.93/lisp/nxml/nxml-ns.elc"
  (require . nxml-util)
  nxml-ns-state nxml-ns-initial-state
  (defun . nxml-ns-state)
  (defun . nxml-ns-set-state)
  (defun . nxml-ns-state-equal)
  (defun . nxml-ns-save)
  (defun . nxml-ns-init)
  (defun . nxml-ns-push-state)
  (defun . nxml-ns-pop-state)
  (defun . nxml-ns-get-prefix)
  (defun . nxml-ns-set-prefix)
  (defun . nxml-ns-get-default)
  (defun . nxml-ns-set-default)
  (defun . nxml-ns-get-context)
  (defun . nxml-ns-prefixes-for)
  (defun . nxml-ns-prefix-for)
  (defun . nxml-ns-changed-prefixes)
  (provide . nxml-ns))
 ("/usr/share/emacs/23.0.93/lisp/nxml/nxml-mode.elc"
  (require . xmltok)
  (require . nxml-enc)
  (require . nxml-glyph)
  (require . nxml-util)
  (require . nxml-rap)
  (require . nxml-outln)
  nxml-char-ref-display-glyph-flag nxml-mode-hook nxml-sexp-element-flag nxml-slash-auto-complete-flag nxml-child-indent nxml-attribute-indent nxml-bind-meta-tab-to-complete-flag nxml-prefer-utf-16-to-utf-8-flag nxml-prefer-utf-16-little-to-big-endian-flag nxml-default-buffer-file-coding-system nxml-auto-insert-xml-declaration-flag
  (defface . nxml-delimited-data)
  (defface . nxml-name)
  (defface . nxml-ref)
  (defface . nxml-delimiter)
  (defface . nxml-text)
  (defface . nxml-comment-content)
  (defface . nxml-comment-delimiter)
  (defface . nxml-processing-instruction-delimiter)
  (defface . nxml-processing-instruction-target)
  (defface . nxml-processing-instruction-content)
  (defface . nxml-cdata-section-delimiter)
  (defface . nxml-cdata-section-CDATA)
  (defface . nxml-cdata-section-content)
  (defface . nxml-char-ref-number)
  (defface . nxml-char-ref-delimiter)
  (defface . nxml-entity-ref-name)
  (defface . nxml-entity-ref-delimiter)
  (defface . nxml-tag-delimiter)
  (defface . nxml-tag-slash)
  (defface . nxml-element-prefix)
  (defface . nxml-element-colon)
  (defface . nxml-element-local-name)
  (defface . nxml-attribute-prefix)
  (defface . nxml-attribute-colon)
  (defface . nxml-attribute-local-name)
  (defface . nxml-namespace-attribute-xmlns)
  (defface . nxml-namespace-attribute-colon)
  (defface . nxml-namespace-attribute-prefix)
  (defface . nxml-attribute-value)
  (defface . nxml-attribute-value-delimiter)
  (defface . nxml-namespace-attribute-value)
  (defface . nxml-namespace-attribute-value-delimiter)
  (defface . nxml-prolog-literal-delimiter)
  (defface . nxml-prolog-literal-content)
  (defface . nxml-prolog-keyword)
  (defface . nxml-markup-declaration-delimiter)
  (defface . nxml-hash)
  (defface . nxml-glyph)
  nxml-prolog-regions nxml-last-fontify-end nxml-degraded nxml-completion-hook nxml-in-mixed-content-hook nxml-mixed-scan-distance nxml-end-tag-indent-scan-distance nxml-char-ref-extra-display nxml-mode-map nxml-font-lock-keywords
  (defun . nxml-set-face)
  (t . nxml-mode)
  (defun . nxml-mode)
  (defun . nxml-cleanup)
  (defun . nxml-degrade)
  (defun . nxml-debug-region)
  (defun . nxml-after-change)
  (defun . nxml-after-change1)
  (defun . nxml-insert-xml-declaration)
  (defun . nxml-prepare-to-save)
  (defun . nxml-select-coding-system)
  (defun . nxml-unsuitable-coding-system-message)
  nxml-utf-16-coding-systems nxml-utf-16-coding-systems nxml-utf-coding-systems nxml-utf-coding-systems
  (defun . nxml-coding-system-unicode-p)
  (defun . nxml-coding-system-name)
  (defun . nxml-fix-encoding-declaration)
  (defun . nxml-choose-suitable-coding-system)
  (defun . nxml-choose-utf-coding-system)
  (defun . nxml-choose-utf-16-coding-system)
  (defun . nxml-coding-system-member)
  (defun . nxml-unfontify-region)
  (defun . nxml-extend-region)
  (defun . nxml-extend-after-change-region)
  (defun . nxml-extend-after-change-region1)
  (defun . nxml-fontify-matcher)
  (defun . nxml-fontify-prolog)
  (defun . nxml-apply-fontify-rule)
  (defun . nxml-fontify-attributes)
  (defun . nxml-fontify-attribute)
  (defun . nxml-fontify-qname)
  (defun . nxml-electric-slash)
  (defun . nxml-balanced-close-start-tag-block)
  (defun . nxml-balanced-close-start-tag-inline)
  (defun . nxml-balanced-close-start-tag)
  (defun . nxml-finish-element)
  nxml-last-split-position
  (defun . nxml-split-element)
  (defun . nxml-finish-element-1)
  (defun . nxml-indent-line)
  (defun . nxml-compute-indent)
  (defun . nxml-compute-indent-from-matching-start-tag)
  (defun . nxml-compute-indent-from-previous-line)
  (defun . nxml-merge-indent-context-type)
  (defun . nxml-compute-indent-in-token)
  (defun . nxml-compute-indent-in-start-tag)
  (defun . nxml-attribute-value-boundary)
  (defun . nxml-compute-indent-in-delimited-token)
  (defun . nxml-complete)
  (defun . nxml-forward-balanced-item)
  (defun . nxml-forward-single-balanced-item)
  (defun . nxml-backward-single-balanced-item)
  (defun . nxml-scan-forward-within)
  (defun . nxml-scan-backward-within)
  (defun . nxml-scan-forward-in-attribute-value)
  (defun . nxml-scan-backward-in-attribute-value)
  (defun . nxml-find-following-attribute)
  (defun . nxml-find-preceding-attribute)
  (defun . nxml-up-element)
  (defun . nxml-backward-up-element)
  (defun . nxml-down-element)
  (defun . nxml-backward-down-element)
  (defun . nxml-forward-element)
  (defun . nxml-backward-element)
  (defun . nxml-mark-token-after)
  (defun . nxml-mark-paragraph)
  (defun . nxml-forward-paragraph)
  (defun . nxml-backward-paragraph)
  (defun . nxml-forward-single-paragraph)
  (defun . nxml-backward-single-paragraph)
  (defun . nxml-token-contains-data-p)
  (defun . nxml-paragraph-end-pos)
  (defun . nxml-paragraph-start-pos)
  (defun . nxml-token-ends-line-p)
  (defun . nxml-token-begins-line-p)
  (defun . nxml-in-mixed-content-p)
  (defun . nxml-preceding-sibling-data-p)
  (defun . nxml-following-sibling-data-p)
  (defun . nxml-do-fill-paragraph)
  (defun . nxml-newline-and-indent)
  nxml-dynamic-markup-prev-pos nxml-dynamic-markup-prev-lengths nxml-dynamic-markup-prev-found-marker nxml-dynamic-markup-prev-start-tags
  (defun . nxml-dynamic-markup-word)
  (defun . nxml-try-copy-markup)
  nxml-char-name-ignore-case nxml-char-name-alist nxml-char-name-table nxml-autoload-char-name-set-list
  (defun . nxml-enable-char-name-set)
  (defun . nxml-disable-char-name-set)
  (defun . nxml-char-name-set-enabled-p)
  (defun . nxml-autoload-char-name-set)
  (defun . nxml-define-char-name-set)
  (defun . nxml-get-char-name)
  nxml-named-char-history
  (defun . nxml-insert-named-char)
  (defun . nxml-maybe-load-char-name-set)
  (defun . nxml-toggle-char-ref-extra-display)
  (defun . nxml-char-ref-display-extra)
  (defun . nxml-clear-char-ref-extra-display)
  (defun . nxml-start-delimiter-length)
  (defun . nxml-end-delimiter-length)
  (defun . nxml-token-type-friendly-name)
  (provide . nxml-mode))
 ("/usr/share/emacs/23.0.93/lisp/nxml/nxml-outln.elc"
  (require . xmltok)
  (require . nxml-util)
  (require . nxml-rap)
  nxml-section-element-name-regexp nxml-heading-element-name-regexp nxml-outline-child-indent
  (defface . nxml-heading)
  (defface . nxml-outline-indicator)
  (defface . nxml-outline-active-indicator)
  (defface . nxml-outline-ellipsis)
  nxml-heading-scan-distance nxml-outline-prefix-map
  (defun . nxml-show-all)
  (defun . nxml-hide-all-text-content)
  (defun . nxml-show-direct-text-content)
  (defun . nxml-show-direct-subheadings)
  (defun . nxml-hide-direct-text-content)
  (defun . nxml-hide-subheadings)
  (defun . nxml-show)
  (defun . nxml-hide-text-content)
  (defun . nxml-show-subheadings)
  (defun . nxml-hide-other)
  nxml-outline-state-transform-exceptions nxml-target-section-pos nxml-depth-in-target-section nxml-outline-state-transform-alist
  (defun . nxml-transform-buffer-outline)
  (defun . nxml-transform-subtree-outline)
  (defun . nxml-outline-pre-adjust-point)
  (defun . nxml-outline-adjust-point)
  (defun . nxml-transform-outline-state)
  (defun . nxml-section-tag-transform-outline-state)
  (defun . nxml-get-outline-state)
  (defun . nxml-set-outline-state)
  (defun . nxml-mouse-show-direct-text-content)
  (defun . nxml-mouse-hide-direct-text-content)
  (defun . nxml-mouse-hide-subheadings)
  (defun . nxml-mouse-show-direct-subheadings)
  (defun . nxml-mouse-set-point)
  (defun . nxml-token-start-tag-p)
  (defun . nxml-token-end-tag-p)
  (defun . nxml-refresh-outline)
  nxml-outline-display-section-tag-function
  (defun . nxml-outline-display-rest)
  nxml-highlighted-less-than nxml-highlighted-less-than nxml-highlighted-greater-than nxml-highlighted-greater-than nxml-highlighted-colon nxml-highlighted-colon nxml-highlighted-slash nxml-highlighted-slash nxml-highlighted-ellipsis nxml-highlighted-ellipsis nxml-highlighted-empty-end-tag nxml-highlighted-empty-end-tag nxml-highlighted-inactive-minus nxml-highlighted-inactive-minus nxml-highlighted-active-minus nxml-highlighted-active-minus nxml-highlighted-active-plus nxml-highlighted-active-plus
  (defun . nxml-display-section)
  (defun . nxml-highlighted-qname)
  (defun . nxml-outline-display-single-line-end-tag)
  (defun . nxml-outline-display-multi-line-end-tag)
  nxml-outline-show-map nxml-outline-show-help nxml-outline-hiding-tag-map nxml-outline-hiding-tag-help nxml-outline-showing-tag-map nxml-outline-showing-tag-help
  (defun . nxml-outline-set-overlay)
  (defun . nxml-end-of-heading)
  (defun . nxml-token-starts-line-p)
  nxml-cached-section-tag-regexp nxml-cached-section-element-name-regexp
  (defun . nxml-make-section-tag-regexp)
  (defun . nxml-make-section-tag-regexp-1)
  (defun . nxml-section-tag-forward)
  (defun . nxml-section-tag-backward)
  (defun . nxml-section-start-position)
  (defun . nxml-back-to-section-start)
  (defun . nxml-after-section-start-tag)
  (defun . nxml-heading-start-position)
  (defun . nxml-report-outline-error)
  (defun . nxml-outline-error)
  (defun . nxml-debug-overlays)
  (provide . nxml-outln))
 ("/usr/share/emacs/23.0.93/lisp/nxml/nxml-rap.elc"
  (require . xmltok)
  (require . nxml-util)
  nxml-prolog-end nxml-scan-end
  (defun . nxml-get-inside)
  (defun . nxml-clear-inside)
  (defun . nxml-set-inside)
  (defun . nxml-inside-end)
  (defun . nxml-inside-start)
  (defun . nxml-scan-after-change)
  (defun . nxml-scan-prolog)
  (defun . nxml-adjust-start-for-dependent-regions)
  (defun . nxml-mark-parse-dependent-regions)
  (defun . nxml-mark-parse-dependent-region)
  (defun . nxml-clear-dependent-regions)
  (defun . nxml-token-after)
  (defun . nxml-token-before)
  (defun . nxml-tokenize-forward)
  (defun . nxml-move-tag-backwards)
  (defun . nxml-move-outside-backwards)
  (defun . nxml-ensure-scan-up-to-date)
  (defun . nxml-scan-element-forward)
  (defun . nxml-scan-element-backward)
  (defun . nxml-scan-error)
  (provide . nxml-rap))
 ("/usr/share/emacs/23.0.93/lisp/nxml/nxml-util.elc" nxml-debug
  (defun . nxml-debug)
  (defun . nxml-debug-change)
  (defun . nxml-debug-set-inside)
  (defun . nxml-debug-clear-inside)
  (defun . nxml-make-namespace)
  (defun . nxml-namespace-name)
  nxml-xml-namespace-uri nxml-xml-namespace-uri nxml-xmlns-namespace-uri nxml-xmlns-namespace-uri
  (defun . nxml-with-degradation-on-error)
  (defun . nxml-with-unmodifying-text-property-changes)
  (defun . nxml-with-invisible-motion)
  (defun . nxml-display-file-parse-error)
  (defun . nxml-signal-file-parse-error)
  (provide . nxml-util))
 ("/usr/share/emacs/23.0.93/lisp/nxml/nxml-glyph.elc" nxml-ascii-glyph-set nxml-ascii-glyph-set nxml-latin1-glyph-set nxml-latin1-glyph-set nxml-misc-fixed-1-glyph-set nxml-misc-fixed-2-glyph-set nxml-misc-fixed-3-glyph-set nxml-wgl4-glyph-set nxml-glyph-set-hook nxml-glyph-set
  (defun . nxml-x-set-glyph-set)
  (defun . nxml-w32-set-glyph-set)
  (defun . nxml-window-system-set-glyph-set)
  (defun . nxml-terminal-set-glyph-set)
  (t . nxml-glyph-display-string)
  (defun . nxml-glyph-display-string)
  (defun . nxml-glyph-set-contains-p)
  (provide . nxml-glyph))
 ("/usr/share/emacs/23.0.93/lisp/nxml/nxml-enc.elc" nxml-file-name-ignore-case nxml-cached-file-name-auto-coding-regexp nxml-cached-auto-mode-alist
  (defun . nxml-file-name-auto-coding-regexp)
  nxml-non-xml-set-auto-coding-function
  (defun . nxml-set-auto-coding)
  (defun . nxml-set-xml-coding)
  (defun . nxml-detect-coding-system)
  (defun . nxml-mime-charset-coding-system)
  (defun . nxml-start-auto-coding)
  (defun . nxml-stop-auto-coding)
  (provide . nxml-enc))
 ("/usr/share/emacs/23.0.93/lisp/nxml/xmltok.elc" xmltok-type xmltok-start xmltok-name-colon xmltok-name-end xmltok-replacement xmltok-attributes xmltok-namespace-attributes xmltok-dtd xmltok-dependent-regions xmltok-errors
  (defun . xmltok-save)
  (defun . xmltok-attribute-name-start)
  (defun . xmltok-attribute-name-colon)
  (defun . xmltok-attribute-name-end)
  (defun . xmltok-attribute-value-start)
  (defun . xmltok-attribute-value-end)
  (defun . xmltok-attribute-raw-normalized-value)
  (defun . xmltok-attribute-refs)
  (defun . xmltok-attribute-prefix)
  (defun . xmltok-attribute-local-name)
  (defun . xmltok-attribute-value)
  (defun . xmltok-start-tag-prefix)
  (defun . xmltok-start-tag-local-name)
  (defun . xmltok-end-tag-prefix)
  (defun . xmltok-end-tag-local-name)
  (defun . xmltok-start-tag-qname)
  (defun . xmltok-end-tag-qname)
  (defun . xmltok-make-attribute)
  (defun . xmltok-error-message)
  (defun . xmltok-error-start)
  (defun . xmltok-error-end)
  (defun . xmltok-make-error)
  (defun . xmltok-add-error)
  (defun . xmltok-add-dependent)
  (defun . xmltok-forward)
  (defun . xmltok-forward-special)
  xmltok-ncname-regexp xmltok-ncname-regexp
  (defun . xmltok-scan-after-lt)
  (defun . xmltok-scan-after-processing-instruction-open)
  (defun . xmltok-scan-after-comment-open)
  (defun . xmltok-scan-attributes)
  (defun . xmltok-add-attribute)
  (defun . xmltok-normalize-attribute)
  (defun . xmltok-scan-after-amp)
  xmltok-entity-error-messages xmltok-entity-error-messages
  (defun . xmltok-handle-entity)
  (defun . xmltok-scan-char-ref)
  (defun . xmltok-char-number)
  (defun . xmltok-unclosed-reparse-p)
  (defun . xmltok-semi-closed-reparse-p)
  (defun . xmltok-valid-char-p)
  (defun . xmltok-unicode-to-char)
  xmltok-contains-doctype xmltok-doctype-external-subset-flag xmltok-internal-subset-start xmltok-had-param-entity-ref xmltok-prolog-regions xmltok-standalone xmltok-markup-declaration-doctype-flag xmltok-predefined-entity-alist xmltok-predefined-entity-alist
  (defun . xmltok-forward-prolog)
  xmltok-bad-xml-decl-regexp xmltok-bad-xml-decl-regexp
  (t . xmltok-get-declared-encoding-position)
  (defun . xmltok-get-declared-encoding-position)
  (defun . xmltok-scan-xml-declaration)
  xmltok-markup-declaration-alist xmltok-markup-declaration-alist
  (defun . xmltok-parse-prolog-item)
  (defun . xmltok-parse-doctype)
  (defun . xmltok-parse-attlist-declaration)
  (defun . xmltok-parse-nmtoken-group)
  (defun . xmltok-parse-element-declaration)
  (defun . xmltok-parse-model-group)
  (defun . xmltok-parse-model-group-member)
  (defun . xmltok-parse-entity-declaration)
  (defun . xmltok-define-entity)
  (defun . xmltok-parse-entity-value)
  (defun . xmltok-parse-notation-declaration)
  (defun . xmltok-parse-external-id)
  (defun . xmltok-require-next-token)
  (defun . xmltok-require-token)
  (defun . xmltok-current-token-string)
  (defun . xmltok-markup-declaration-parse-error)
  (defun . xmltok-skip-markup-declaration)
  (defun . xmltok-prolog-region-type)
  (defun . xmltok-next-prolog-token)
  (defun . xmltok-scan-prolog-literal)
  (defun . xmltok-scan-prolog-after-processing-instruction-open)
  (defun . xmltok-parse-entities)
  (defun . xmltok-parse-entity)
  (defun . xmltok-parse-entity-replacement)
  (defun . xmltok-handle-nested-entity)
  (defun . xmltok-append-entity-def)
  (defun . xmltok-add-prolog-region)
  (defun . xmltok-merge-attributes)
  (defun . xmltok-forward-test)
  (defun . xmltok-next-prolog-token-test)
  (provide . xmltok))
 ("/home/hobbes/nxhtml/util/mlinks.el" mlinks:version
  (require . cl)
  (require . ourcomments-util)
  (require . url-parse)
  (require . url-expand)
  (require . appmenu)
  mlinks-mode-functions mlinks-mode-map
  (defun . mlinks-want-marked-links)
  (defun . mlinks-after-change-major-mode)
  mlinks-hilight-this-buffer mlinks-hilight-point-ovl mlinks-hilighter-timer
  (defun . mlinks-toggle-hilight)
  (defun . mlinks-stop-hilighter)
  (defun . mlinks-start-hilighter)
  (defun . mlinks-make-point-ovl)
  (defun . mlinks-link-at-point)
  (defun . mlinks-hilighter)
  mlinks-active-hilight-keymap mlinks-inactive-hilight-keymap
  (defun . mlinks-pre-command)
  (defun . mlinks-activate-hilight)
  (defun . mlinks-deactivate-hilight)
  (defun . mlinks-someactivate-hilight)
  (defun . mlinks-backward-link)
  (defun . mlinks-forward-link)
  (defun . mlinks-goto)
  (defun . mlinks-goto-other-window)
  (defun . mlinks-goto-other-frame)
  (defun . mlinks-goto-1)
  (defun . mlinks-get-boolean)
  (defun . mlinks-get-action)
  (defun . mlinks-prev-saved-position)
  (defun . mlinks-next-saved-position)
  (defun . mlinks-goto-n)
  mlinks-places-n mlinks-places mlinks-temp-buffer-where
  (defun . mlinks-switch-to-buffer)
  (defun . mlinks-switch-to-buffer-1)
  (defun . mlinks-custom)
  (defun . mlinks-appmenu)
  (defun . mlinks-add-appmenu)
  (defun . mlinks-remove-overlays)
  mlinks-mode
  (t . mlinks-mode)
  (defun . mlinks-mode)
  (defun . mlinks-turn-on-in-buffer)
  mlinks-mode-major-mode mlinks-global-mode
  (defun . mlinks-global-mode)
  mlinks-global-mode-buffers
  (defun . mlinks-global-mode-enable-in-buffers)
  (defun . mlinks-global-mode-check-buffers)
  (defun . mlinks-global-mode-cmhh)
  mlinks-active-links
  (defun . mlinks-active-links-toggle)
  (defface . mlinks-link)
  mlinks-link
  (defun . mlinks-mark-link)
  mlinks-mark-links-timer
  (defun . mlinks-mark-next-link)
  mlinks-link-update-pos-min mlinks-link-update-pos-max
  (defun . mlinks-stop-marking-links)
  (defun . mlinks-start-marking-links)
  mlinks-after-change-extra
  (defun . mlinks-after-change)
  (defun . mlinks-html-style-goto)
  (defun . mlinks-html-style-hili)
  (require . rx)
  mlinks-html-link-regex
  (defun . mlinks-html-forward-link)
  (defun . mlinks-html-backward-link)
  (defun . mlinks-html-style-mode-fun)
  (defun . mlink-check-file-to-edit)
  (defun . mlinks-html-edit-at)
  (defun . mlinks-html-mail-to)
  (defun . mlinks-html-href-act-on)
  (defun . mlinks-html-possible-href-actions)
  (defun . mlinks-html-find-base-href)
  (defun . mlinks-elisp-custom-goto)
  (defun . mlinks-custom-next-mark)
  (defun . mlinks-elisp-goto)
  (defun . mlinks-elisp-hili)
  (defun . mlinks-elisp-mode-fun)
  (defun . mlinks-elisp-function)
  (defun . mlinks-elisp-mode-symbol)
  (defun . mlinks-elisp-mode-require)
  (defun . mlinks-hit-test)
  (defun . mlinks-handle-reg-fun-list)
  (provide . mlinks))
 ("/usr/share/emacs/23.0.93/lisp/emacs-lisp/rx.elc" rx-constituents rx-syntax rx-categories rx-greedy-flag
  (defun . rx-info)
  (defun . rx-check)
  (defun . rx-group-if)
  (defun . rx-and)
  (defun . rx-or)
  (defun . rx-anything)
  (defun . rx-any-delete-from-range)
  (defun . rx-any-condense-range)
  (defun . rx-check-any-string)
  (defun . rx-check-any)
  (defun . rx-any)
  (defun . rx-check-not)
  (defun . rx-not)
  (defun . rx-not-char)
  (defun . rx-not-syntax)
  (defun . rx-trans-forms)
  (defun . rx-=)
  (defun . rx->=)
  (defun . rx-**)
  (defun . rx-repeat)
  (defun . rx-submatch)
  (defun . rx-backref)
  (defun . rx-check-backref)
  (defun . rx-kleene)
  (defun . rx-atomic-p)
  (defun . rx-syntax)
  (defun . rx-check-category)
  (defun . rx-category)
  (defun . rx-eval)
  (defun . rx-greedy)
  (defun . rx-regexp)
  (defun . rx-form)
  (t . rx-to-string)
  (defun . rx-to-string)
  (t . rx)
  (defun . rx)
  (provide . rx))
 ("/home/hobbes/nxhtml/util/appmenu.el" appmenu:version
  (require . cl)
  appmenu-show-help appmenu-show-point-menu appmenu-alist
  (defun . appmenu-sort-by-priority)
  (t . appmenu-add)
  (defun . appmenu-add)
  (defun . appmenu-remove)
  (defun . appmenu-help)
  (defun . appmenu-keymap-len)
  appmenu-mouse-only
  (defun . appmenu-make-menu-for-point)
  (defun . appmenu-map)
  (defun . appmenu-popup)
  appmenu-mode-map appmenu-mode
  (defun . appmenu-mode)
  (provide . appmenu))
 ("/usr/share/emacs/23.0.93/lisp/textmodes/flyspell.elc"
  (require . ispell)
  flyspell-highlight-flag flyspell-mark-duplications-flag flyspell-mark-duplications-exceptions flyspell-sort-corrections flyspell-duplicate-distance flyspell-delay flyspell-persistent-highlight flyspell-highlight-properties flyspell-default-delayed-commands flyspell-delayed-commands flyspell-default-deplacement-commands flyspell-deplacement-commands flyspell-issue-welcome-flag flyspell-issue-message-flag flyspell-incorrect-hook flyspell-default-dictionary flyspell-tex-command-regexp flyspell-check-tex-math-command flyspell-dictionaries-that-consider-dash-as-word-delimiter flyspell-abbrev-p flyspell-use-global-abbrev-table-p flyspell-mode-line-string flyspell-large-region flyspell-insert-function flyspell-before-incorrect-word-string flyspell-after-incorrect-word-string flyspell-use-meta-tab flyspell-auto-correct-binding flyspell-generic-check-word-predicate flyspell-generic-check-word-p
  (defun . mail-mode-flyspell-verify)
  (defun . texinfo-mode-flyspell-verify)
  (defun . tex-mode-flyspell-verify)
  (defun . sgml-mode-flyspell-verify)
  flyspell-prog-text-faces
  (defun . flyspell-generic-progmode-verify)
  (t . flyspell-prog-mode)
  (defun . flyspell-prog-mode)
  flyspell-mouse-map flyspell-mode-map flyspell-consider-dash-as-word-delimiter-flag flyspell-dash-dictionary flyspell-dash-local-dictionary
  (defface . flyspell-incorrect)
  (defface . flyspell-duplicate)
  flyspell-overlay flyspell-mode
  (t . flyspell-mode)
  (defun . flyspell-mode)
  (t . turn-on-flyspell)
  (defun . turn-on-flyspell)
  (t . turn-off-flyspell)
  (defun . turn-off-flyspell)
  flyspell-buffers
  (defun . flyspell-minibuffer-p)
  flyspell-last-buffer
  (defun . flyspell-accept-buffer-local-defs)
  (defun . flyspell-hack-local-variables-hook)
  (defun . flyspell-kill-ispell-hook)
  (defun . flyspell-mode-on)
  (defun . flyspell-delay-commands)
  (defun . flyspell-delay-command)
  (defun . flyspell-deplacement-commands)
  (defun . flyspell-deplacement-command)
  flyspell-word-cache-start flyspell-word-cache-end flyspell-word-cache-word flyspell-word-cache-result flyspell-pre-buffer flyspell-pre-point flyspell-pre-column flyspell-pre-pre-buffer flyspell-pre-pre-point flyspell-previous-command
  (defun . flyspell-pre-command-hook)
  (t . flyspell-mode-off)
  (defun . flyspell-mode-off)
  (defun . flyspell-check-pre-word-p)
  flyspell-changes
  (defun . flyspell-after-change-function)
  (defun . flyspell-check-changed-word-p)
  (defun . flyspell-check-word-p)
  (defun . flyspell-debug-signal-no-check)
  (defun . flyspell-debug-signal-pre-word-checked)
  (defun . flyspell-debug-signal-word-checked)
  (defun . flyspell-debug-signal-changed-checked)
  (defun . flyspell-post-command-hook)
  (defun . flyspell-notify-misspell)
  (defun . flyspell-word-search-backward)
  (defun . flyspell-word-search-forward)
  (defun . flyspell-word)
  (defun . flyspell-math-tex-command-p)
  (defun . flyspell-tex-command-p)
  flyspell-casechars-cache flyspell-ispell-casechars-cache
  (defun . flyspell-get-casechars)
  flyspell-not-casechars-cache flyspell-ispell-not-casechars-cache
  (defun . flyspell-get-not-casechars)
  (defun . flyspell-get-word)
  (defun . flyspell-small-region)
  flyspell-external-ispell-process flyspell-external-ispell-buffer flyspell-large-region-buffer flyspell-large-region-beg flyspell-large-region-end
  (defun . flyspell-external-point-words)
  (defun . flyspell-process-localwords)
  (defun . flyspell-check-region-doublons)
  (defun . flyspell-large-region)
  (t . flyspell-region)
  (defun . flyspell-region)
  (t . flyspell-buffer)
  (defun . flyspell-buffer)
  flyspell-old-buffer-error flyspell-old-pos-error
  (defun . flyspell-goto-next-error)
  (defun . flyspell-overlay-p)
  (defun . flyspell-delete-region-overlays)
  (defun . flyspell-delete-all-overlays)
  (defun . flyspell-unhighlight-at)
  (defun . flyspell-properties-at-p)
  (defun . make-flyspell-overlay)
  (defun . flyspell-highlight-incorrect-region)
  (defun . flyspell-highlight-duplicate-region)
  flyspell-auto-correct-pos flyspell-auto-correct-region flyspell-auto-correct-ring flyspell-auto-correct-word
  (defun . flyspell-check-previous-highlighted-word)
  (defun . flyspell-display-next-corrections)
  (defun . flyspell-abbrev-table)
  (defun . flyspell-define-abbrev)
  (defun . flyspell-auto-correct-word)
  flyspell-auto-correct-previous-pos
  (defun . flyspell-auto-correct-previous-hook)
  (defun . flyspell-auto-correct-previous-word)
  (defun . flyspell-correct-word)
  (defun . flyspell-correct-word-before-point)
  (defun . flyspell-do-correct)
  (defun . flyspell-ajust-cursor-point)
  (defun . flyspell-emacs-popup)
  (defun . flyspell-xemacs-popup)
  (defun . flyspell-maybe-correct-transposition)
  (defun . flyspell-maybe-correct-doubling)
  (defun . flyspell-already-abbrevp)
  (defun . flyspell-change-abbrev)
  (provide . flyspell))
 ("/usr/share/emacs/23.0.93/lisp/textmodes/ispell.elc"
  (defun . ispell-check-minver)
  (defun . check-ispell-version)
  ispell-highlight-p ispell-lazy-highlight ispell-highlight-face ispell-check-comments ispell-query-replace-choices ispell-skip-tib ispell-tib-ref-beginning ispell-tib-ref-end ispell-keep-choices-win ispell-choices-win-default-height ispell-program-name ispell-alternate-dictionary ispell-complete-word-dict ispell-message-dictionary-alist ispell-message-fcc-skip ispell-grep-command ispell-grep-options ispell-look-command ispell-look-p ispell-have-new-look ispell-look-options ispell-use-ptys-p ispell-following-word ispell-help-in-bufferp ispell-quietly ispell-format-word-function ispell-format-word ispell-use-framepop-p ispell-personal-dictionary ispell-silently-savep ispell-local-dictionary-overridden ispell-local-dictionary ispell-extra-args ispell-skip-html ispell-local-dictionary-alist ispell-dictionary-base-alist ispell-dictionary-alist ispell-really-aspell ispell-really-hunspell ispell-encoding8-command ispell-aspell-supports-utf8 ispell-required-version ispell-offset ispell-version ispell-version
  (defun . ispell-check-version)
  (defun . ispell-call-process)
  (defun . ispell-call-process-region)
  ispell-menu-map ispell-menu-xemacs ispell-menu-map-needed ispell-library-directory ispell-process ispell-async-processp ispell-aspell-dictionary-alist
  (defun . ispell-find-aspell-dictionaries)
  ispell-aspell-data-dir ispell-aspell-dict-dir
  (defun . ispell-get-aspell-config-value)
  (defun . ispell-aspell-find-dictionary)
  (defun . ispell-aspell-add-aliases)
  ispell-last-program-name ispell-initialize-spellchecker-hook
  (defun . ispell-set-spellchecker-params)
  (defun . ispell-valid-dictionary-list)
  (defun . ispell-int-char)
  ispell-current-dictionary ispell-current-personal-dictionary ispell-dictionary
  (defun . ispell-decode-string)
  (defun . ispell-get-decoded-string)
  (defun . ispell-get-casechars)
  (defun . ispell-get-not-casechars)
  (defun . ispell-get-otherchars)
  (defun . ispell-get-many-otherchars-p)
  (defun . ispell-get-ispell-args)
  (defun . ispell-get-extended-character-mode)
  (defun . ispell-get-coding-system)
  ispell-pdict-modified-p ispell-quit ispell-process-directory ispell-filter ispell-filter-continue ispell-output-buffer ispell-session-buffer ispell-cmd-args ispell-query-replace-marker ispell-recursive-edit-marker ispell-checking-message ispell-choices-buffer ispell-choices-buffer ispell-overlay ispell-words-keyword ispell-dictionary-keyword ispell-pdict-keyword ispell-parsing-keyword ispell-skip-region-alist ispell-tex-skip-alists ispell-html-skip-alists ispell-local-pdict ispell-buffer-local-name ispell-parser ispell-region-end ispell-check-only
  (defun . ispell-accept-output)
  (defun . ispell-send-replacement)
  (defun . ispell-send-string)
  (defun . ispell-insert-word)
  (t . ispell-word)
  (defun . ispell-word)
  (defun . ispell-get-word)
  (t . ispell-pdict-save)
  (defun . ispell-pdict-save)
  (defun . ispell-command-loop)
  (defun . ispell-show-choices)
  (t . ispell-help)
  (defun . ispell-help)
  (defun . lookup-words)
  (defun . ispell-filter)
  (defun . ispell-highlight-spelling-error-generic)
  (defun . ispell-highlight-spelling-error-xemacs)
  (defun . ispell-highlight-spelling-error-overlay)
  (defun . ispell-highlight-spelling-error)
  (defun . ispell-adjusted-window-height)
  (defun . ispell-overlay-window)
  (defun . ispell-parse-output)
  (defun . ispell-process-status)
  (defun . ispell-start-process)
  (defun . ispell-init-process)
  (t . ispell-kill-ispell)
  (defun . ispell-kill-ispell)
  (t . ispell-change-dictionary)
  (defun . ispell-change-dictionary)
  (defun . ispell-internal-change-dictionary)
  (t . ispell-region)
  (defun . ispell-region)
  (defun . ispell-begin-skip-region-regexp)
  (defun . ispell-begin-skip-region)
  (defun . ispell-begin-tex-skip-regexp)
  (defun . ispell-skip-region-list)
  (defun . ispell-tex-arg-end)
  (defun . ispell-ignore-fcc)
  (defun . ispell-skip-region)
  (defun . ispell-get-line)
  (defun . ispell-looking-at)
  (defun . ispell-process-line)
  (t . ispell-comments-and-strings)
  (defun . ispell-comments-and-strings)
  (t . ispell-buffer)
  (defun . ispell-buffer)
  (t . ispell-continue)
  (defun . ispell-continue)
  (defun . ispell-horiz-scroll)
  (t . ispell-complete-word)
  (defun . ispell-complete-word)
  (t . ispell-complete-word-interior-frag)
  (defun . ispell-complete-word-interior-frag)
  (t . ispell)
  (defun . ispell)
  ispell-minor-mode ispell-minor-keymap
  (t . ispell-minor-mode)
  (defun . ispell-minor-mode)
  (defun . ispell-minor-check)
  ispell-message-text-end
  (defun . ispell-mime-multipartp)
  (defun . ispell-mime-skip-part)
  (t . ispell-message)
  (defun . ispell-message)
  (defun . ispell-non-empty-string)
  (defun . ispell-accept-buffer-local-defs)
  (defun . ispell-buffer-local-parsing)
  (defun . ispell-buffer-local-dict)
  (defun . ispell-buffer-local-words)
  (defun . ispell-add-per-file-word-list)
  (provide . ispell))
 ("/home/hobbes/nxhtml/nxhtml/html-site.el" html-site:version
  (require . ourcomments-util)
  (require . cl)
  (require . dired)
  (require . ffip)
  (require . grep)
  (defun . html-site-looks-like-local-url)
  (require . url-parse)
  (require . url-http)
  (defun . html-site-dir-contains)
  (defun . html-site-lwarn)
  (defun . html-site-chk-wtocdir)
  (t . html-site-buffer-or-dired-file-name)
  (defun . html-site-buffer-or-dired-file-name)
  (t . html-site-set-site)
  (defun . html-site-set-site)
  (t . html-site-dired-current)
  (defun . html-site-dired-current)
  (t . html-site-find-file)
  (defun . html-site-find-file)
  (t . html-site-rgrep)
  (defun . html-site-rgrep)
  (t . html-site-query-replace)
  (defun . html-site-query-replace)
  (defun . html-site-ensure-site-defined)
  (defun . html-site-current-ensure-site-defined)
  (defun . html-site-remote-contains)
  (defun . html-site-current-remote-contains)
  (defun . html-site-ensure-file-in-site)
  (defun . html-site-current-ensure-file-in-site)
  (defun . html-site-ensure-buffer-in-site)
  (defun . html-site-current-ensure-buffer-in-site)
  (defun . html-site-site-dir)
  (defun . html-site-current-site-dir)
  (defun . html-site-contains)
  (defun . html-site-current-contains)
  (defun . html-site-page-list)
  (defun . html-site-current-page-list)
  (defun . html-site-frames-file)
  (defun . html-site-current-frames-file)
  (defun . html-site-toc-file)
  (defun . html-site-current-toc-file)
  (defun . html-site-merge-dir)
  (defun . html-site-current-merge-dir)
  (defun . html-site-merge-template)
  (defun . html-site-current-merge-template)
  (defun . html-site-extra-fun)
  (defun . html-site-current-extra-fun)
  (defun . html-site-ftp-host)
  (defun . html-site-current-ftp-host)
  (defun . html-site-ftp-user)
  (defun . html-site-current-ftp-user)
  (defun . html-site-ftp-password)
  (defun . html-site-current-ftp-password)
  (defun . html-site-ftp-dir)
  (defun . html-site-current-ftp-dir)
  (defun . html-site-ftp-wtoc-dir)
  (defun . html-site-current-ftp-wtoc-dir)
  (defun . html-site-web-host)
  (defun . html-site-current-web-host)
  (defun . html-site-web-dir)
  (defun . html-site-current-web-dir)
  (defun . html-site-web-wtoc-dir)
  (defun . html-site-current-web-wtoc-dir)
  (defun . html-site-web-full)
  (defun . html-site-current-web-full)
  html-site-ftp-temporary-passwords
  (defun . html-site-get-ftp-pw)
  (defun . html-site-path-in-mirror)
  (defun . html-site-local-to-web)
  (defun . html-site-current-local-to-web)
  (defun . html-site-remote-root)
  (defun . html-site-current-remote-root)
  (defun . html-site-local-to-remote)
  (defun . html-site-current-local-to-remote)
  (defun . html-site-remote-to-local)
  (defun . html-site-current-remote-to-local)
  html-site-files-re
  (defun . html-site-edit-pages-file)
  (defun . html-site-get-sub-files)
  (defun . html-site-file-is-local)
  html-site-list html-site-current noshell-procbuf-name noshell-proc-name
  (defun . noshell-procbuf-setup)
  (defun . noshell-procbuf-teardown)
  (defun . noshell-procbuf-run)
  (defun . noshell-sentinel)
  (defun . noshell-procbuf-syncrun)
  noshell-process-mode-map noshell-process-mode-syntax-table noshell-process-mode-abbrev-table noshell-process-mode-abbrev-table
  (defun . noshell-process-mode)
  (defun . noshell-quit)
  (defun . noshell-kill-subprocess)
  (provide . html-site)
  (require . html-upl)
  html-site-mode-menu-map html-site-mode-map html-site-mode
  (defun . html-site-mode)
  html-site-mode-off-list html-site-mode-major-mode html-site-global-mode
  (defun . html-site-global-mode)
  html-site-global-mode-buffers
  (defun . html-site-global-mode-enable-in-buffers)
  (defun . html-site-global-mode-check-buffers)
  (defun . html-site-global-mode-cmhh))
 ("/home/hobbes/nxhtml/nxhtml/html-upl.el" html-upl:version
  (require . html-site)
  html-upl-dir
  (defun . html-upl-browse-remote)
  (defun . html-upl-browse-remote-with-toc)
  (defun . html-upl-browse-remote-frames)
  (defun . html-upl-upload-site-with-toc)
  (defun . html-upl-upload-site)
  (defun . html-upl-upload-site1)
  (defun . html-upl-ensure-site-has-host)
  (defun . html-upl-remote-dired)
  (defun . html-upl-upload-file)
  (defun . html-upl-edit-remote-file)
  (defun . html-upl-edit-remote-file-with-toc)
  (defun . html-upl-edit-remote-file1)
  (defun . html-upl-ediff-file)
  (provide . html-upl))
 ("/usr/share/emacs/23.0.93/lisp/emacs-lisp/derived.elc"
  (defun . derived-mode-hook-name)
  (defun . derived-mode-map-name)
  (defun . derived-mode-syntax-table-name)
  (defun . derived-mode-abbrev-table-name)
  (t . define-derived-mode)
  (defun . define-derived-mode)
  (defun . derived-mode-class)
  (defun . derived-mode-make-docstring)
  (defun . derived-mode-setup-function-name)
  (t . derived-mode-init-mode-variables)
  (defun . derived-mode-init-mode-variables)
  (defun . derived-mode-set-keymap)
  (defun . derived-mode-set-syntax-table)
  (defun . derived-mode-set-abbrev-table)
  (defun . derived-mode-run-hooks)
  (defun . derived-mode-merge-keymaps)
  (defun . derived-mode-merge-syntax-tables)
  (defun . derived-mode-merge-abbrev-tables)
  (provide . derived))
 ("/usr/share/emacs/23.0.93/lisp/url/url-http.elc"
  (require . url-gw)
  (require . url-util)
  (require . url-parse)
  (require . url-cookie)
  (require . mail-parse)
  (require . url-auth)
  (require . url)
  (autoload . url-cache-create-filename)
  url-http-default-port url-http-asynchronous-p
  (defun . url-http-expand-file-name)
  url-http-real-basic-auth-storage url-http-proxy-basic-auth-storage url-http-open-connections url-http-version url-http-attempt-keepalives
  (defun . url-http-debug)
  (defun . url-http-mark-connection-as-busy)
  (defun . url-http-mark-connection-as-free)
  (defun . url-http-find-free-connection)
  (defun . url-http-user-agent-string)
  (defun . url-http-create-request)
  (defun . url-http-clean-headers)
  (defun . url-http-handle-authentication)
  (defun . url-http-parse-response)
  (defun . url-http-handle-cookies)
  (defun . url-http-parse-headers)
  (defun . url-http-activate-callback)
  (defun . url-http-idle-sentinel)
  (defun . url-http-end-of-document-sentinel)
  (defun . url-http-simple-after-change-function)
  (defun . url-http-content-length-after-change-function)
  (defun . url-http-chunked-encoding-after-change-function)
  (defun . url-http-wait-for-headers-change-function)
  (t . url-http)
  (defun . url-http)
  (defun . url-http-async-sentinel)
  (defun . url-http-generic-filter)
  (defun . url-http-symbol-value-in-buffer)
  (defun . url-http-head)
  (t . url-http-file-exists-p)
  (defun . url-http-file-exists-p)
  (defun . url-http-file-readable-p)
  (defun . url-http-head-file-attributes)
  (t . url-http-file-attributes)
  (defun . url-http-file-attributes)
  (t . url-http-options)
  (defun . url-http-options)
  (require . tls)
  url-https-default-port url-https-asynchronous-p
  (defun . url-https-expand-file-name)
  (defun . url-https-create-secure-wrapper)
  (t . url-https)
  (defun . url-https)
  (t . url-https-file-exists-p)
  (defun . url-https-file-exists-p)
  (t . url-https-file-readable-p)
  (defun . url-https-file-readable-p)
  (t . url-https-file-attributes)
  (defun . url-https-file-attributes)
  (provide . url-http))
 ("/usr/share/emacs/23.0.93/lisp/net/tls.elc"
  (autoload . format-spec)
  (autoload . format-spec-make)
  tls-end-of-info tls-program tls-process-connection-type tls-success tls-checktrust tls-untrusted tls-hostmismatch tls-certtool-program
  (defun . tls-certificate-information)
  (t . open-tls-stream)
  (defun . open-tls-stream)
  (provide . tls))
 ("/usr/share/emacs/23.0.93/lisp/url/url.elc"
  (require . mailcap)
  (require . url-vars)
  (require . url-cookie)
  (require . url-history)
  (require . url-expand)
  (require . url-privacy)
  (require . url-methods)
  (require . url-proxy)
  (require . url-parse)
  (require . url-util)
  url-configuration-directory
  (t . url-do-setup)
  (defun . url-do-setup)
  url-redirect-buffer
  (t . url-retrieve)
  (defun . url-retrieve)
  (defun . url-retrieve-internal)
  (t . url-retrieve-synchronously)
  (defun . url-retrieve-synchronously)
  (defun . url-mm-callback)
  (defun . url-mm-url)
  url-dead-buffer-list
  (defun . url-mark-buffer-as-dead)
  (defun . url-gc-dead-buffers)
  (t . url-warn)
  (defun . url-warn)
  (provide . url))
 ("/usr/share/emacs/23.0.93/lisp/url/url-proxy.elc"
  (require . url-parse)
  (autoload . url-warn)
  (defun . url-default-find-proxy-for-url)
  url-proxy-locator
  (defun . url-find-proxy-for-url)
  (defun . url-proxy)
  (provide . url-proxy))
 ("/usr/share/emacs/23.0.93/lisp/url/url-privacy.elc"
  (require . url-vars)
  (defun . url-device-type)
  (t . url-setup-privacy-info)
  (defun . url-setup-privacy-info)
  (provide . url-privacy))
 ("/usr/share/emacs/23.0.93/lisp/url/url-expand.elc"
  (require . url-methods)
  (require . url-util)
  (require . url-parse)
  (defun . url-expander-remove-relative-links)
  (defun . url-expand-file-name)
  (defun . url-identity-expander)
  (t . url-default-expander)
  (defun . url-default-expander)
  (provide . url-expand))
 ("/usr/share/emacs/23.0.93/lisp/url/url-history.elc"
  (require . url-parse)
  (autoload . url-do-setup)
  url-history-track url-history-file url-history-save-interval url-history-timer url-history-changed-since-last-save url-history-hash-table
  (defun . url-history-setup-save-timer)
  (defun . url-history-parse-history)
  (defun . url-history-update-url)
  (defun . url-history-save-history)
  (defun . url-have-visited-url)
  (defun . url-completion-function)
  (provide . url-history))
 ("/usr/share/emacs/23.0.93/lisp/gnus/mailcap.elc"
  (defun . mailcap-delete-duplicates)
  (defun . mailcap-replace-in-string)
  mailcap-parse-args-syntax-table mailcap-print-command mailcap-mime-data mailcap-download-directory mailcap-poor-system-types
  (defun . mailcap-save-binary-file)
  mailcap-maybe-eval-warning
  (defun . mailcap-maybe-eval)
  (defun . mailcap-replace-regexp)
  mailcap-parsed-p
  (defun . mailcap-parse-mailcaps)
  (defun . mailcap-parse-mailcap)
  (defun . mailcap-parse-mailcap-extras)
  (defun . mailcap-mailcap-entry-passes-test)
  (defun . mailcap-possible-viewers)
  (defun . mailcap-unescape-mime-test)
  mailcap-viewer-test-cache
  (defun . mailcap-viewer-passes-test)
  (defun . mailcap-add-mailcap-entry)
  (defun . mailcap-add)
  (defun . mailcap-viewer-lessp)
  (defun . mailcap-mime-info)
  mailcap-mime-extensions mailcap-mimetypes-parsed-p
  (defun . mailcap-parse-mimetypes)
  (defun . mailcap-parse-mimetype-file)
  (defun . mailcap-extension-to-mime)
  (defun . mailcap-command-p)
  (defun . mailcap-mime-types)
  (defun . mailcap-file-default-commands)
  (provide . mailcap))
 ("/usr/share/emacs/23.0.93/lisp/url/url-auth.elc"
  (require . url-vars)
  (require . url-parse)
  (autoload . url-warn)
  (autoload . auth-source-user-or-password)
  (defun . url-auth-user-prompt)
  url-basic-auth-storage
  (defun . url-basic-auth)
  url-digest-auth-storage
  (defun . url-digest-auth-create-key)
  (defun . url-digest-auth)
  url-registered-auth-schemes
  (t . url-get-authentication)
  (defun . url-get-authentication)
  (t . url-register-auth-scheme)
  (defun . url-register-auth-scheme)
  (defun . url-auth-registered)
  (provide . url-auth))
 ("/usr/share/emacs/23.0.93/lisp/gnus/mail-parse.elc"
  (require . mail-prsvr)
  (require . ietf-drums)
  (require . rfc2231)
  (require . rfc2047)
  (require . rfc2045)
  (defun . mail-header-parse-content-type)
  (defun . mail-header-parse-content-disposition)
  (defun . mail-content-type-get)
  (defun . mail-header-encode-parameter)
  (t . mail-header-remove-comments)
  (defun . mail-header-remove-comments)
  (t . mail-header-remove-whitespace)
  (defun . mail-header-remove-whitespace)
  (defun . mail-header-strip)
  (defun . mail-header-get-comment)
  (defun . mail-header-parse-address)
  (defun . mail-header-parse-addresses)
  (defun . mail-header-parse-date)
  (defun . mail-narrow-to-head)
  (defun . mail-quote-string)
  (defun . mail-header-make-address)
  (defun . mail-header-fold-field)
  (defun . mail-header-unfold-field)
  (defun . mail-header-narrow-to-field)
  (defun . mail-header-field-value)
  (defun . mail-encode-encoded-word-region)
  (defun . mail-encode-encoded-word-buffer)
  (defun . mail-encode-encoded-word-string)
  (defun . mail-decode-encoded-word-region)
  (defun . mail-decode-encoded-word-string)
  (defun . mail-decode-encoded-address-region)
  (defun . mail-decode-encoded-address-string)
  (provide . mail-parse))
 ("/usr/share/emacs/23.0.93/lisp/gnus/rfc2231.elc"
  (require . ietf-drums)
  (require . rfc2047)
  (autoload . mm-encode-body)
  (autoload . mail-header-remove-whitespace)
  (autoload . mail-header-remove-comments)
  (defun . rfc2231-get-value)
  (defun . rfc2231-parse-qp-string)
  (defun . rfc2231-parse-string)
  (defun . rfc2231-decode-encoded-string)
  (defun . rfc2231-encode-string)
  (provide . rfc2231))
 ("/usr/share/emacs/23.0.93/lisp/gnus/rfc2047.elc"
  (require . qp)
  (require . mm-util)
  (require . ietf-drums)
  (require . mail-prsvr)
  (require . rfc2045)
  (autoload . mm-body-7-or-8)
  rfc2047-header-encoding-alist rfc2047-charset-encoding-alist rfc2047-encode-function-alist rfc2047-encode-encoded-words rfc2047-allow-irregular-q-encoded-words rfc2047-encoded-word-regexp rfc2047-encoded-word-regexp-loose
  (defun . rfc2047-qp-or-base64)
  (defun . rfc2047-narrow-to-field)
  (defun . rfc2047-field-value)
  (defun . rfc2047-quote-special-characters-in-quoted-strings)
  rfc2047-encoding-type
  (defun . rfc2047-encode-message-header)
  (defun . rfc2047-encodable-p)
  rfc2047-syntax-table rfc2047-syntax-table
  (defun . rfc2047-encode-region)
  (defun . rfc2047-encode-string)
  rfc2047-encode-max-chars
  (defun . rfc2047-encode-1)
  (defun . rfc2047-encode)
  (defun . rfc2047-fold-field)
  (defun . rfc2047-fold-region)
  (defun . rfc2047-unfold-field)
  (defun . rfc2047-unfold-region)
  (defun . rfc2047-b-encode-string)
  (defun . rfc2047-q-encode-string)
  (defun . rfc2047-encode-parameter)
  rfc2047-quote-decoded-words-containing-tspecials rfc2047-allow-incomplete-encoded-text
  (defun . rfc2047-strip-backslashes-in-quoted-strings)
  (defun . rfc2047-charset-to-coding-system)
  (defun . rfc2047-decode-encoded-words)
  (defun . rfc2047-decode-region)
  (defun . rfc2047-decode-address-region)
  (defun . rfc2047-decode-string)
  (defun . rfc2047-decode-address-string)
  (defun . rfc2047-pad-base64)
  (provide . rfc2047))
 ("/usr/share/emacs/23.0.93/lisp/gnus/rfc2045.elc"
  (require . ietf-drums)
  (defun . rfc2045-encode-string)
  (provide . rfc2045))
 ("/usr/share/emacs/23.0.93/lisp/gnus/qp.elc"
  (require . mm-util)
  (t . quoted-printable-decode-region)
  (defun . quoted-printable-decode-region)
  (defun . quoted-printable-decode-string)
  (defun . quoted-printable-encode-region)
  (defun . quoted-printable-encode-string)
  (provide . qp))
 ("/usr/share/emacs/23.0.93/lisp/gnus/ietf-drums.elc"
  (require . time-date)
  (require . mm-util)
  ietf-drums-no-ws-ctl-token ietf-drums-text-token ietf-drums-specials-token ietf-drums-quote-token ietf-drums-wsp-token ietf-drums-fws-regexp ietf-drums-atext-token ietf-drums-dot-atext-token ietf-drums-qtext-token ietf-drums-tspecials ietf-drums-syntax-table
  (defun . ietf-drums-token-to-list)
  (defun . ietf-drums-init)
  (defun . ietf-drums-remove-comments)
  (defun . ietf-drums-remove-whitespace)
  (defun . ietf-drums-get-comment)
  (defun . ietf-drums-strip)
  (defun . ietf-drums-parse-address)
  (defun . ietf-drums-parse-addresses)
  (defun . ietf-drums-unfold-fws)
  (defun . ietf-drums-parse-date)
  (defun . ietf-drums-narrow-to-header)
  (defun . ietf-drums-quote-string)
  (defun . ietf-drums-make-address)
  (provide . ietf-drums))
 ("/usr/share/emacs/23.0.93/lisp/calendar/time-date.elc"
  (defun . with-decoded-time-value)
  (defun . encode-time-value)
  (autoload . parse-time-string)
  (t . date-to-time)
  (defun . date-to-time)
  (t . time-to-seconds)
  (defun . time-to-seconds)
  (t . seconds-to-time)
  (defun . seconds-to-time)
  (t . time-less-p)
  (defun . time-less-p)
  (t . days-to-time)
  (defun . days-to-time)
  (t . time-since)
  (defun . time-since)
  (defun . subtract-time)
  (t . time-subtract)
  (defun . time-subtract)
  (t . time-add)
  (defun . time-add)
  (t . date-to-day)
  (defun . date-to-day)
  (t . days-between)
  (defun . days-between)
  (t . date-leap-year-p)
  (defun . date-leap-year-p)
  (t . time-to-day-in-year)
  (defun . time-to-day-in-year)
  (t . time-to-days)
  (defun . time-to-days)
  (defun . time-to-number-of-days)
  (t . safe-date-to-time)
  (defun . safe-date-to-time)
  (t . format-seconds)
  (defun . format-seconds)
  (provide . time-date))
 ("/usr/share/emacs/23.0.93/lisp/url/url-cookie.elc"
  (require . timezone)
  (require . url-util)
  (require . url-parse)
  (defun . url-cookie-tag)
  (defun . url-cookie-name)
  (defun . url-cookie-value)
  (defun . url-cookie-expires)
  (defun . url-cookie-localpart)
  (defun . url-cookie-domain)
  (defun . url-cookie-secure)
  (defun . url-cookie-create)
  url-cookie-storage url-cookie-secure-storage url-cookie-file url-cookie-confirmation url-cookie-multiple-line url-cookies-changed-since-last-save
  (defun . url-cookie-parse-file)
  (defun . url-cookie-clean-up)
  (defun . url-cookie-write-file)
  (defun . url-cookie-store)
  (defun . url-cookie-expired-p)
  (defun . url-cookie-retrieve)
  (defun . url-cookie-generate-header-lines)
  url-cookie-two-dot-domains url-cookie-trusted-urls url-cookie-untrusted-urls
  (defun . url-cookie-host-can-set-p)
  (defun . url-cookie-handle-set-cookie)
  url-cookie-timer url-cookie-save-interval
  (defun . url-cookie-setup-save-timer)
  (provide . url-cookie))
 ("/usr/share/emacs/23.0.93/lisp/timezone.elc" timezone-world-timezones timezone-months-assoc
  (t . timezone-make-date-arpa-standard)
  (defun . timezone-make-date-arpa-standard)
  (defun . timezone-make-date-sortable)
  (defun . timezone-make-arpa-date)
  (defun . timezone-make-sortable-date)
  (defun . timezone-make-time-string)
  (t . timezone-parse-date)
  (defun . timezone-parse-date)
  (defun . timezone-parse-time)
  (defun . timezone-zone-to-minute)
  (defun . timezone-time-from-absolute)
  (defun . timezone-time-zone-from-absolute)
  (defun . timezone-fix-time)
  (defun . timezone-last-day-of-month)
  (defun . timezone-leap-year-p)
  (defun . timezone-day-number)
  (defun . timezone-absolute-from-gregorian)
  (provide . timezone))
 ("/usr/share/emacs/23.0.93/lisp/url/url-util.elc"
  (require . url-parse)
  (autoload . timezone-parse-date)
  (autoload . timezone-make-date-arpa-standard)
  (autoload . mail-header-extract)
  url-parse-args-syntax-table url-debug
  (t . url-debug)
  (defun . url-debug)
  (t . url-parse-args)
  (defun . url-parse-args)
  (t . url-insert-entities-in-string)
  (defun . url-insert-entities-in-string)
  (t . url-normalize-url)
  (defun . url-normalize-url)
  (t . url-lazy-message)
  (defun . url-lazy-message)
  (t . url-get-normalized-date)
  (defun . url-get-normalized-date)
  (t . url-eat-trailing-space)
  (defun . url-eat-trailing-space)
  (t . url-strip-leading-spaces)
  (defun . url-strip-leading-spaces)
  (t . url-pretty-length)
  (defun . url-pretty-length)
  (t . url-display-percentage)
  (defun . url-display-percentage)
  (t . url-percentage)
  (defun . url-percentage)
  (defun . url-basepath)
  (t . url-file-directory)
  (defun . url-file-directory)
  (t . url-file-nondirectory)
  (defun . url-file-nondirectory)
  (t . url-parse-query-string)
  (defun . url-parse-query-string)
  (defun . url-unhex)
  (t . url-unhex-string)
  (defun . url-unhex-string)
  url-unreserved-chars
  (t . url-hexify-string)
  (defun . url-hexify-string)
  (t . url-file-extension)
  (defun . url-file-extension)
  (t . url-truncate-url-for-viewing)
  (defun . url-truncate-url-for-viewing)
  (t . url-view-url)
  (defun . url-view-url)
  url-get-url-filename-chars
  (defun . url-get-url-at-point)
  (defun . url-generate-unique-filename)
  (defun . url-extract-mime-headers)
  (defun . url-make-private-file)
  (provide . url-util))
 ("/usr/share/emacs/23.0.93/lisp/url/url-gw.elc"
  (require . url-vars)
  (autoload . socks-open-network-stream)
  (autoload . open-ssl-stream)
  (autoload . open-tls-stream)
  url-gateway-local-host-regexp url-gateway-prompt-pattern url-gateway-rlogin-host url-gateway-rlogin-user-name url-gateway-rlogin-parameters url-gateway-telnet-host url-gateway-telnet-parameters url-gateway-telnet-login-prompt url-gateway-telnet-password-prompt url-gateway-telnet-user-name url-gateway-telnet-password url-gateway-broken-resolution url-gateway-nslookup-program
  (t . url-gateway-nslookup-host)
  (defun . url-gateway-nslookup-host)
  (defun . url-wait-for-string)
  (defun . url-open-rlogin)
  (defun . url-open-telnet)
  (t . url-open-stream)
  (defun . url-open-stream)
  (provide . url-gw))
 ("/usr/share/emacs/23.0.93/lisp/url/url-methods.elc"
  (require . url-parse)
  url-scheme-registry url-scheme-methods url-scheme-default-properties url-scheme-default-properties
  (defun . url-scheme-default-loader)
  (defun . url-scheme-register-proxy)
  (t . url-scheme-get-property)
  (defun . url-scheme-get-property)
  (provide . url-methods))
 ("/usr/share/emacs/23.0.93/lisp/url/url-parse.elc"
  (require . url-vars)
  (autoload . url-scheme-get-property)
  (defun . url-type)
  (defun . url-user)
  (defun . url-password)
  (defun . url-host)
  (defun . url-portspec)
  (defun . url-filename)
  (defun . url-target)
  (defun . url-attributes)
  (defun . url-fullness)
  (defun . url-p)
  (defun . url-parse-make-urlobj)
  (defun . url-port)
  (t . url-recreate-url)
  (defun . url-recreate-url)
  (defun . url-recreate-url-attributes)
  (t . url-generic-parse-url)
  (defun . url-generic-parse-url)
  (provide . url-parse))
 ("/usr/share/emacs/23.0.93/lisp/url/url-vars.elc"
  (require . mm-util)
  url-version url-current-object url-current-mime-headers url-honor-refresh-requests url-automatic-caching url-cache-expired url-bug-address url-personal-mail-address url-directory-index-file url-privacy-level url-inhibit-uncompression url-uncompressor-alist url-mail-command url-proxy-services url-standalone-mode url-mime-separator-chars url-bad-port-list url-mime-content-type-charset-regexp url-request-data url-request-extra-headers url-request-method url-mime-encoding-string
  (defun . url-mime-charset-string)
  url-mime-charset-string
  (defun . url-set-mime-charset-string)
  url-mime-language-string url-mime-accept-string url-package-version url-package-name url-system-type url-os-type url-max-password-attempts url-temporary-directory url-show-status url-using-proxy url-news-server url-nonrelative-link url-max-redirections url-confirmation-func url-gateway-method url-setup-done url-weekday-alist url-weekday-alist url-monthabbrev-alist url-monthabbrev-alist url-lazy-message-time url-extensions-header url-parse-syntax-table url-load-hook url-working-buffer url-working-buffer url-gateway-unplugged
  (provide . url-vars))
 ("/usr/share/emacs/23.0.93/lisp/gnus/mm-util.elc"
  (require . mail-prsvr)
  (require . timer)
  (defun . mm-coding-system-list)
  (defun . mm-char-int)
  (defun . mm-coding-system-equal)
  (defun . mm-annotationp)
  (defun . mm-set-buffer-file-coding-system)
  (defun . mm-read-charset)
  (defun . mm-subst-char-in-string)
  (defun . mm-replace-in-string)
  (defun . mm-string-as-unibyte)
  (defun . mm-string-make-unibyte)
  (defun . mm-string-as-multibyte)
  (defun . mm-multibyte-string-p)
  (defun . mm-insert-byte)
  (defun . mm-multibyte-char-to-unibyte)
  (defun . mm-set-buffer-multibyte)
  (defun . mm-special-display-p)
  (defun . mm-substring-no-properties)
  (defun . mm-line-number-at-pos)
  (defun . mm-decode-coding-string)
  (defun . mm-encode-coding-string)
  (defun . mm-decode-coding-region)
  (defun . mm-encode-coding-region)
  (defun . mm-string-to-multibyte)
  (defun . mm-char-or-char-int-p)
  (defun . mm-ucs-to-char)
  (defun . mm-read-coding-system)
  mm-coding-system-list
  (defun . mm-get-coding-system-list)
  (defun . mm-coding-system-p)
  (defun . mm-codepage-setup)
  mm-charset-synonym-alist mm-codepage-iso-8859-list mm-codepage-ibm-list
  (defun . mm-setup-codepage-iso-8859)
  (defun . mm-setup-codepage-ibm)
  mm-charset-eval-alist
  (defun . mm-charset-to-coding-system)
  mm-charset-override-alist mm-binary-coding-system mm-text-coding-system mm-text-coding-system-for-write mm-auto-save-coding-system mm-universal-coding-system mm-mime-mule-charset-alist
  (defun . mm-enrich-utf-8-by-mule-ucs)
  mm-hack-charsets mm-iso-8859-15-compatible mm-iso-8859-x-to-15-table mm-coding-system-priorities mm-use-find-coding-systems-region
  (defun . mm-mule-charset-to-mime-charset)
  mm-emacs-mule
  (defun . mm-enable-multibyte)
  (defun . mm-disable-multibyte)
  (defun . mm-preferred-coding-system)
  (defun . mm-guess-charset)
  (defun . mm-charset-after)
  (defun . mm-mime-charset)
  (defun . mm-delete-duplicates)
  (defun . mm-multibyte-p)
  (defun . mm-default-multibyte-p)
  (defun . mm-iso-8859-x-to-15-region)
  (defun . mm-sort-coding-systems-predicate)
  (defun . mm-xemacs-find-mime-charset-1)
  (defun . mm-xemacs-find-mime-charset)
  (defun . mm-find-mime-charset-region)
  (defun . mm-with-unibyte-buffer)
  (defun . mm-with-multibyte-buffer)
  (defun . mm-with-unibyte-current-buffer)
  (defun . mm-find-charset-region)
  (defun . mm-auto-mode-alist)
  mm-inhibit-file-name-handlers
  (defun . mm-insert-file-contents)
  (defun . mm-append-to-file)
  (defun . mm-write-region)
  (autoload . gmm-write-region)
  (defun . mm-make-temp-file)
  (defun . mm-image-load-path)
  (defun . mm-detect-coding-region)
  (defun . mm-detect-mime-charset-region)
  (defun . mm-coding-system-to-mime-charset)
  (defun . mm-decompress-buffer)
  (defun . mm-find-buffer-file-coding-system)
  (provide . mm-util))
 ("/usr/share/emacs/23.0.93/lisp/gnus/mail-prsvr.elc" mail-parse-charset mail-parse-mule-charset mail-parse-ignored-charsets
  (provide . mail-prsvr))
 ("/home/hobbes/nxhtml/util/ffip.el"
  (require . cl)
  ffip-project-name ffip-project-roots ffip-project-type ffip-project-file-types ffip-project-file-matcher ffip-project-files-table
  (defun . ffip-reset-project)
  (defun . ffip-is-current)
  (defun . ffip-set-current-project)
  (defun . ffip-cache-project-files)
  (defun . ffip-file-matcher)
  (defun . ffip-project-files)
  (defun . ffip-project-root)
  (defun . ffip-populate-files-table)
  (defun . ffip-get-unique-directory-names)
  (defun . ffip-file-is-in-project)
  (defun . ffip-add-file-if-in-project)
  (defun . ffip-after-save)
  (defun . ffip-find-file-in-dirtree)
  (defun . ffip-find-file-in-project)
  (provide . ffip))
 ("/home/hobbes/nxhtml/util/ourcomments-util.el" ourcomments-util:version
  (require . apropos)
  (require . cl)
  (require . grep)
  (require . ido)
  (require . recentf)
  (defun . point-to-coord)
  (t . popup-menu-at-point)
  (defun . popup-menu-at-point)
  (t . define-toggle)
  (defun . define-toggle)
  (t . unfill-paragraph)
  (defun . unfill-paragraph)
  (t . unfill-region)
  (defun . unfill-region)
  (t . unfill-individual-paragraphs)
  (defun . unfill-individual-paragraphs)
  (defun . with-unfilling)
  (t . major-or-multi-majorp)
  (defun . major-or-multi-majorp)
  (t . multi-major-modep)
  (defun . multi-major-modep)
  (t . major-modep)
  (defun . major-modep)
  (t . ourcomments-move-beginning-of-line)
  (defun . ourcomments-move-beginning-of-line)
  (t . ourcomments-move-end-of-line)
  (defun . ourcomments-move-end-of-line)
  (defun . ourcomments-find-keymap-variables)
  (defun . key-bindings)
  (defun . describe-keymap-placement)
  (t . describe-key-and-map-briefly)
  (defun . describe-key-and-map-briefly)
  wrap-to-fill-left-marg wrap-to-fill-left-marg-use wrap-to-fill-left-marg-modes
  (defun . wrap-to-fill-set-prefix)
  (defun . wrap-to-fill-after-change)
  (defun . wrap-to-fill-scroll-fun)
  (defun . wrap-to-fill-wider)
  (defun . wrap-to-fill-narrower)
  wrap-to-fill-column-mode-map wrap-to-fill-column-mode
  (t . wrap-to-fill-column-mode)
  (defun . wrap-to-fill-column-mode)
  (defun . wrap-to-fill-set-values)
  (defun . wrap-to-fill-set-values-1)
  better-bottom-angles-defaults
  (defun . better-fringes-bottom-angles)
  (defun . better-fringes-faces)
  (defface . better-fringes-bitmap)
  (defface . better-fringes-important-bitmap)
  better-fringes-mode
  (t . better-fringes-mode)
  (defun . better-fringes-mode)
  (t . find-emacs-other-file)
  (defun . find-emacs-other-file)
  (t . ourcomments-ediff-files)
  (defun . ourcomments-ediff-files)
  (defun . ourcomments-latest-changelog)
  (defun . ourcomments-read-symbol)
  (defun . ourcomments-command-at-point)
  (t . describe-command)
  (defun . describe-command)
  (defun . buffer-narrowed-p)
  describe-symbol-alist
  (defun . describe-symbol-add-known)
  (defun . property-list-keys)
  (defun . ourcomments-symbol-type)
  (defun . ourcomments-defstruct-p)
  (defun . ourcomments-defstruct-slots)
  (defun . ourcomments-defstruct-file)
  (defun . ourcomments-member-defstruct)
  (defun . ourcomments-custom-group-p)
  (t . describe-custom-group)
  (defun . describe-custom-group)
  (t . describe-defstruct)
  (defun . describe-defstruct)
  (t . describe-symbol)
  (defun . describe-symbol)
  (defun . ourcomments-format-plist)
  ourcomments-ido-visit-method
  (t . ourcomments-ido-buffer-other-window)
  (defun . ourcomments-ido-buffer-other-window)
  (t . ourcomments-ido-buffer-other-frame)
  (defun . ourcomments-ido-buffer-other-frame)
  (t . ourcomments-ido-buffer-raise-frame)
  (defun . ourcomments-ido-buffer-raise-frame)
  (defun . ourcomments-ido-mode-advice)
  ourcomments-ido-adviced ourcomments-ido-old-state
  (defun . ourcomments-ido-ctrl-tab-activate)
  ourcomments-ido-ctrl-tab
  (defun . ourcomments-find-emacs)
  (t . emacs)
  (defun . emacs)
  (t . emacs-buffer-file)
  (defun . emacs-buffer-file)
  (t . emacs--debug-init)
  (defun . emacs--debug-init)
  (t . emacs-Q)
  (defun . emacs-Q)
  (t . emacs-Q-nxhtml)
  (defun . emacs-Q-nxhtml)
  (defun . grep-get-buffer-files)
  grep-query-replace-defaults
  (t . grep-query-replace)
  (defun . grep-query-replace)
  (defun . ldir-query-replace)
  (defun . rdir-query-replace)
  (defun . rdir-get-files)
  (defun . dir-replace-read-parameters)
  replace-read-files-history
  (defun . replace-read-files)
  (t . info-open-file)
  (defun . info-open-file)
  (provide . ourcomments-util))
 ("/usr/share/emacs/23.0.93/lisp/emacs-lisp/advice.elc"
  (provide . advice-preload)
  (require . advice-preload)
  ad-version ad-version ad-redefinition-action ad-default-compilation-action
  (defun . ad-substitute-tree)
  (defun . ad-copy-tree)
  (defun . ad-dolist)
  (defun . ad-do-return)
  (defun . ad-save-real-definition)
  (defun . ad-save-real-definitions)
  ad-advised-functions
  (defun . ad-pushnew-advised-function)
  (defun . ad-pop-advised-function)
  (defun . ad-do-advised-functions)
  (defun . ad-get-advice-info)
  (defun . ad-get-advice-info-macro)
  (defun . ad-set-advice-info)
  (defun . ad-copy-advice-info)
  (defun . ad-is-advised)
  (defun . ad-initialize-advice-info)
  (defun . ad-get-advice-info-field)
  (defun . ad-set-advice-info-field)
  (defun . ad-is-active)
  (defun . ad-make-advice)
  (defun . ad-advice-name)
  (defun . ad-advice-protected)
  (defun . ad-advice-enabled)
  (defun . ad-advice-definition)
  (defun . ad-advice-set-enabled)
  (defun . ad-class-p)
  (defun . ad-name-p)
  (defun . ad-position-p)
  ad-advice-classes
  (defun . ad-has-enabled-advice)
  (defun . ad-has-redefining-advice)
  (defun . ad-has-any-advice)
  (defun . ad-get-enabled-advices)
  (defun . ad-activate-internal)
  (defun . ad-activate-internal-off)
  ad-activate-on-top-level
  (defun . ad-with-auto-activation-disabled)
  (defun . ad-safe-fset)
  (defun . ad-make-origname)
  (defun . ad-get-orig-definition)
  (defun . ad-set-orig-definition)
  (defun . ad-clear-orig-definition)
  (defun . ad-read-advised-function)
  ad-advice-class-completion-table
  (defun . ad-read-advice-class)
  (defun . ad-read-advice-name)
  (defun . ad-read-advice-specification)
  ad-last-regexp
  (defun . ad-read-regexp)
  (defun . ad-find-advice)
  (defun . ad-advice-position)
  (defun . ad-find-some-advice)
  (defun . ad-enable-advice-internal)
  (t . ad-enable-advice)
  (defun . ad-enable-advice)
  (t . ad-disable-advice)
  (defun . ad-disable-advice)
  (defun . ad-enable-regexp-internal)
  (defun . ad-enable-regexp)
  (defun . ad-disable-regexp)
  (defun . ad-remove-advice)
  (t . ad-add-advice)
  (defun . ad-add-advice)
  (defun . ad-macrofy)
  (defun . ad-lambdafy)
  (defun . ad-special-form-p)
  (defun . ad-subr-p)
  (defun . ad-macro-p)
  (defun . ad-lambda-p)
  (defun . ad-advice-p)
  (defun . ad-compiled-p)
  (defun . ad-compiled-code)
  (defun . ad-lambda-expression)
  (defun . ad-arglist)
  (defun . ad-define-subr-args)
  (defun . ad-undefine-subr-args)
  (defun . ad-subr-args-defined-p)
  (defun . ad-get-subr-args)
  (defun . ad-subr-arglist)
  (defun . ad-docstring)
  (defun . ad-interactive-form)
  (defun . ad-body-forms)
  (defun . ad-make-advised-definition-docstring)
  (defun . ad-advised-definition-p)
  (defun . ad-definition-type)
  (defun . ad-has-proper-definition)
  (defun . ad-real-definition)
  (defun . ad-real-orig-definition)
  (defun . ad-is-compilable)
  (defun . ad-compile-function)
  (defun . ad-prognify)
  (defun . ad-parse-arglist)
  (defun . ad-retrieve-args-form)
  (defun . ad-arg-binding-field)
  (defun . ad-list-access)
  (defun . ad-element-access)
  (defun . ad-access-argument)
  (defun . ad-get-argument)
  (defun . ad-set-argument)
  (defun . ad-get-arguments)
  (defun . ad-set-arguments)
  (defun . ad-insert-argument-access-forms)
  (defun . ad-map-arglists)
  (defun . ad-make-mapped-call)
  (defun . ad-make-single-advice-docstring)
  (require . help-fns)
  (defun . ad-make-advised-docstring)
  (defun . ad-make-plain-docstring)
  (defun . ad-make-freeze-docstring)
  (defun . ad-advised-arglist)
  (defun . ad-advised-interactive-form)
  (defun . ad-make-advised-definition)
  (defun . ad-assemble-advised-definition)
  (defun . ad-make-hook-form)
  (defun . ad-get-cache-definition)
  (defun . ad-get-cache-id)
  (defun . ad-set-cache)
  (defun . ad-clear-cache)
  (defun . ad-make-cache-id)
  (defun . ad-get-cache-class-id)
  (defun . ad-verify-cache-class-id)
  (defun . ad-cache-id-verification-code)
  (defun . ad-verify-cache-id)
  (defun . ad-preactivate-advice)
  (defun . ad-make-freeze-definition)
  (defun . ad-should-compile)
  (defun . ad-activate-advised-definition)
  (defun . ad-handle-definition)
  (t . ad-activate)
  (defun . ad-activate)
  (defun . ad-activate-on)
  (defun . ad-deactivate)
  (defun . ad-update)
  (defun . ad-unadvise)
  (defun . ad-recover)
  (defun . ad-activate-regexp)
  (defun . ad-deactivate-regexp)
  (defun . ad-update-regexp)
  (defun . ad-activate-all)
  (defun . ad-deactivate-all)
  (defun . ad-update-all)
  (defun . ad-unadvise-all)
  (defun . ad-recover-all)
  ad-defadvice-flags
  (t . defadvice)
  (defun . defadvice)
  (defun . ad-with-originals)
  (defun . ad-start-advice)
  (defun . ad-stop-advice)
  (defun . ad-recover-normality)
  (provide . advice))
 ("/usr/share/emacs/23.0.93/lisp/help-fns.elc"
  (require . help-mode)
  (t . describe-function)
  (defun . describe-function)
  (defun . help-split-fundoc)
  (defun . help-add-fundoc-usage)
  (defun . help-function-arglist)
  (defun . help-make-usage)
  (t . help-C-file-name)
  (defun . help-C-file-name)
  (defface . help-argument-name)
  (defun . help-default-arg-highlight)
  (defun . help-do-arg-highlight)
  (defun . help-highlight-arguments)
  (t . find-lisp-object-file-name)
  (defun . find-lisp-object-file-name)
  (t . describe-function-1)
  (defun . describe-function-1)
  (t . variable-at-point)
  (defun . variable-at-point)
  (defun . describe-variable-custom-version-info)
  (t . describe-variable)
  (defun . describe-variable)
  (t . describe-syntax)
  (defun . describe-syntax)
  (defun . help-describe-category-set)
  (t . describe-categories)
  (defun . describe-categories)
  (provide . help-fns))
 ("/usr/share/emacs/23.0.93/lisp/help-mode.elc"
  (require . button)
  (require . view)
  help-mode-map help-mode-menu
  (defun . help-mode-menu)
  help-xref-stack help-xref-forward-stack help-xref-stack-item help-xref-stack-forward-item help-mode-hook
  (defun . help-button-action)
  (t . help-mode)
  (defun . help-mode)
  (t . help-mode-setup)
  (defun . help-mode-setup)
  (t . help-mode-finish)
  (defun . help-mode-finish)
  help-back-label help-forward-label help-xref-symbol-regexp help-xref-mule-regexp help-xref-info-regexp help-xref-url-regexp
  (t . help-setup-xref)
  (defun . help-setup-xref)
  help-xref-following
  (t . help-buffer)
  (defun . help-buffer)
  help-xref-override-view-map
  (t . help-make-xrefs)
  (defun . help-make-xrefs)
  (t . help-xref-button)
  (defun . help-xref-button)
  (t . help-insert-xref-button)
  (defun . help-insert-xref-button)
  (t . help-xref-on-pp)
  (defun . help-xref-on-pp)
  (defun . help-xref-interned)
  (defun . help-xref-go-back)
  (defun . help-xref-go-forward)
  (defun . help-go-back)
  (defun . help-go-forward)
  (defun . help-do-xref)
  (defun . help-follow-mouse)
  (defun . help-follow)
  (defun . help-follow-symbol)
  (defun . help-insert-string)
  (provide . help-mode))
 ("/usr/share/emacs/23.0.93/lisp/view.elc" view-highlight-face view-scroll-auto-exit view-try-extend-at-buffer-end view-remove-frame-by-deleting view-exits-all-viewing-windows view-inhibit-help-message view-mode view-mode-hook view-old-buffer-read-only view-page-size view-half-page-size view-last-regexp view-return-to-alist view-exit-action view-no-disable-on-exit view-overlay view-mode-map
  (t . kill-buffer-if-not-modified)
  (defun . kill-buffer-if-not-modified)
  (t . view-file)
  (defun . view-file)
  (t . view-file-other-window)
  (defun . view-file-other-window)
  (t . view-file-other-frame)
  (defun . view-file-other-frame)
  (t . view-buffer)
  (defun . view-buffer)
  (t . view-buffer-other-window)
  (defun . view-buffer-other-window)
  (t . view-buffer-other-frame)
  (defun . view-buffer-other-frame)
  (t . view-mode)
  (defun . view-mode)
  (defun . view-mode-enable)
  (defun . view-mode-disable)
  (t . view-return-to-alist-update)
  (defun . view-return-to-alist-update)
  (t . view-mode-enter)
  (defun . view-mode-enter)
  (defun . view-mode-exit)
  (defun . View-exit)
  (t . View-exit-and-edit)
  (defun . View-exit-and-edit)
  (defun . View-leave)
  (defun . View-quit)
  (defun . View-quit-all)
  (defun . View-kill-and-leave)
  (defun . view-window-size)
  (defun . view-recenter)
  (defun . view-page-size-default)
  (defun . view-set-half-page-size-default)
  (defun . View-goto-percent)
  (defun . View-goto-line)
  (defun . View-back-to-mark)
  (defun . view-scroll-lines)
  (defun . view-really-at-end)
  (defun . view-end-message)
  (defun . View-scroll-to-buffer-end)
  (defun . View-scroll-page-forward)
  (defun . View-scroll-page-backward)
  (defun . View-scroll-page-forward-set-page-size)
  (defun . View-scroll-page-backward-set-page-size)
  (defun . View-scroll-line-forward)
  (defun . View-scroll-line-backward)
  (defun . View-scroll-half-page-forward)
  (defun . View-scroll-half-page-backward)
  (defun . View-revert-buffer-scroll-page-forward)
  (defun . View-search-regexp-forward)
  (defun . View-search-regexp-backward)
  (defun . View-search-last-regexp-forward)
  (defun . View-search-last-regexp-backward)
  (defun . view-search)
  (defun . view-search-no-match-lines)
  (provide . view))
 ("/usr/share/emacs/23.0.93/lisp/emacs-lisp/easy-mmode.elc"
  (defun . easy-mmode-pretty-mode-name)
  (defun . easy-mmode-define-minor-mode)
  (t . define-minor-mode)
  (defun . define-minor-mode)
  (defun . easy-mmode-define-global-mode)
  (defun . define-global-minor-mode)
  (t . define-globalized-minor-mode)
  (defun . define-globalized-minor-mode)
  (defun . easy-mmode-set-keymap-parents)
  (t . easy-mmode-define-keymap)
  (defun . easy-mmode-define-keymap)
  (t . easy-mmode-defmap)
  (defun . easy-mmode-defmap)
  (defun . easy-mmode-define-syntax)
  (t . easy-mmode-defsyntax)
  (defun . easy-mmode-defsyntax)
  (defun . easy-mmode-define-navigation)
  (provide . easy-mmode))
 ("/usr/share/emacs/23.0.93/lisp/recentf.elc"
  (require . easymenu)
  (require . tree-widget)
  (require . timer)
  recentf-list
  (defun . recentf-enabled-p)
  recentf-max-saved-items recentf-save-file recentf-save-file-modes recentf-exclude
  (defun . recentf-keep-default-predicate)
  recentf-keep
  (defun . recentf-menu-customization-changed)
  recentf-menu-title recentf-menu-path recentf-menu-before recentf-menu-action recentf-max-menu-items recentf-menu-filter recentf-menu-open-all-flag recentf-menu-append-commands-p recentf-menu-append-commands-flag recentf-auto-cleanup recentf-initialize-file-name-history recentf-load-hook recentf-filename-handlers recentf-show-file-shortcuts-flag recentf-case-fold-search
  (defun . recentf-string-equal)
  (defun . recentf-string-lessp)
  (defun . recentf-string-member)
  (defun . recentf-trunc-list)
  (defun . recentf-dump-variable)
  recentf-auto-cleanup-timer
  (defun . recentf-auto-cleanup)
  (defun . recentf-push)
  (defun . recentf-apply-filename-handlers)
  (defun . recentf-expand-file-name)
  (defun . recentf-include-p)
  (defun . recentf-keep-p)
  (defun . recentf-add-file)
  (defun . recentf-remove-if-non-kept)
  (defun . recentf-directory-compare)
  (defun . recentf-digit-shortcut-command-name)
  (defun . recentf-open-most-recent-file-0)
  (defun . recentf-open-most-recent-file-9)
  (defun . recentf-open-most-recent-file-8)
  (defun . recentf-open-most-recent-file-7)
  (defun . recentf-open-most-recent-file-6)
  (defun . recentf-open-most-recent-file-5)
  (defun . recentf-open-most-recent-file-4)
  (defun . recentf-open-most-recent-file-3)
  (defun . recentf-open-most-recent-file-2)
  (defun . recentf-open-most-recent-file-1)
  recentf--shortcuts-keymap recentf-menu-items-for-commands recentf-menu-filter-commands
  (defun . recentf-elements)
  (defun . recentf-make-menu-element)
  (defun . recentf-menu-element-item)
  (defun . recentf-menu-element-value)
  (defun . recentf-set-menu-element-item)
  (defun . recentf-set-menu-element-value)
  (defun . recentf-sub-menu-element-p)
  (defun . recentf-make-default-menu-element)
  (defun . recentf-menu-elements)
  (defun . recentf-apply-menu-filter)
  (defun . recentf-make-menu-items)
  (defun . recentf-menu-value-shortcut)
  (defun . recentf-make-menu-item)
  (defun . recentf-menu-bar)
  (defun . recentf-show-menu)
  (defun . recentf-hide-menu)
  (defun . recentf-sort-ascending)
  (defun . recentf-sort-descending)
  (defun . recentf-sort-basenames-ascending)
  (defun . recentf-sort-basenames-descending)
  (defun . recentf-sort-directories-ascending)
  (defun . recentf-sort-directories-descending)
  (defun . recentf-show-basenames)
  (defun . recentf-show-basenames-ascending)
  (defun . recentf-show-basenames-descending)
  (defun . recentf-relative-filter)
  recentf-arrange-rules recentf-arrange-by-rule-others recentf-arrange-by-rules-min-items recentf-arrange-by-rule-subfilter
  (defun . recentf-match-rule)
  (defun . recentf-arrange-by-rule)
  (defun . recentf-indirect-mode-rule)
  (defun . recentf-build-mode-rules)
  (defun . recentf-arrange-by-mode)
  (defun . recentf-file-name-nondir)
  (defun . recentf-dir-rule)
  (defun . recentf-arrange-by-dir)
  recentf-filter-changer-current recentf-filter-changer-alist
  (defun . recentf-filter-changer-select)
  (defun . recentf-filter-changer)
  (defun . recentf-track-opened-file)
  (defun . recentf-track-closed-file)
  recentf-used-hooks
  (defun . recentf-cancel-dialog)
  (defun . recentf-dialog-goto-first)
  recentf-dialog-mode-map recentf-dialog-mode-map
  (defun . recentf-dialog-mode)
  (defun . recentf-dialog)
  recentf-edit-list
  (defun . recentf-edit-list-select)
  (defun . recentf-edit-list-validate)
  (defun . recentf-edit-list)
  (defun . recentf-open-files-action)
  recentf--files-with-key
  (defun . recentf-show-digit-shortcut-filter)
  (defun . recentf-open-files-item)
  (defun . recentf-open-files-items)
  (defun . recentf-open-files)
  (defun . recentf-open-more-files)
  (defun . recentf-open-most-recent-file)
  recentf-save-file-header recentf-save-file-coding-system
  (defun . recentf-save-list)
  (defun . recentf-load-list)
  (defun . recentf-cleanup)
  recentf-mode-map recentf-mode
  (t . recentf-mode)
  (defun . recentf-mode)
  (provide . recentf))
 ("/usr/share/emacs/23.0.93/lisp/tree-widget.elc"
  (require . wid-edit)
  tree-widget-image-enable tree-widget-themes-load-path tree-widget-themes-directory tree-widget-theme tree-widget-image-properties-emacs tree-widget-image-properties-xemacs tree-widget-space-width
  (defun . tree-widget-use-image-p)
  (defun . tree-widget-create-image)
  (defun . tree-widget-image-formats)
  tree-widget--theme
  (defun . tree-widget-theme-name)
  (defun . tree-widget-set-parent-theme)
  (defun . tree-widget-set-theme)
  (defun . tree-widget--locate-sub-directory)
  (defun . tree-widget-themes-path)
  tree-widget--cursors tree-widget--cursors
  (defun . tree-widget-set-image-properties)
  (defun . tree-widget-image-properties)
  (defun . tree-widget-lookup-image)
  (defun . tree-widget-find-image)
  (defun . tree-widget-button-click)
  tree-widget-button-keymap
  (defun . tree-widget-p)
  (defun . tree-widget-node)
  (defun . tree-widget-keep)
  (defun . tree-widget-children-value-save)
  tree-widget-before-create-icon-functions
  (defun . tree-widget-icon-create)
  (defun . tree-widget-convert-widget)
  (defun . tree-widget-value-create)
  (defun . tree-widget-leaf-node-icon-p)
  (defun . tree-widget-icon-action)
  (defun . tree-widget-icon-help-echo)
  tree-widget-after-toggle-functions
  (defun . tree-widget-action)
  (defun . tree-widget-help-echo)
  (defun . tree-widget-expander-p)
  (provide . tree-widget))
 ("/usr/share/emacs/23.0.93/lisp/ido.elc"
  (defun . ido-fractionp)
  ido-mode ido-everywhere ido-case-fold ido-ignore-buffers ido-ignore-files ido-ignore-extensions ido-show-dot-for-dired ido-file-extensions-order ido-ignore-directories ido-ignore-directories-merge ido-default-file-method ido-default-buffer-method ido-enable-flex-matching ido-enable-regexp ido-enable-prefix ido-enable-dot-prefix ido-confirm-unique-completion ido-cannot-complete-command ido-record-commands ido-max-prospects ido-max-file-prompt-width ido-max-window-height ido-enable-last-directory-history ido-max-work-directory-list ido-work-directory-list-ignore-regexps ido-use-filename-at-point ido-use-url-at-point ido-enable-tramp-completion ido-record-ftp-work-directories ido-merge-ftp-work-directories ido-cache-ftp-work-directory-time ido-slow-ftp-hosts ido-slow-ftp-host-regexps ido-unc-hosts-cache ido-unc-hosts ido-downcase-unc-hosts ido-ignore-unc-host-regexps ido-cache-unc-host-shares-time ido-max-work-file-list ido-work-directory-match-only ido-auto-merge-work-directories-length ido-auto-merge-delay-time ido-auto-merge-inhibit-characters-regexp ido-merged-indicator ido-max-dir-file-cache ido-max-directory-size ido-rotate-file-list-default ido-enter-matching-directory ido-create-new-buffer ido-setup-hook ido-separator ido-decorations ido-use-faces
  (defface . ido-first-match)
  (defface . ido-only-match)
  (defface . ido-subdir)
  (defface . ido-indicator)
  (defface . ido-incomplete-regexp)
  ido-make-file-list-hook ido-make-dir-list-hook ido-make-buffer-list-hook ido-rewrite-file-prompt-functions ido-rewrite-file-prompt-rules ido-completion-buffer ido-completion-buffer-all-completions ido-all-frames ido-minibuffer-setup-hook ido-save-directory-list-file ido-read-file-name-as-directory-commands ido-read-file-name-non-ido ido-before-fallback-functions ido-completion-map ido-common-completion-map ido-file-completion-map ido-file-dir-completion-map ido-buffer-completion-map ido-file-history ido-buffer-history ido-last-directory-list ido-work-directory-list ido-work-file-list ido-dir-file-cache ido-ignore-item-temp-list ido-eoinput ido-common-match-string ido-rescan ido-rotate ido-text ido-text-init ido-input-stack ido-matches ido-report-no-match ido-exit ido-current-directory ido-auto-merge-timer ido-use-mycompletion-depth ido-incomplete-regexp ido-initial-position
  (defun . ido-active)
  ido-trace-enable
  (defun . ido-trace)
  (defun . ido-toggle-trace)
  (defun . ido-local-file-exists-p)
  (defun . ido-unc-hosts)
  (defun . ido-unc-hosts-net-view)
  (defun . ido-is-tramp-root)
  (defun . ido-is-unc-root)
  (defun . ido-is-unc-host)
  (defun . ido-is-root-directory)
  (defun . ido-is-ftp-directory)
  (defun . ido-is-slow-ftp-host)
  (defun . ido-time-stamp)
  (defun . ido-cache-ftp-valid)
  (defun . ido-cache-unc-valid)
  (defun . ido-may-cache-directory)
  (defun . ido-pp)
  (defun . ido-save-history)
  (defun . ido-load-history)
  (defun . ido-wash-history)
  (defun . ido-kill-emacs-hook)
  ido-minor-mode-map-entry
  (t . ido-mode)
  (defun . ido-mode)
  (defun . ido-everywhere)
  (defun . ido-init-completion-maps)
  (defun . ido-setup-completion-map)
  (defun . ido-final-slash)
  (defun . ido-no-final-slash)
  (defun . ido-nonreadable-directory-p)
  (defun . ido-directory-too-big-p)
  (defun . ido-set-current-directory)
  (defun . ido-set-current-home)
  (defun . ido-record-command)
  (defun . ido-make-prompt)
  (defun . ido-read-internal)
  (defun . ido-edit-input)
  (defun . ido-buffer-internal)
  (defun . ido-record-work-directory)
  (defun . ido-forget-work-directory)
  (defun . ido-record-work-file)
  (defun . ido-expand-directory)
  (defun . ido-file-internal)
  (defun . ido-existing-item-p)
  (defun . ido-set-common-completion)
  (defun . ido-complete)
  (defun . ido-complete-space)
  (defun . ido-undo-merge-work-directory)
  (defun . ido-magic-forward-char)
  (defun . ido-magic-backward-char)
  (defun . ido-magic-delete-char)
  (defun . ido-toggle-case)
  (defun . ido-toggle-regexp)
  (defun . ido-toggle-prefix)
  (defun . ido-toggle-ignore)
  (defun . ido-toggle-vc)
  (defun . ido-toggle-literal)
  (defun . ido-reread-directory)
  (defun . ido-exit-minibuffer)
  (defun . ido-select-text)
  (defun . ido-fallback-command)
  (defun . ido-enter-find-file)
  (defun . ido-enter-switch-buffer)
  (defun . ido-enter-dired)
  (defun . ido-enter-insert-buffer)
  (defun . ido-enter-insert-file)
  (defun . ido-up-directory)
  (defun . ido-delete-backward-updir)
  (defun . ido-delete-backward-word-updir)
  (defun . ido-get-work-directory)
  (defun . ido-prev-work-directory)
  (defun . ido-next-work-directory)
  (defun . ido-merge-work-directories)
  (defun . ido-wide-find-file)
  (defun . ido-wide-find-dir)
  (defun . ido-wide-find-dir-or-delete-dir)
  (defun . ido-take-first-match)
  (defun . ido-push-dir)
  (defun . ido-push-dir-first)
  (defun . ido-pop-dir)
  (defun . ido-wide-find-file-or-pop-dir)
  (defun . ido-make-directory)
  (defun . ido-get-work-file)
  (defun . ido-prev-work-file)
  (defun . ido-next-work-file)
  (defun . ido-copy-current-file-name)
  (defun . ido-copy-current-word)
  (defun . ido-next-match)
  (defun . ido-prev-match)
  (defun . ido-next-match-dir)
  (defun . ido-prev-match-dir)
  (defun . ido-restrict-to-matches)
  (defun . ido-chop)
  (defun . ido-name)
  (defun . ido-all-completions)
  (defun . ido-file-lessp)
  (defun . ido-file-extension-lessp)
  (defun . ido-file-extension-aux)
  (defun . ido-file-extension-order)
  (defun . ido-sort-merged-list)
  (defun . ido-wide-find-dirs-or-files)
  (defun . ido-flatten-merged-list)
  (defun . ido-make-merged-file-list-1)
  (defun . ido-make-merged-file-list)
  (defun . ido-make-buffer-list-1)
  (defun . ido-make-buffer-list)
  (defun . ido-make-choice-list)
  (defun . ido-to-end)
  (defun . ido-file-name-all-completions-1)
  (defun . ido-file-name-all-completions)
  (defun . ido-remove-cached-dir)
  (defun . ido-make-file-list-1)
  (defun . ido-make-file-list)
  (defun . ido-make-dir-list-1)
  (defun . ido-make-dir-list)
  (defun . ido-get-buffers-in-frames)
  (defun . ido-get-bufname)
  (defun . ido-set-matches-1)
  (defun . ido-set-matches)
  (defun . ido-ignore-item-p)
  (defun . ido-find-common-substring)
  (defun . ido-word-matching-substring)
  (defun . ido-makealist)
  (defun . ido-choose-completion-string)
  (defun . ido-completion-help)
  (defun . ido-kill-buffer-at-head)
  (defun . ido-delete-file-at-head)
  (defun . ido-visit-buffer)
  (defun . ido-buffer-window-other-frame)
  (t . ido-switch-buffer)
  (defun . ido-switch-buffer)
  (t . ido-switch-buffer-other-window)
  (defun . ido-switch-buffer-other-window)
  (t . ido-display-buffer)
  (defun . ido-display-buffer)
  (t . ido-kill-buffer)
  (defun . ido-kill-buffer)
  (t . ido-insert-buffer)
  (defun . ido-insert-buffer)
  (t . ido-switch-buffer-other-frame)
  (defun . ido-switch-buffer-other-frame)
  (t . ido-find-file-in-dir)
  (defun . ido-find-file-in-dir)
  (t . ido-find-file)
  (defun . ido-find-file)
  (t . ido-find-file-other-window)
  (defun . ido-find-file-other-window)
  (t . ido-find-alternate-file)
  (defun . ido-find-alternate-file)
  (t . ido-find-file-read-only)
  (defun . ido-find-file-read-only)
  (t . ido-find-file-read-only-other-window)
  (defun . ido-find-file-read-only-other-window)
  (t . ido-find-file-read-only-other-frame)
  (defun . ido-find-file-read-only-other-frame)
  (t . ido-display-file)
  (defun . ido-display-file)
  (t . ido-find-file-other-frame)
  (defun . ido-find-file-other-frame)
  (t . ido-write-file)
  (defun . ido-write-file)
  (t . ido-insert-file)
  (defun . ido-insert-file)
  (t . ido-dired)
  (defun . ido-dired)
  (defun . ido-list-directory)
  (defun . ido-initiate-auto-merge)
  (defun . ido-exhibit)
  (defun . ido-completions)
  (defun . ido-minibuffer-setup)
  (defun . ido-tidy)
  (defun . ido-summary-buffers-to-end)
  (t . ido-read-buffer)
  (defun . ido-read-buffer)
  (t . ido-read-file-name)
  (defun . ido-read-file-name)
  (t . ido-read-directory-name)
  (defun . ido-read-directory-name)
  (t . ido-completing-read)
  (defun . ido-completing-read)
  (defun . ido-unload-function)
  (provide . ido))
 ("/usr/share/emacs/23.0.93/lisp/progmodes/grep.elc"
  (require . compile)
  grep-window-height grep-highlight-matches grep-scroll-output grep-command grep-template grep-use-null-device grep-find-command grep-find-template grep-files-aliases grep-find-ignored-directories grep-error-screen-columns grep-setup-hook grep-mode-map grep-mode-tool-bar-map
  (defun . kill-grep)
  grep-last-buffer grep-regexp-alist grep-error grep-hit-face grep-error-face grep-match-face grep-context-face grep-mode-font-lock-keywords grep-program find-program xargs-program grep-find-use-xargs grep-history grep-find-history grep-regexp-history grep-files-history grep-host-defaults-alist
  (t . grep-process-setup)
  (defun . grep-process-setup)
  (defun . grep-probe)
  (t . grep-compute-defaults)
  (defun . grep-compute-defaults)
  (defun . grep-tag-default)
  (defun . grep-default-command)
  grep-mode-map grep-mode-syntax-table grep-mode-abbrev-table grep-mode-abbrev-table
  (t . grep-mode)
  (defun . grep-mode)
  (t . grep)
  (defun . grep)
  (t . grep-find)
  (defun . grep-find)
  (defun . find-grep)
  grep-expand-keywords
  (defun . grep-expand-template)
  (defun . grep-read-regexp)
  (defun . grep-read-files)
  (t . lgrep)
  (defun . lgrep)
  (t . rgrep)
  (defun . rgrep)
  (provide . grep))
 ("/usr/share/emacs/23.0.93/lisp/progmodes/compile.elc"
  (require . tool-bar)
  (require . comint)
  compilation-mode-hook compilation-start-hook compilation-window-height compilation-first-column compilation-parse-errors-filename-function compilation-process-setup-function compilation-buffer-name-function compilation-finish-function compilation-finish-functions compilation-in-progress compilation-error compilation-arguments compilation-error-regexp-alist-alist compilation-error-regexp-alist compilation-directory compilation-directory-matcher compilation-page-delimiter compilation-mode-font-lock-keywords compilation-highlight-regexp compilation-highlight-overlay compilation-error-screen-columns compilation-read-command compilation-ask-about-save compilation-search-path compile-command compilation-disable-input compilation-locs compilation-debug compilation-exit-message-function compilation-environment compile-history
  (defface . compilation-error)
  (defface . compilation-warning)
  (defface . compilation-info)
  (defface . compilation-line-number)
  (defface . compilation-column-number)
  compilation-message-face compilation-error-face compilation-warning-face compilation-info-face compilation-line-face compilation-column-face compilation-enter-directory-face compilation-leave-directory-face compilation-last-buffer compilation-parsing-end compilation-parse-errors-function compilation-error-list compilation-old-error-list compilation-auto-jump-to-first-error compilation-auto-jump-to-next compilation-skip-to-next-location compilation-skip-threshold compilation-skip-visited
  (defun . compilation-face)
  (defun . compilation-directory-properties)
  (defun . compilation-auto-jump)
  (defun . compilation-error-properties)
  (defun . compilation-move-to-column)
  (defun . compilation-internal-error-properties)
  (defun . compilation-mode-font-lock-keywords)
  (defun . compilation-read-command)
  (t . compile)
  (defun . compile)
  (defun . recompile)
  compilation-scroll-output
  (defun . compilation-buffer-name)
  (defun . compile-internal)
  (t . compilation-start)
  (defun . compilation-start)
  (defun . compilation-set-window-height)
  compilation-menu-map compilation-minor-mode-map compilation-shell-minor-mode-map compilation-button-map compilation-mode-map compilation-mode-tool-bar-map
  (t . compilation-mode)
  (defun . compilation-mode)
  (defun . define-compilation-mode)
  (defun . compilation-revert-buffer)
  compilation-current-error compilation-messages-start compilation-turn-on-font-lock compilation-turn-on-font-lock
  (defun . compilation-setup)
  compilation-shell-minor-mode
  (t . compilation-shell-minor-mode)
  (defun . compilation-shell-minor-mode)
  compilation-minor-mode
  (t . compilation-minor-mode)
  (defun . compilation-minor-mode)
  (defun . compilation-handle-exit)
  (defun . compilation-sentinel)
  (defun . compilation-filter)
  (defun . compilation-buffer-internal-p)
  (defun . compilation-buffer-p)
  (defun . compilation-loop)
  (defun . compilation-next-error)
  (defun . compilation-previous-error)
  (defun . compilation-next-file)
  (defun . compilation-previous-file)
  (defun . kill-compilation)
  (defun . compile-mouse-goto-error)
  (defun . compile-goto-error)
  (defun . compilation-find-buffer)
  (t . compilation-next-error-function)
  (defun . compilation-next-error-function)
  compilation-gcpro
  (defun . compilation-fake-loc)
  compilation-context-lines
  (defun . compilation-set-window)
  (defun . compilation-goto-locus)
  (defun . compilation-goto-locus-delete-o)
  (defun . compilation-find-file)
  (defun . compilation-get-file-structure)
  (defun . compile-buffer-substring)
  (defun . compilation-compat-error-properties)
  (defun . compilation-compat-parse-errors)
  (defun . compilation-forget-errors)
  (provide . compile))
 ("/usr/share/emacs/23.0.93/lisp/comint.elc"
  (require . ring)
  comint-prompt-regexp comint-prompt-read-only comint-delimiter-argument-list comint-input-autoexpand
  (defface . comint-highlight-input)
  (defface . comint-highlight-prompt)
  comint-input-ignoredups comint-input-ring-file-name comint-scroll-to-bottom-on-input comint-move-point-for-output comint-scroll-to-bottom-on-output comint-scroll-show-maximum-output comint-buffer-maximum-size comint-input-ring-size comint-input-ring-separator comint-input-history-ignore comint-process-echoes comint-password-prompt-regexp comint-get-old-input comint-dynamic-complete-functions comint-input-filter comint-input-filter-functions comint-output-filter-functions comint-input-sender-no-newline comint-input-sender comint-eol-on-send comint-use-prompt-regexp comint-use-prompt-regexp-instead-of-fields comint-mode-hook comint-exec-hook comint-mode-map comint-ptyp comint-input-ring comint-last-input-start comint-last-input-end comint-last-output-start comint-input-ring-index comint-matching-input-from-input-string comint-save-input-ring-index comint-accum-marker comint-stored-incomplete-input comint-mode-map comint-mode-syntax-table comint-mode-abbrev-table comint-mode-abbrev-table
  (defun . comint-mode)
  (defun . comint-check-proc)
  (t . make-comint-in-buffer)
  (defun . make-comint-in-buffer)
  (t . make-comint)
  (defun . make-comint)
  (t . comint-run)
  (defun . comint-run)
  (defun . comint-exec)
  (defun . comint-exec-1)
  (defun . comint-insert-input)
  (defun . comint-read-input-ring)
  (defun . comint-write-input-ring)
  (defun . comint-dynamic-list-input-ring-select)
  (defun . comint-dynamic-list-input-ring)
  (defun . comint-regexp-arg)
  (defun . comint-search-arg)
  (defun . comint-restore-input)
  (defun . comint-search-start)
  (defun . comint-previous-input-string)
  (defun . comint-previous-input)
  (defun . comint-next-input)
  (defun . comint-previous-matching-input-string)
  (defun . comint-previous-matching-input-string-position)
  (defun . comint-delete-input)
  (defun . comint-previous-matching-input)
  (defun . comint-next-matching-input)
  (defun . comint-previous-matching-input-from-input)
  (defun . comint-next-matching-input-from-input)
  (defun . comint-replace-by-expanded-history)
  (defun . comint-replace-by-expanded-history-before-point)
  (defun . comint-magic-space)
  (defun . comint-within-quotes)
  (defun . comint-how-many-region)
  (defun . comint-args)
  (defun . comint-delim-arg)
  (defun . comint-arguments)
  (defun . comint-add-to-input-history)
  (defun . comint-send-input)
  comint-preoutput-filter-functions comint-inhibit-carriage-motion comint-last-prompt-overlay
  (defun . comint-snapshot-last-prompt)
  (defun . comint-carriage-motion)
  (defun . comint-output-filter)
  (defun . comint-preinput-scroll-to-bottom)
  (defun . comint-postoutput-scroll-to-bottom)
  (defun . comint-truncate-buffer)
  (defun . comint-strip-ctrl-m)
  (defun . shell-strip-ctrl-m)
  (defun . comint-show-maximum-output)
  (defun . comint-get-old-input-default)
  (defun . comint-copy-old-input)
  (defun . comint-skip-prompt)
  (defun . comint-after-pmark-p)
  (defun . comint-simple-send)
  (defun . comint-line-beginning-position)
  (defun . comint-bol)
  (defun . comint-read-noecho)
  (defun . send-invisible)
  (defun . comint-watch-for-password-prompt)
  (defun . comint-send-string)
  (defun . comint-send-region)
  (defun . comint-delete-output)
  (defun . comint-kill-output)
  (defun . comint-write-output)
  (defun . comint-append-output-to-file)
  (defun . comint-show-output)
  (defun . comint-interrupt-subjob)
  (defun . comint-kill-subjob)
  (defun . comint-quit-subjob)
  (defun . comint-stop-subjob)
  (defun . comint-continue-subjob)
  (defun . comint-skip-input)
  (defun . comint-kill-input)
  (defun . comint-delchar-or-maybe-eof)
  (defun . comint-send-eof)
  (defun . comint-backward-matching-input)
  (defun . comint-forward-matching-input)
  (defun . comint-next-prompt)
  (defun . comint-previous-prompt)
  comint-insert-previous-argument-last-start-pos comint-insert-previous-argument-last-index
  (defun . comint-insert-previous-argument)
  (defun . comint-update-fence)
  (defun . comint-kill-whole-line)
  (defun . comint-kill-region)
  (defun . comint-source-default)
  (defun . comint-check-source)
  (defun . comint-extract-string)
  (defun . comint-get-source)
  (defun . comint-proc-query)
  comint-completion-autolist comint-completion-addsuffix comint-completion-recexact comint-completion-fignore comint-file-name-prefix comint-file-name-chars comint-file-name-quote-list
  (defun . comint-directory)
  (defun . comint-word)
  (defun . comint-substitute-in-file-name)
  (defun . comint-match-partial-filename)
  (defun . comint-quote-filename)
  (defun . comint-unquote-filename)
  (defun . comint-dynamic-complete)
  (defun . comint-dynamic-complete-filename)
  (defun . comint-dynamic-complete-as-filename)
  (defun . comint-replace-by-expanded-filename)
  (defun . comint-dynamic-simple-complete)
  (defun . comint-dynamic-list-filename-completions)
  comint-displayed-dynamic-completions comint-dynamic-list-completions-config
  (defun . comint-dynamic-list-completions)
  (defun . comint-get-next-from-history)
  (defun . comint-accumulate)
  (defun . comint-goto-process-mark)
  (defun . comint-bol-or-process-mark)
  (defun . comint-set-process-mark)
  comint-redirect-verbose comint-redirect-filter-functions comint-redirect-output-buffer comint-redirect-finished-regexp comint-redirect-insert-matching-regexp comint-redirect-echo-input comint-redirect-completed comint-redirect-original-mode-line-process comint-redirect-perform-sanity-check comint-redirect-original-filter-function comint-redirect-subvert-readonly
  (defun . comint-redirect-setup)
  (defun . comint-redirect-cleanup)
  (defun . comint-redirect-remove-redirection)
  (defun . comint-redirect-filter)
  (defun . comint-redirect-preoutput-filter)
  (t . comint-redirect-send-command)
  (defun . comint-redirect-send-command)
  (t . comint-redirect-send-command-to-process)
  (defun . comint-redirect-send-command-to-process)
  (t . comint-redirect-results-list)
  (defun . comint-redirect-results-list)
  (t . comint-redirect-results-list-from-process)
  (defun . comint-redirect-results-list-from-process)
  (provide . comint))
 ("/usr/share/emacs/23.0.93/lisp/emacs-lisp/ring.elc"
  (t . ring-p)
  (defun . ring-p)
  (t . make-ring)
  (defun . make-ring)
  (defun . ring-insert-at-beginning)
  (defun . ring-plus1)
  (defun . ring-minus1)
  (defun . ring-length)
  (defun . ring-index)
  (defun . ring-empty-p)
  (defun . ring-size)
  (defun . ring-copy)
  (defun . ring-insert)
  (defun . ring-remove)
  (defun . ring-ref)
  (defun . ring-elements)
  (defun . ring-member)
  (defun . ring-next)
  (defun . ring-previous)
  (defun . ring-insert+extend)
  (defun . ring-remove+insert+extend)
  (defun . ring-convert-sequence-to-ring)
  (provide . ring))
 ("/usr/share/emacs/23.0.93/lisp/apropos.elc"
  (require . button)
  apropos-do-all apropos-symbol-face apropos-keybinding-face apropos-label-face apropos-property-face apropos-match-face apropos-sort-by-scores apropos-documentation-sort-by-scores apropos-mode-map apropos-mode-hook apropos-pattern apropos-pattern-quoted apropos-words apropos-all-words apropos-regexp apropos-all-words-regexp apropos-files-scanned apropos-accumulator apropos-item apropos-synonyms
  (defun . apropos-symbol-button-display-help)
  (defun . apropos-next-label-button)
  (defun . apropos-words-to-regexp)
  (t . apropos-read-pattern)
  (defun . apropos-read-pattern)
  (defun . apropos-parse-pattern)
  (defun . apropos-calc-scores)
  (defun . apropos-score-str)
  (defun . apropos-score-doc)
  (defun . apropos-score-symbol)
  (defun . apropos-true-hit)
  (defun . apropos-false-hit-symbol)
  (defun . apropos-false-hit-str)
  (defun . apropos-true-hit-doc)
  apropos-mode-map apropos-mode-syntax-table apropos-mode-abbrev-table apropos-mode-abbrev-table
  (defun . apropos-mode)
  apropos-multi-type
  (t . apropos-variable)
  (defun . apropos-variable)
  (defun . command-apropos)
  (t . apropos-command)
  (defun . apropos-command)
  (t . apropos-documentation-property)
  (defun . apropos-documentation-property)
  (t . apropos)
  (defun . apropos)
  (defun . apropos-library-button)
  (t . apropos-library)
  (defun . apropos-library)
  (defun . apropos-symbols-internal)
  (t . apropos-value)
  (defun . apropos-value)
  (t . apropos-documentation)
  (defun . apropos-documentation)
  (defun . apropos-value-internal)
  (defun . apropos-documentation-internal)
  (defun . apropos-format-plist)
  (defun . apropos-documentation-check-doc-file)
  (defun . apropos-documentation-check-elc-file)
  (defun . apropos-safe-documentation)
  apropos-compact-layout
  (defun . apropos-print)
  (defun . apropos-macrop)
  (defun . apropos-print-doc)
  (defun . apropos-follow)
  (defun . apropos-describe-plist)
  (provide . apropos))
 ("/home/hobbes/nxhtml/util/gimp.el" gimp:version
  (require . w32-regdat)
  (defun . gimp-get-remote-command)
  gimp-remote-command
  (defun . gimp-get-gimp-exe)
  gimp-exe gimp-remote-command-list
  (t . gimp-edit-file)
  (defun . gimp-edit-file)
  (t . gimp-edit-buffer)
  (defun . gimp-edit-buffer)
  (t . gimp-can-edit)
  (defun . gimp-can-edit)
  gimp-point-key-bindings
  (defun . gimp-add-point-bindings)
  (provide . gimp))
 ("/usr/share/emacs/23.0.93/lisp/dired.elc" dired-listing-switches dired-subdir-switches dired-chown-program dired-use-ls-dired dired-chmod-program dired-touch-program dired-ls-F-marks-symlinks dired-trivial-filenames dired-keep-marker-rename dired-keep-marker-copy dired-keep-marker-hardlink dired-keep-marker-symlink dired-dwim-target dired-copy-preserve-time dired-free-space-program dired-free-space-args dired-load-hook dired-mode-hook dired-before-readin-hook dired-after-readin-hook dired-dnd-protocol-alist dired-marker-char dired-del-marker dired-shrink-to-fit dired-flagging-regexp dired-directory dired-actual-switches dired-re-inode-size dired-re-mark dired-re-maybe-mark dired-re-dir dired-re-sym dired-re-exe dired-re-perms dired-re-dot dired-subdir-alist dired-switches-alist dired-move-to-filename-regexp dired-subdir-regexp
  (defface . dired-header)
  dired-header-face
  (defface . dired-mark)
  dired-mark-face
  (defface . dired-marked)
  dired-marked-face
  (defface . dired-flagged)
  dired-flagged-face
  (defface . dired-warning)
  dired-warning-face
  (defface . dired-perm-write)
  dired-perm-write-face
  (defface . dired-directory)
  dired-directory-face
  (defface . dired-symlink)
  dired-symlink-face
  (defface . dired-ignored)
  dired-ignored-face dired-font-lock-keywords
  (defun . dired-mark-if)
  (defun . dired-map-over-marks)
  (defun . dired-get-marked-files)
  (defun . dired-read-dir-and-switches)
  (t . dired)
  (defun . dired)
  (t . dired-other-window)
  (defun . dired-other-window)
  (t . dired-other-frame)
  (defun . dired-other-frame)
  (t . dired-noselect)
  (defun . dired-noselect)
  (defun . dired-directory-changed-p)
  (defun . dired-buffer-stale-p)
  (defun . dired-internal-noselect)
  dired-buffers
  (defun . dired-find-buffer-nocreate)
  (defun . dired-readin)
  (defun . dired-readin-insert)
  (defun . dired-align-file)
  (defun . dired-insert-directory)
  (defun . dired-insert-set-properties)
  (defun . dired-revert)
  (defun . dired-remember-marks)
  (defun . dired-mark-remembered)
  (defun . dired-remember-hidden)
  (defun . dired-insert-old-subdirs)
  (defun . dired-uncache)
  dired-mode-map
  (t . dired-mode)
  (defun . dired-mode)
  (defun . dired-summary)
  (defun . dired-undo)
  (defun . dired-toggle-read-only)
  (defun . dired-next-line)
  (defun . dired-previous-line)
  (defun . dired-next-dirline)
  (defun . dired-prev-dirline)
  (defun . dired-up-directory)
  (defun . dired-get-file-for-visit)
  (defun . dired-advertised-find-file)
  (defun . dired-find-file)
  (defun . dired-find-alternate-file)
  (defun . dired-mouse-find-file-other-window)
  (defun . dired-view-file)
  (defun . dired-find-file-other-window)
  (defun . dired-display-file)
  (defun . dired-get-filename)
  (defun . dired-string-replace-match)
  (defun . dired-make-absolute)
  (defun . dired-make-relative)
  dired-permission-flags-regexp
  (defun . dired-move-to-filename)
  (defun . dired-move-to-end-of-filename)
  (defun . dired-copy-filename-as-kill)
  (defun . dired-buffers-for-dir)
  (defun . dired-glob-regexp)
  (defun . dired-advertise)
  (defun . dired-unadvertise)
  (defun . dired-in-this-tree)
  (defun . dired-normalize-subdir)
  (defun . dired-get-subdir)
  (defun . dired-get-subdir-min)
  (defun . dired-get-subdir-max)
  (defun . dired-clear-alist)
  (defun . dired-subdir-index)
  (defun . dired-next-subdir)
  (defun . dired-build-subdir-alist)
  (defun . dired-alist-add-1)
  (defun . dired-goto-next-nontrivial-file)
  (defun . dired-goto-next-file)
  (defun . dired-goto-file)
  (defun . dired-initial-position)
  (defun . dired-current-directory)
  (defun . dired-subdir-max)
  dired-recursive-deletes dired-re-no-dot
  (defun . dired-delete-file)
  (defun . dired-do-flagged-delete)
  (defun . dired-do-delete)
  dired-deletion-confirmer
  (defun . dired-internal-do-deletions)
  (defun . dired-fun-in-all-buffers)
  (defun . dired-delete-entry)
  (defun . dired-clean-up-after-deletion)
  (defun . dired-marker-regexp)
  (defun . dired-plural-s)
  (defun . dired-mark-prompt)
  (defun . dired-pop-to-buffer)
  dired-no-confirm
  (defun . dired-mark-pop-up)
  (defun . dired-format-columns-of-files)
  (defun . dired-repeat-over-lines)
  (defun . dired-between-files)
  (defun . dired-next-marked-file)
  (defun . dired-prev-marked-file)
  (defun . dired-file-marker)
  (defun . dired-mark-files-in-region)
  (defun . dired-mark)
  (defun . dired-unmark)
  (defun . dired-flag-file-deletion)
  (defun . dired-unmark-backward)
  (defun . dired-toggle-marks)
  dired-regexp-history
  (defun . dired-read-regexp)
  (defun . dired-mark-files-regexp)
  (defun . dired-mark-files-containing-regexp)
  (defun . dired-flag-files-regexp)
  (defun . dired-mark-symlinks)
  (defun . dired-mark-directories)
  (defun . dired-mark-executables)
  (defun . dired-flag-auto-save-files)
  dired-garbage-files-regexp
  (defun . dired-flag-garbage-files)
  (defun . dired-flag-backup-files)
  (defun . dired-change-marks)
  (defun . dired-unmark-all-marks)
  (defun . dired-unmark-all-files)
  dired-log-buffer
  (defun . dired-why)
  (defun . dired-log)
  (defun . dired-log-summary)
  dired-ls-sorting-switches dired-sort-by-date-regexp dired-sort-by-name-regexp dired-sort-inhibit
  (defun . dired-sort-set-modeline)
  (defun . dired-sort-toggle-or-edit)
  (defun . dired-sort-toggle)
  (defun . dired-replace-in-string)
  (defun . dired-sort-other)
  dired-subdir-alist-pre-R
  (defun . dired-sort-R-check)
  dired-recursive-copies
  (defun . dired-dnd-popup-notice)
  (defun . dired-dnd-do-ask-action)
  (defun . dired-dnd-handle-local-file)
  (defun . dired-dnd-handle-file)
  (defun . dired-desktop-buffer-misc-data)
  (defun . dired-restore-desktop-buffer)
  (provide . dired))
 ("/usr/share/emacs/23.0.93/lisp/emacs-lisp/regexp-opt.elc"
  (t . regexp-opt)
  (defun . regexp-opt)
  (t . regexp-opt-depth)
  (defun . regexp-opt-depth)
  (defun . regexp-opt-group)
  (defun . regexp-opt-charset)
  (provide . regexp-opt))
 ("/usr/share/emacs/23.0.93/lisp/cus-edit.elc"
  (require . cus-face)
  (require . wid-edit)
  (require . cus-load)
  (require . cus-start)
  custom-mode-map custom-mode-link-map custom-field-keymap
  (defun . custom-split-regexp-maybe)
  (defun . custom-variable-prompt)
  (defun . custom-menu-filter)
  custom-prefix-list custom-unlispify-menu-entries custom-unlispify-remove-prefixes
  (defun . custom-unlispify-menu-entry)
  custom-unlispify-tag-names
  (defun . custom-unlispify-tag-name)
  (defun . custom-prefix-add)
  custom-guess-name-alist custom-guess-doc-alist
  (defun . custom-guess-type)
  custom-browse-sort-alphabetically custom-browse-order-groups custom-browse-only-groups custom-buffer-sort-alphabetically custom-buffer-order-groups custom-menu-sort-alphabetically custom-menu-order-groups
  (defun . custom-sort-items)
  custom-commands
  (defun . Custom-help)
  custom-reset-menu custom-options
  (defun . custom-command-apply)
  (defun . Custom-set)
  (defun . Custom-save)
  (defun . custom-reset)
  (defun . Custom-reset-current)
  (defun . Custom-reset-saved)
  custom-reset-standard-variables-list custom-reset-standard-faces-list
  (defun . custom-reset-standard-save-and-update)
  (defun . Custom-reset-standard)
  (defun . custom-prompt-variable)
  (t . customize-set-value)
  (defun . customize-set-value)
  (t . customize-set-variable)
  (defun . customize-set-variable)
  (t . customize-save-variable)
  (defun . customize-save-variable)
  (t . customize)
  (defun . customize)
  (t . customize-mode)
  (defun . customize-mode)
  (defun . customize-read-group)
  (t . customize-group)
  (defun . customize-group)
  (t . customize-group-other-window)
  (defun . customize-group-other-window)
  (defun . customize-variable)
  (t . customize-option)
  (defun . customize-option)
  (defun . customize-variable-other-window)
  (t . customize-option-other-window)
  (defun . customize-option-other-window)
  customize-changed-options-previous-release customize-package-emacs-version-alist
  (defun . customize-changed)
  (t . customize-changed-options)
  (defun . customize-changed-options)
  (defun . customize-package-emacs-version)
  (defun . customize-version-lessp)
  (t . customize-face)
  (defun . customize-face)
  (t . customize-face-other-window)
  (defun . customize-face-other-window)
  (defun . customize-customized)
  (t . customize-unsaved)
  (defun . customize-unsaved)
  (t . customize-rogue)
  (defun . customize-rogue)
  (t . customize-saved)
  (defun . customize-saved)
  (t . customize-apropos)
  (defun . customize-apropos)
  (t . customize-apropos-options)
  (defun . customize-apropos-options)
  (t . customize-apropos-faces)
  (defun . customize-apropos-faces)
  (t . customize-apropos-groups)
  (defun . customize-apropos-groups)
  custom-buffer-style custom-buffer-done-kill custom-buffer-indent
  (defun . custom-get-fresh-buffer)
  (t . custom-buffer-create)
  (defun . custom-buffer-create)
  (t . custom-buffer-create-other-window)
  (defun . custom-buffer-create-other-window)
  custom-reset-button-menu custom-buffer-verbose-help
  (defun . Custom-buffer-done)
  custom-button custom-button-mouse custom-button-pressed custom-raised-buttons
  (defun . custom-buffer-create-internal)
  (t . customize-browse)
  (defun . customize-browse)
  (defun . custom-browse-visibility-action)
  (defun . custom-browse-group-tag-action)
  (defun . custom-browse-variable-tag-action)
  (defun . custom-browse-face-tag-action)
  custom-browse-alist custom-browse-alist
  (defun . custom-browse-insert-prefix)
  (defface . custom-invalid)
  (defface . custom-rogue)
  (defface . custom-modified)
  (defface . custom-set)
  (defface . custom-changed)
  (defface . custom-themed)
  (defface . custom-saved)
  custom-magic-alist custom-magic-show custom-magic-show-hidden custom-magic-show-button
  (defun . widget-magic-mouse-down-action)
  (defun . custom-magic-value-create)
  (defun . custom-magic-reset)
  (defface . custom-button)
  (defface . custom-button-mouse)
  (defface . custom-button-unraised)
  (defface . custom-button-pressed)
  (defface . custom-button-pressed-unraised)
  (defface . custom-documentation)
  (defface . custom-state)
  (defface . custom-link)
  (defun . custom-convert-widget)
  (defun . custom-notify)
  (defun . custom-redraw)
  (defun . custom-redraw-magic)
  (defun . custom-show)
  (defun . custom-load-widget)
  (defun . custom-unloaded-symbol-p)
  (defun . custom-unloaded-widget-p)
  (defun . custom-toggle-hide)
  (defun . custom-toggle-parent)
  (defun . custom-add-see-also)
  (defun . custom-add-parent-links)
  (defface . custom-comment)
  (defface . custom-comment-tag)
  (defun . custom-comment-create)
  (defun . custom-comment-hide)
  (defun . custom-comment-show)
  (defun . custom-comment-invisible-p)
  (defface . custom-variable-tag)
  (defface . custom-variable-button)
  custom-variable-default-form
  (defun . custom-variable-documentation)
  (defun . custom-variable-type)
  (defun . custom-variable-value-create)
  (defun . custom-tag-action)
  (defun . custom-tag-mouse-down-action)
  (defun . custom-variable-state-set)
  (defun . custom-variable-standard-value)
  custom-variable-menu
  (defun . custom-variable-action)
  (defun . custom-variable-edit)
  (defun . custom-variable-edit-lisp)
  (defun . custom-variable-set)
  (defun . custom-variable-mark-to-save)
  (defun . custom-variable-state-set-and-redraw)
  (defun . custom-variable-save)
  (defun . custom-variable-reset-saved)
  (defun . custom-variable-mark-to-reset-standard)
  (defun . custom-variable-reset-standard)
  (defun . custom-variable-backup-value)
  (defun . custom-variable-reset-backup)
  (defface . custom-visibility)
  (defun . custom-face-edit-fix-value)
  (defun . custom-face-edit-convert-widget)
  (defun . custom-face-edit-deactivate)
  (defun . custom-face-edit-activate)
  (defun . custom-face-edit-delete)
  (defun . custom-face-edit-attribute-tag)
  (defface . custom-face-tag)
  custom-face-default-form custom-face-all
  (defun . custom-display-unselected-match)
  custom-face-selected
  (defun . custom-filter-face-spec)
  (defun . custom-pre-filter-face-spec)
  (defun . custom-post-filter-face-spec)
  (defun . custom-face-value-create)
  custom-face-menu
  (defun . custom-face-edit-selected)
  (defun . custom-face-edit-all)
  (defun . custom-face-edit-lisp)
  (defun . custom-face-state-set)
  (defun . custom-face-action)
  (defun . custom-face-set)
  (defun . custom-face-mark-to-save)
  (defun . custom-face-state-set-and-redraw)
  (defun . custom-face-save)
  (defun . custom-face-save-command)
  (defun . custom-face-reset-saved)
  (defun . custom-face-standard-value)
  (defun . custom-face-mark-to-reset-standard)
  (defun . custom-face-reset-standard)
  widget-face-prompt-value-history
  (defun . widget-face-sample-face-get)
  (defun . widget-face-notify)
  (defun . custom-hook-convert-widget)
  (defun . custom-group-link-action)
  custom-group-tag-faces
  (defface . custom-group-tag-1)
  (defface . custom-group-tag)
  (defun . custom-group-sample-face-get)
  (defun . custom-group-visibility-create)
  (defun . custom-group-members)
  (defun . custom-group-value-create)
  custom-group-menu
  (defun . custom-group-action)
  (defun . custom-group-set)
  (defun . custom-group-mark-to-save)
  (defun . custom-group-state-set-and-redraw)
  (defun . custom-group-save)
  (defun . custom-group-reset-current)
  (defun . custom-group-reset-saved)
  (defun . custom-group-reset-standard)
  (defun . custom-group-mark-to-reset-standard)
  (defun . custom-group-state-update)
  custom-file
  (defun . custom-file)
  (t . custom-save-all)
  (defun . custom-save-all)
  (t . customize-save-customized)
  (defun . customize-save-customized)
  (defun . custom-save-delete)
  (defun . custom-save-variables)
  (defun . custom-save-faces)
  custom-menu-nesting
  (defun . custom-face-menu-create)
  (defun . custom-variable-menu-create)
  (defun . custom-group-menu-create)
  (t . custom-menu-create)
  (defun . custom-menu-create)
  (t . customize-menu-create)
  (defun . customize-menu-create)
  Custom-mode-menu
  (defun . Custom-mode-menu)
  custom-tool-bar-map
  (defun . Custom-no-edit)
  (defun . Custom-newline)
  (defun . Custom-goto-parent)
  Custom-mode-hook
  (defun . custom-state-buffer-message)
  Custom-mode-map Custom-mode-syntax-table Custom-mode-abbrev-table Custom-mode-abbrev-table
  (defun . Custom-mode)
  (defun . custom-mode)
  custom-mode-hook
  (provide . cus-edit))
 ("/usr/share/emacs/23.0.93/lisp/emacs-lisp/easymenu.elc" easy-menu-precalculate-equivalent-keybindings
  (defun . easy-menu-intern)
  (t . easy-menu-define)
  (defun . easy-menu-define)
  (defun . easy-menu-binding)
  (t . easy-menu-do-define)
  (defun . easy-menu-do-define)
  (defun . easy-menu-filter-return)
  easy-menu-avoid-duplicate-keys
  (t . easy-menu-create-menu)
  (defun . easy-menu-create-menu)
  easy-menu-button-prefix easy-menu-converted-items-table
  (defun . easy-menu-convert-item)
  (defun . easy-menu-convert-item-1)
  (defun . easy-menu-define-key)
  (defun . easy-menu-name-match)
  (defun . easy-menu-always-true-p)
  easy-menu-item-count
  (defun . easy-menu-make-symbol)
  (t . easy-menu-change)
  (defun . easy-menu-change)
  (defun . easy-menu-remove)
  (defun . easy-menu-add)
  (defun . add-submenu)
  (defun . easy-menu-add-item)
  (defun . easy-menu-item-present-p)
  (defun . easy-menu-remove-item)
  (defun . easy-menu-return-item)
  (defun . easy-menu-lookup-name)
  (defun . easy-menu-get-map)
  (provide . easymenu))
 ("/usr/share/emacs/23.0.93/lisp/cus-start.elc"
  (provide . cus-start))
 ("/usr/share/emacs/23.0.93/lisp/cus-load.el"
  (defun . custom-put-if-not)
  custom-versions-load-alist
  (provide . cus-load))
 ("/usr/share/emacs/23.0.93/lisp/wid-edit.elc"
  (defun . widget-event-point)
  (defun . widget-button-release-event-p)
  widget-documentation-face
  (defface . widget-documentation)
  widget-button-face
  (defface . widget-button)
  widget-mouse-face
  (defface . widget-field)
  (defface . widget-single-line-field)
  (defun . widget-princ-to-string)
  (defun . widget-clear-undo)
  widget-menu-max-size widget-menu-max-shortcuts widget-menu-minibuffer-flag
  (defun . widget-choose)
  (defun . widget-remove-if)
  widget-field-add-space widget-field-use-before-change
  (defun . widget-specify-field)
  (defun . widget-specify-secret)
  (defun . widget-specify-button)
  (defun . widget-mouse-help)
  (defun . widget-specify-sample)
  (defun . widget-specify-doc)
  (defun . widget-specify-insert)
  (defface . widget-inactive)
  (defun . widget-specify-inactive)
  (defun . widget-overlay-inactive)
  (defun . widget-specify-active)
  (defun . widget-type)
  (t . widgetp)
  (defun . widgetp)
  (defun . widget-get-indirect)
  (defun . widget-member)
  (t . widget-value)
  (defun . widget-value)
  (defun . widget-value-set)
  (defun . widget-default-get)
  (defun . widget-match-inline)
  (defun . widget-apply-action)
  (t . widget-prompt-value)
  (defun . widget-prompt-value)
  (defun . widget-get-sibling)
  (defun . widget-map-buttons)
  widget-image-directory widget-image-enable widget-image-conversion
  (defun . widget-image-find)
  widget-button-pressed-face
  (defun . widget-image-insert)
  (defun . widget-move-and-invoke)
  widget-button-prefix widget-button-suffix
  (t . widget-create)
  (defun . widget-create)
  (defun . widget-create-child-and-convert)
  (defun . widget-create-child)
  (defun . widget-create-child-value)
  (t . widget-delete)
  (defun . widget-delete)
  (defun . widget-copy)
  (defun . widget-convert)
  (t . widget-insert)
  (defun . widget-insert)
  (defun . widget-convert-text)
  (defun . widget-convert-button)
  (defun . widget-leave-text)
  (defun . advertised-widget-backward)
  widget-keymap widget-global-map widget-field-keymap widget-text-keymap
  (defun . widget-field-activate)
  (defface . widget-button-pressed)
  widget-button-click-moves-point
  (defun . widget-button-click)
  (defun . widget-button-press)
  (defun . widget-tabable-at)
  widget-use-overlay-change
  (defun . widget-move)
  (defun . widget-forward)
  (defun . widget-backward)
  (defun . widget-beginning-of-line)
  (defun . widget-end-of-line)
  (defun . widget-kill-line)
  widget-complete-field
  (defun . widget-narrow-to-field)
  (defun . widget-complete)
  widget-field-new widget-field-list
  (defun . widget-at)
  (t . widget-setup)
  (defun . widget-setup)
  widget-field-last widget-field-was
  (defun . widget-field-at)
  (defun . widget-field-buffer)
  (defun . widget-field-start)
  (defun . widget-field-end)
  (defun . widget-field-find)
  (defun . widget-before-change)
  (defun . widget-add-change)
  (defun . widget-after-change)
  (defun . widget-parent-action)
  (defun . widget-children-value-delete)
  (defun . widget-children-validate)
  (defun . widget-child-value-get)
  (defun . widget-child-value-inline)
  (defun . widget-child-validate)
  (defun . widget-type-value-create)
  (defun . widget-type-default-get)
  (defun . widget-type-match)
  (defun . widget-types-copy)
  (defun . widget-types-convert-widget)
  (defun . widget-value-convert-widget)
  (defun . widget-value-value-get)
  (defun . widget-default-complete)
  (defun . widget-default-create)
  (defun . widget-default-format-handler)
  (defun . widget-default-button-face-get)
  (defun . widget-default-mouse-face-get)
  (defun . widget-default-sample-face-get)
  (defun . widget-default-delete)
  (defun . widget-default-value-set)
  (defun . widget-default-value-inline)
  (defun . widget-default-default-get)
  (defun . widget-default-menu-tag-get)
  (defun . widget-default-active)
  (defun . widget-default-deactivate)
  (defun . widget-default-action)
  (defun . widget-default-notify)
  (defun . widget-default-prompt-value)
  (defun . widget-docstring)
  (defun . widget-item-value-create)
  (defun . widget-item-match)
  (defun . widget-item-match-inline)
  (defun . widget-sublist)
  (defun . widget-item-action)
  widget-push-button-prefix widget-push-button-suffix
  (defun . widget-push-button-value-create)
  widget-link-prefix widget-link-suffix
  (defun . widget-info-link-action)
  (defun . widget-url-link-action)
  (defun . widget-function-link-action)
  (defun . widget-variable-link-action)
  (defun . widget-file-link-action)
  (defun . widget-emacs-library-link-action)
  (defun . widget-emacs-commentary-link-action)
  widget-field-history
  (defun . widget-field-prompt-internal)
  (defun . widget-field-prompt-value)
  widget-edit-functions
  (defun . widget-field-action)
  (defun . widget-field-validate)
  (defun . widget-field-value-create)
  (defun . widget-field-value-delete)
  (defun . widget-field-value-get)
  (defun . widget-field-match)
  (defun . widget-choice-value-create)
  (defun . widget-choice-default-get)
  widget-choice-toggle
  (defun . widget-choice-mouse-down-action)
  (defun . widget-choice-action)
  (defun . widget-choice-validate)
  (defun . widget-choice-match)
  (defun . widget-choice-match-inline)
  (defun . widget-toggle-value-create)
  (defun . widget-toggle-action)
  (defun . widget-checkbox-action)
  (defun . widget-checklist-value-create)
  (defun . widget-checklist-add-item)
  (defun . widget-checklist-match)
  (defun . widget-checklist-match-inline)
  (defun . widget-checklist-match-find)
  (defun . widget-checklist-match-up)
  (defun . widget-checklist-value-get)
  (defun . widget-checklist-validate)
  (defun . widget-radio-button-notify)
  (defun . widget-radio-value-create)
  (defun . widget-radio-add-item)
  (defun . widget-radio-value-get)
  (defun . widget-radio-chosen)
  (defun . widget-radio-value-inline)
  (defun . widget-radio-value-set)
  (defun . widget-radio-validate)
  (defun . widget-radio-action)
  (defun . widget-insert-button-action)
  (defun . widget-delete-button-action)
  (defun . widget-editable-list-format-handler)
  (defun . widget-editable-list-value-create)
  (defun . widget-editable-list-value-get)
  (defun . widget-editable-list-match)
  (defun . widget-editable-list-match-inline)
  (defun . widget-editable-list-insert-before)
  (defun . widget-editable-list-delete-at)
  (defun . widget-editable-list-entry-create)
  (defun . widget-group-value-create)
  (defun . widget-group-default-get)
  (defun . widget-group-match)
  (defun . widget-group-match-inline)
  (defun . widget-visibility-value-create)
  (defun . widget-documentation-link-action)
  widget-documentation-links widget-documentation-link-regexp widget-documentation-link-p widget-documentation-link-type
  (defun . widget-documentation-link-add)
  (defun . widget-documentation-string-value-create)
  (defun . widget-documentation-string-action)
  (defun . widget-add-documentation-string-button)
  (defun . widget-const-prompt-value)
  widget-string-prompt-value-history
  (defun . widget-string-complete)
  (defun . widget-regexp-match)
  (defun . widget-regexp-validate)
  (defun . widget-file-complete)
  (defun . widget-file-prompt-value)
  widget-symbol-prompt-value-history
  (defun . widget-symbol-prompt-internal)
  widget-function-prompt-value-history widget-variable-prompt-value-history
  (defun . widget-coding-system-prompt-value)
  (defun . widget-coding-system-action)
  widget-key-sequence-prompt-value-history widget-key-sequence-default-value widget-key-sequence-map
  (defun . widget-key-sequence-read-event)
  (defun . widget-key-sequence-validate)
  (defun . widget-key-sequence-value-to-internal)
  (defun . widget-key-sequence-value-to-external)
  (defun . widget-sexp-value-to-internal)
  (defun . widget-sexp-validate)
  widget-sexp-prompt-value-history
  (defun . widget-sexp-prompt-value)
  (defun . widget-restricted-sexp-match)
  (defun . widget-vector-match)
  (defun . widget-cons-match)
  (defun . widget-plist-convert-widget)
  (defun . widget-plist-convert-option)
  (defun . widget-alist-convert-widget)
  (defun . widget-alist-convert-option)
  (defun . widget-choice-prompt-value)
  (defun . widget-boolean-prompt-value)
  (defun . widget-color-complete)
  (defun . widget-color-sample-face-get)
  (defun . widget-color-action)
  (defun . widget-color-notify)
  (defun . widget-echo-help)
  (provide . wid-edit))
 ("/usr/share/emacs/23.0.93/lisp/emacs-lisp/cl.elc" cl-optimize-speed cl-optimize-safety custom-print-functions
  (defun . cl-unload-function)
  (defun . incf)
  (defun . decf)
  (defun . pop)
  (defun . push)
  (defun . pushnew)
  (defun . cl-set-elt)
  (defun . cl-set-nthcdr)
  (defun . cl-set-buffer-substring)
  (defun . cl-set-substring)
  (defun . cl-map-extents)
  (defun . cl-block-wrapper)
  (defun . cl-block-throw)
  (defun . values)
  (defun . values-list)
  (defun . multiple-value-list)
  (defun . multiple-value-apply)
  (defun . multiple-value-call)
  (defun . nth-value)
  cl-macro-environment cl-old-macroexpand
  (defun . macroexpand)
  (defun . cl-macroexpand)
  cl-compiling-file
  (defun . cl-compiling-file)
  cl-proclaims-deferred
  (defun . proclaim)
  (defun . declaim)
  (defun . cl-random-time)
  *gensym-counter*
  (defun . floatp-safe)
  (defun . plusp)
  (defun . minusp)
  (defun . oddp)
  (defun . evenp)
  *random-state* most-positive-float most-positive-float most-negative-float most-negative-float least-positive-float least-positive-float least-negative-float least-negative-float least-positive-normalized-float least-positive-normalized-float least-negative-normalized-float least-negative-normalized-float float-epsilon float-epsilon float-negative-epsilon float-negative-epsilon
  (defun . copy-seq)
  (defun . mapcar*)
  (defun . svref)
  (defun . first)
  (defun . second)
  (defun . rest)
  (defun . endp)
  (defun . third)
  (defun . fourth)
  (defun . fifth)
  (defun . sixth)
  (defun . seventh)
  (defun . eighth)
  (defun . ninth)
  (defun . tenth)
  (defun . caaar)
  (defun . caadr)
  (defun . cadar)
  (defun . caddr)
  (defun . cdaar)
  (defun . cdadr)
  (defun . cddar)
  (defun . cdddr)
  (defun . caaaar)
  (defun . caaadr)
  (defun . caadar)
  (defun . caaddr)
  (defun . cadaar)
  (defun . cadadr)
  (defun . caddar)
  (defun . cadddr)
  (defun . cdaaar)
  (defun . cdaadr)
  (defun . cdadar)
  (defun . cdaddr)
  (defun . cddaar)
  (defun . cddadr)
  (defun . cdddar)
  (defun . cddddr)
  (defun . list*)
  (defun . ldiff)
  (defun . copy-list)
  (defun . cl-maclisp-member)
  (defun . cl-member)
  (defun . cl-floor)
  (defun . cl-ceiling)
  (defun . cl-truncate)
  (defun . cl-round)
  (defun . cl-mod)
  (defun . adjoin)
  (defun . subst)
  (defun . cl-do-subst)
  (defun . acons)
  (defun . pairlis)
  (provide . cl-19)
  (provide . cl)
  cl-hacked-flag
  (defun . cl-hack-byte-compiler)
  (provide . cl))
 ("/usr/share/emacs/23.0.93/lisp/emacs-lisp/cl-loaddefs.el"
  (autoload . coerce)
  (autoload . equalp)
  (autoload . cl-mapcar-many)
  (autoload . map)
  (autoload . maplist)
  (autoload . mapl)
  (autoload . mapcan)
  (autoload . mapcon)
  (autoload . some)
  (autoload . every)
  (autoload . notany)
  (autoload . notevery)
  (defun . cl-map-keymap)
  (autoload . cl-map-keymap-recursively)
  (autoload . cl-map-intervals)
  (autoload . cl-map-overlays)
  (autoload . cl-set-frame-visible-p)
  (autoload . cl-progv-before)
  (autoload . gcd)
  (autoload . lcm)
  (autoload . isqrt)
  (autoload . floor*)
  (autoload . ceiling*)
  (autoload . truncate*)
  (autoload . round*)
  (autoload . mod*)
  (autoload . rem*)
  (autoload . signum)
  (autoload . random*)
  (autoload . make-random-state)
  (autoload . random-state-p)
  (autoload . cl-float-limits)
  (autoload . subseq)
  (autoload . concatenate)
  (autoload . revappend)
  (autoload . nreconc)
  (autoload . list-length)
  (autoload . tailp)
  (autoload . get*)
  (autoload . getf)
  (autoload . cl-set-getf)
  (autoload . cl-do-remf)
  (autoload . cl-remprop)
  (defun . remprop)
  (defun . cl-gethash)
  (defun . cl-puthash)
  (defun . cl-remhash)
  (defun . cl-clrhash)
  (defun . cl-maphash)
  (defun . cl-make-hash-table)
  (defun . cl-hash-table-p)
  (defun . cl-hash-table-count)
  (autoload . cl-macroexpand-all)
  (autoload . cl-prettyexpand)
  (autoload . gensym)
  (autoload . gentemp)
  (autoload . defun*)
  (autoload . defmacro*)
  (autoload . function*)
  (autoload . destructuring-bind)
  (autoload . eval-when)
  (autoload . load-time-value)
  (autoload . case)
  (autoload . ecase)
  (autoload . typecase)
  (autoload . etypecase)
  (autoload . block)
  (autoload . return)
  (autoload . return-from)
  (autoload . loop)
  (autoload . do)
  (autoload . do*)
  (autoload . dolist)
  (autoload . dotimes)
  (autoload . do-symbols)
  (autoload . do-all-symbols)
  (autoload . psetq)
  (autoload . progv)
  (autoload . flet)
  (autoload . labels)
  (autoload . macrolet)
  (autoload . symbol-macrolet)
  (autoload . lexical-let)
  (autoload . lexical-let*)
  (autoload . multiple-value-bind)
  (autoload . multiple-value-setq)
  (autoload . locally)
  (autoload . the)
  (autoload . declare)
  (autoload . define-setf-method)
  (autoload . defsetf)
  (autoload . get-setf-method)
  (autoload . setf)
  (autoload . psetf)
  (autoload . cl-do-pop)
  (autoload . remf)
  (autoload . shiftf)
  (autoload . rotatef)
  (autoload . letf)
  (autoload . letf*)
  (autoload . callf)
  (autoload . callf2)
  (autoload . define-modify-macro)
  (autoload . defstruct)
  (autoload . cl-struct-setf-expander)
  (autoload . typep)
  (autoload . check-type)
  (autoload . assert)
  (autoload . define-compiler-macro)
  (autoload . compiler-macroexpand)
  (autoload . reduce)
  (autoload . fill)
  (autoload . replace)
  (autoload . remove*)
  (autoload . remove-if)
  (autoload . remove-if-not)
  (autoload . delete*)
  (autoload . delete-if)
  (autoload . delete-if-not)
  (autoload . remove-duplicates)
  (autoload . delete-duplicates)
  (autoload . substitute)
  (autoload . substitute-if)
  (autoload . substitute-if-not)
  (autoload . nsubstitute)
  (autoload . nsubstitute-if)
  (autoload . nsubstitute-if-not)
  (autoload . find)
  (autoload . find-if)
  (autoload . find-if-not)
  (autoload . position)
  (autoload . position-if)
  (autoload . position-if-not)
  (autoload . count)
  (autoload . count-if)
  (autoload . count-if-not)
  (autoload . mismatch)
  (autoload . search)
  (autoload . sort*)
  (autoload . stable-sort)
  (autoload . merge)
  (autoload . member*)
  (autoload . member-if)
  (autoload . member-if-not)
  (autoload . cl-adjoin)
  (autoload . assoc*)
  (autoload . assoc-if)
  (autoload . assoc-if-not)
  (autoload . rassoc*)
  (autoload . rassoc-if)
  (autoload . rassoc-if-not)
  (autoload . union)
  (autoload . nunion)
  (autoload . intersection)
  (autoload . nintersection)
  (autoload . set-difference)
  (autoload . nset-difference)
  (autoload . set-exclusive-or)
  (autoload . nset-exclusive-or)
  (autoload . subsetp)
  (autoload . subst-if)
  (autoload . subst-if-not)
  (autoload . nsubst)
  (autoload . nsubst-if)
  (autoload . nsubst-if-not)
  (autoload . sublis)
  (autoload . nsublis)
  (autoload . tree-equal))
 ("/home/hobbes/nxhtml/nxhtml-loaddefs.el"
  (autoload . html-site-buffer-or-dired-file-name)
  (autoload . html-site-set-site)
  (autoload . html-site-dired-current)
  (autoload . html-site-find-file)
  (autoload . html-site-rgrep)
  (autoload . html-site-query-replace)
  (autoload . inlimg-mode)
  (autoload . inlimg-toggle-img-display)
  (autoload . nxhtml-report-bug)
  (autoload . nxhtml-edit-with-gimp)
  (autoload . nxhtml-browse-file)
  (autoload . nxhtml-browse-region)
  nxhtml-global-minor-mode
  (autoload . nxhtml-global-minor-mode)
  (autoload . nxhtml-mode)
  (autoload . nxhtml-short-tag-help)
  (autoload . nxhtml-validation-header-mode)
  (autoload . nxhtml-mumamo-mode)
  (autoload . embperl-nxhtml-mumamo-mode)
  (autoload . django-nxhtml-mumamo-mode)
  (autoload . genshi-nxhtml-mumamo-mode)
  (autoload . mjt-nxhtml-mumamo-mode)
  (autoload . smarty-nxhtml-mumamo-mode)
  (autoload . jsp-nxhtml-mumamo-mode)
  (autoload . eruby-nxhtml-mumamo-mode)
  (autoload . asp-nxhtml-mumamo-mode)
  (autoload . mako-nxhtml-mumamo-mode)
  nxml-where-global-mode
  (autoload . nxml-where-global-mode)
  (autoload . rngalt-set-validation-header)
  (autoload . tidy-build-menu)
  (autoload . xhtml-help-show-css-ref)
  (autoload . xhtml-help-show-tag-ref)
  (autoload . csharp-mode)
  (autoload . django-mode)
  (autoload . javascript-mode)
  (autoload . moz-minor-mode)
  (autoload . inferior-moz-mode)
  php-file-patterns
  (autoload . php-mode)
  (autoload . smarty-mode)
  (autoload . tt-mode)
  (autoload . wikipedia-mode)
  (autoload . wikipedia-draft)
  (autoload . wikipedia-draft-page)
  (autoload . wikipedia-draft-buffer)
  wikipedia-draft-send-archive
  (autoload . ert-deftest)
  (autoload . ert-run-tests-interactively)
  (autoload . nxhtmltest-run-Q)
  (autoload . nxhtmltest-run-indent)
  (autoload . nxhtmltest-run)
  (autoload . appmenu-add)
  (autoload . as-external-for-xhtml)
  (autoload . as-external-for-mail)
  (autoload . as-external-for-wiki)
  as-external-mode
  (autoload . as-external-mode)
  (autoload . chart-complete)
  (autoload . chart-make-chart)
  css-color-global-mode
  (autoload . css-color-global-mode)
  (autoload . css-color-mode)
  (autoload . css-palette-mode)
  css-palette-global-mode
  (autoload . css-palette-global-mode)
  (autoload . freemind-show)
  (autoload . freemind-from-org-mode-node)
  (autoload . freemind-from-org-mode)
  (autoload . freemind-from-org-sparse-tree)
  (autoload . freemind-to-org-mode)
  (autoload . gimp-edit-file)
  (autoload . gimp-edit-buffer)
  (autoload . gimp-can-edit)
  (autoload . gpl-mode)
  (autoload . html-write-mode)
  (autoload . htmlfontify-buffer)
  (autoload . majmodpri-sort-lists)
  (autoload . majmodpri-apply)
  (autoload . majmodpri-apply-priorities)
  (autoload . mlinks-mode)
  (autoload . mumamo-mark-for-refontification)
  (autoload . html-mumamo-mode)
  (autoload . nxml-mumamo-mode)
  (autoload . embperl-html-mumamo-mode)
  (autoload . django-html-mumamo-mode)
  (autoload . genshi-html-mumamo-mode)
  (autoload . mjt-html-mumamo-mode)
  (autoload . smarty-html-mumamo-mode)
  (autoload . jsp-html-mumamo-mode)
  (autoload . eruby-mumamo-mode)
  (autoload . eruby-html-mumamo-mode)
  (autoload . perl-mumamo-mode)
  (autoload . cperl-mumamo-mode)
  (autoload . metapost-mumamo-mode)
  (autoload . laszlo-nxml-mumamo-mode)
  (autoload . csound-sgml-mumamo-mode)
  (autoload . noweb2-mumamo-mode)
  (autoload . asp-html-mumamo-mode)
  (autoload . org-mumamo-mode)
  (autoload . mako-html-mumamo-mode)
  (autoload . popup-menu-at-point)
  (autoload . define-toggle)
  (autoload . unfill-paragraph)
  (autoload . unfill-region)
  (autoload . unfill-individual-paragraphs)
  (autoload . major-or-multi-majorp)
  (autoload . multi-major-modep)
  (autoload . major-modep)
  (autoload . ourcomments-move-beginning-of-line)
  (autoload . ourcomments-move-end-of-line)
  (autoload . describe-key-and-map-briefly)
  wrap-to-fill-left-marg wrap-to-fill-left-marg-modes
  (autoload . wrap-to-fill-column-mode)
  better-fringes-mode
  (autoload . better-fringes-mode)
  (autoload . find-emacs-other-file)
  (autoload . ourcomments-ediff-files)
  (autoload . describe-command)
  (autoload . describe-custom-group)
  (autoload . describe-defstruct)
  (autoload . describe-symbol)
  (autoload . ourcomments-ido-buffer-other-window)
  (autoload . ourcomments-ido-buffer-other-frame)
  (autoload . ourcomments-ido-buffer-raise-frame)
  ourcomments-ido-ctrl-tab
  (autoload . emacs)
  (autoload . emacs-buffer-file)
  (autoload . emacs--debug-init)
  (autoload . emacs-Q)
  (autoload . emacs-Q-nxhtml)
  (autoload . grep-query-replace)
  (autoload . info-open-file)
  (autoload . rnc-mode)
  (autoload . search-form)
  sex-mode
  (autoload . sex-mode)
  tabkey2-mode
  (autoload . tabkey2-mode)
  (autoload . tyda-lookup-word)
  (autoload . udev-cedet-update)
  (autoload . udev-ecb-update)
  (autoload . udev-rinari-update)
  (autoload . viper-tutorial)
  (autoload . winsav-put-window-tree)
  winsav-save-mode
  (autoload . winsav-save-mode)
  (autoload . winsav-save-named-config)
  (autoload . winsav-switch-config)
  (autoload . resize-windows)
  (autoload . winsize-balance-siblings)
  (autoload . winsize-save-window-configuration)
  (autoload . nxhtmlmaint-start-byte-compilation)
  (autoload . nxhtmlmaint-byte-uncompile-all))
 ("/usr/share/emacs/23.0.93/lisp/international/encoded-kb.elc" encoded-kbd-mode-map encoded-kbd-iso2022-esc-map encoded-kbd-iso2022-esc-dollar-map encoded-kbd-iso2022-designation-map encoded-kbd-iso2022-designations encoded-kbd-iso2022-invocations
  (defun . encoded-kbd-last-key)
  (defun . encoded-kbd-iso2022-designation)
  (defun . encoded-kbd-iso2022-single-shift)
  (defun . encoded-kbd-self-insert-iso2022-7bit)
  (defun . encoded-kbd-self-insert-iso2022-8bit)
  (defun . encoded-kbd-self-insert-sjis)
  (defun . encoded-kbd-self-insert-big5)
  (defun . encoded-kbd-self-insert-ccl)
  (defun . encoded-kbd-decode-code-list)
  (defun . encoded-kbd-self-insert-charset)
  (defun . encoded-kbd-self-insert-utf-8)
  (defun . encoded-kbd-setup-keymap)
  (t . encoded-kbd-setup-display)
  (defun . encoded-kbd-setup-display)
  (provide . encoded-kb))
 ("/usr/share/emacs/23.0.93/leim/leim-list.el"
  (autoload . ucs-input-activate)
  (autoload . hangul-input-method-activate))
 ("/usr/share/emacs/23.0.93/lisp/subdirs.el")
 ("/usr/share/emacs-snapshot/site-lisp/subdirs.el")
 ("/usr/share/emacs/23.0.93/lisp/site-init.elc")
 ("/usr/share/emacs/23.0.93/lisp/tooltip.elc" tooltip-mode
  (defun . tooltip-mode)
  tooltip-delay tooltip-short-delay tooltip-recent-seconds tooltip-hide-delay tooltip-x-offset tooltip-y-offset tooltip-frame-parameters
  (defface . tooltip)
  tooltip-use-echo-area tooltip-functions tooltip-hook tooltip-timeout-id tooltip-last-mouse-motion-event tooltip-hide-time
  (defun . tooltip-event-buffer)
  (defun . tooltip-delay)
  (defun . tooltip-cancel-delayed-tip)
  (defun . tooltip-start-delayed-tip)
  (defun . tooltip-timeout)
  (defun . tooltip-set-param)
  (defun . tooltip-show)
  (defun . tooltip-hide)
  (defun . tooltip-identifier-from-point)
  (defun . tooltip-region-active-p)
  (defun . tooltip-expr-to-print)
  (defun . tooltip-process-prompt-regexp)
  (defun . tooltip-strip-prompt)
  tooltip-help-message tooltip-previous-message
  (defun . tooltip-show-help-non-mode)
  (defun . tooltip-show-help)
  (defun . tooltip-help-tips)
  (provide . tooltip))
 ("/usr/share/emacs/23.0.93/lisp/ediff-hook.elc" menu-bar-ediff-misc-menu menu-bar-epatch-menu menu-bar-ediff-merge-menu menu-bar-ediff-menu
  (provide . ediff-hook))
 ("/usr/share/emacs/23.0.93/lisp/vc-hooks.elc" vc-ignore-vc-files vc-master-templates vc-header-alist vc-ignore-dir-regexp vc-handled-backends vc-directory-exclusion-list vc-path vc-make-backup-files vc-follow-symlinks vc-display-status vc-consult-headers vc-keep-workfiles vc-mistrust-permissions
  (defun . vc-mistrust-permissions)
  vc-stay-local
  (defun . vc-stay-local-p)
  (defun . vc-mode)
  (defun . vc-error-occurred)
  vc-file-prop-obarray vc-touched-properties
  (defun . vc-file-setprop)
  (defun . vc-file-getprop)
  (defun . vc-file-clearprops)
  (defun . vc-make-backend-sym)
  (defun . vc-find-backend-function)
  (defun . vc-call-backend)
  (defun . vc-call)
  (defun . vc-parse-buffer)
  (defun . vc-insert-file)
  (defun . vc-find-root)
  (defun . vc-registered)
  (defun . vc-backend)
  (defun . vc-backend-subdirectory-name)
  (defun . vc-name)
  (defun . vc-checkout-model)
  (defun . vc-user-login-name)
  (defun . vc-state)
  (defun . vc-up-to-date-p)
  (defun . vc-default-state-heuristic)
  (defun . vc-workfile-unchanged-p)
  (defun . vc-default-workfile-unchanged-p)
  (defun . vc-working-revision)
  (defun . vc-workfile-version)
  (defun . vc-default-working-revision)
  (defun . vc-default-registered)
  (defun . vc-possible-master)
  (defun . vc-check-master-templates)
  (defun . vc-toggle-read-only)
  (defun . vc-default-make-version-backups-p)
  (defun . vc-version-backup-file-name)
  (defun . vc-delete-automatic-version-backups)
  (defun . vc-make-version-backup)
  (defun . vc-before-save)
  (defun . vc-after-save)
  vc-menu-entry vc-mode-line-map vc-mode-line-map
  (defun . vc-mode-line)
  (defun . vc-default-mode-line-string)
  (defun . vc-follow-link)
  (defun . vc-default-find-file-hook)
  (defun . vc-find-file-hook)
  (defun . vc-file-not-found-hook)
  (defun . vc-default-find-file-not-found-hook)
  (defun . vc-kill-buffer-hook)
  vc-prefix-map vc-menu-map
  (defun . vc-menu-map)
  (defun . vc-menu-map-filter)
  (defun . vc-default-extra-menu)
  (provide . vc-hooks))
 ("/usr/share/emacs/23.0.93/lisp/emacs-lisp/float-sup.elc" pi e degrees-to-radians radians-to-degrees
  (defun . degrees-to-radians)
  (defun . radians-to-degrees)
  (provide . lisp-float-type))
 ("/usr/share/emacs/23.0.93/lisp/term/x-win.elc"
  (require . frame)
  (require . mouse)
  (require . scroll-bar)
  (require . faces)
  (require . select)
  (require . menu-bar)
  (require . fontset)
  (require . x-dnd)
  (defun . x-handle-no-bitmap-icon)
  (defun . x-handle-parent-id)
  (defun . x-handle-smid)
  emacs-save-session-functions
  (defun . emacs-session-filename)
  (defun . emacs-session-save)
  (defun . emacs-session-restore)
  x-pointer-X-cursor x-pointer-X-cursor x-pointer-arrow x-pointer-arrow x-pointer-based-arrow-down x-pointer-based-arrow-down x-pointer-based-arrow-up x-pointer-based-arrow-up x-pointer-boat x-pointer-boat x-pointer-bogosity x-pointer-bogosity x-pointer-bottom-left-corner x-pointer-bottom-left-corner x-pointer-bottom-right-corner x-pointer-bottom-right-corner x-pointer-bottom-side x-pointer-bottom-side x-pointer-bottom-tee x-pointer-bottom-tee x-pointer-box-spiral x-pointer-box-spiral x-pointer-center-ptr x-pointer-center-ptr x-pointer-circle x-pointer-circle x-pointer-clock x-pointer-clock x-pointer-coffee-mug x-pointer-coffee-mug x-pointer-cross x-pointer-cross x-pointer-cross-reverse x-pointer-cross-reverse x-pointer-crosshair x-pointer-crosshair x-pointer-diamond-cross x-pointer-diamond-cross x-pointer-dot x-pointer-dot x-pointer-dotbox x-pointer-dotbox x-pointer-double-arrow x-pointer-double-arrow x-pointer-draft-large x-pointer-draft-large x-pointer-draft-small x-pointer-draft-small x-pointer-draped-box x-pointer-draped-box x-pointer-exchange x-pointer-exchange x-pointer-fleur x-pointer-fleur x-pointer-gobbler x-pointer-gobbler x-pointer-gumby x-pointer-gumby x-pointer-hand1 x-pointer-hand1 x-pointer-hand2 x-pointer-hand2 x-pointer-heart x-pointer-heart x-pointer-icon x-pointer-icon x-pointer-iron-cross x-pointer-iron-cross x-pointer-left-ptr x-pointer-left-ptr x-pointer-left-side x-pointer-left-side x-pointer-left-tee x-pointer-left-tee x-pointer-leftbutton x-pointer-leftbutton x-pointer-ll-angle x-pointer-ll-angle x-pointer-lr-angle x-pointer-lr-angle x-pointer-man x-pointer-man x-pointer-middlebutton x-pointer-middlebutton x-pointer-mouse x-pointer-mouse x-pointer-pencil x-pointer-pencil x-pointer-pirate x-pointer-pirate x-pointer-plus x-pointer-plus x-pointer-question-arrow x-pointer-question-arrow x-pointer-right-ptr x-pointer-right-ptr x-pointer-right-side x-pointer-right-side x-pointer-right-tee x-pointer-right-tee x-pointer-rightbutton x-pointer-rightbutton x-pointer-rtl-logo x-pointer-rtl-logo x-pointer-sailboat x-pointer-sailboat x-pointer-sb-down-arrow x-pointer-sb-down-arrow x-pointer-sb-h-double-arrow x-pointer-sb-h-double-arrow x-pointer-sb-left-arrow x-pointer-sb-left-arrow x-pointer-sb-right-arrow x-pointer-sb-right-arrow x-pointer-sb-up-arrow x-pointer-sb-up-arrow x-pointer-sb-v-double-arrow x-pointer-sb-v-double-arrow x-pointer-shuttle x-pointer-shuttle x-pointer-sizing x-pointer-sizing x-pointer-spider x-pointer-spider x-pointer-spraycan x-pointer-spraycan x-pointer-star x-pointer-star x-pointer-target x-pointer-target x-pointer-tcross x-pointer-tcross x-pointer-top-left-arrow x-pointer-top-left-arrow x-pointer-top-left-corner x-pointer-top-left-corner x-pointer-top-right-corner x-pointer-top-right-corner x-pointer-top-side x-pointer-top-side x-pointer-top-tee x-pointer-top-tee x-pointer-trek x-pointer-trek x-pointer-ul-angle x-pointer-ul-angle x-pointer-umbrella x-pointer-umbrella x-pointer-ur-angle x-pointer-ur-angle x-pointer-watch x-pointer-watch x-pointer-xterm x-pointer-xterm x-pointer-invisible x-pointer-invisible
  (defun . xw-defined-colors)
  x-alternatives-map
  (defun . x-setup-function-keys)
  (defun . vendor-specific-keysyms)
  x-last-selected-text-clipboard x-last-selected-text-primary x-last-selected-text-cut x-last-selected-text-cut-encoded x-last-cut-buffer-coding x-cut-buffer-max x-select-enable-clipboard x-select-enable-primary
  (defun . x-select-text)
  x-select-request-type
  (defun . x-selection-value)
  (defun . x-cut-buffer-or-selection-value)
  (defun . x-clipboard-yank)
  (defun . x-menu-bar-open)
  (defun . x-win-suspend-error)
  x-initialized
  (defun . x-initialize-window-system)
  x-gtk-stock-map icon-map-list x-gtk-stock-cache x-gtk-stock-cache
  (defun . x-gtk-map-stock)
  (provide . x-win))
 ("/usr/share/emacs/23.0.93/lisp/term/common-win.elc" x-command-line-resources
  (defun . x-handle-switch)
  (defun . x-handle-numeric-switch)
  (defun . x-handle-initial-switch)
  (defun . x-handle-iconic)
  (defun . x-handle-xrm-switch)
  (defun . x-handle-geometry)
  (defun . x-handle-name-switch)
  x-display-name
  (defun . x-handle-display)
  (defun . x-handle-args)
  x-colors)
 ("/usr/share/emacs/23.0.93/lisp/x-dnd.elc"
  (require . dnd)
  x-dnd-test-function x-dnd-types-alist x-dnd-known-types x-dnd-current-state x-dnd-empty-state
  (defun . x-dnd-init-frame)
  (defun . x-dnd-get-state-cons-for-frame)
  (defun . x-dnd-get-state-for-frame)
  (defun . x-dnd-default-test-function)
  (defun . x-dnd-current-type)
  (defun . x-dnd-forget-drop)
  (defun . x-dnd-maybe-call-test-function)
  (defun . x-dnd-save-state)
  (defun . x-dnd-handle-moz-url)
  (defun . x-dnd-insert-utf8-text)
  (defun . x-dnd-insert-utf16-text)
  (defun . x-dnd-insert-ctext)
  (defun . x-dnd-handle-uri-list)
  (defun . x-dnd-handle-file-name)
  (defun . x-dnd-choose-type)
  (defun . x-dnd-drop-data)
  (defun . x-dnd-handle-drag-n-drop-event)
  (defun . x-dnd-handle-old-kde)
  x-dnd-xdnd-to-action
  (defun . x-dnd-init-xdnd-for-frame)
  (defun . x-dnd-get-drop-width-height)
  (defun . x-dnd-get-drop-x-y)
  (defun . x-dnd-handle-xdnd)
  (defun . x-dnd-init-motif-for-frame)
  (defun . x-dnd-get-motif-value)
  (defun . x-dnd-motif-value-to-list)
  x-dnd-motif-message-types x-dnd-motif-to-action
  (defun . x-dnd-handle-motif)
  (provide . x-dnd))
 ("/usr/share/emacs/23.0.93/lisp/tool-bar.elc" tool-bar-mode
  (defun . tool-bar-mode)
  (t . toggle-tool-bar-mode-from-frame)
  (defun . toggle-tool-bar-mode-from-frame)
  tool-bar-map tool-bar-keymap-cache tool-bar-keymap-cache
  (defun . tool-bar-make-keymap)
  (defun . tool-bar-make-keymap-1)
  (t . tool-bar-add-item)
  (defun . tool-bar-add-item)
  (t . tool-bar-local-item)
  (defun . tool-bar-local-item)
  (t . tool-bar-add-item-from-menu)
  (defun . tool-bar-add-item-from-menu)
  (t . tool-bar-local-item-from-menu)
  (defun . tool-bar-local-item-from-menu)
  (defun . tool-bar-setup)
  (provide . tool-bar))
 ("/usr/share/emacs/23.0.93/lisp/mwheel.elc"
  (require . custom)
  (require . timer)
  (defun . mouse-wheel-change-button)
  mouse-wheel-down-button mouse-wheel-down-event mouse-wheel-up-button mouse-wheel-up-event mouse-wheel-click-button mouse-wheel-click-event mouse-wheel-inhibit-click-time mouse-wheel-scroll-amount mouse-wheel-progressive-speed mouse-wheel-follow-mouse
  (defun . mwheel-event-button)
  (defun . mwheel-event-window)
  mwheel-inhibit-click-event-timer
  (defun . mwheel-inhibit-click-timeout)
  (defun . mwheel-filter-click-events)
  (defun . mwheel-scroll)
  mouse-wheel-mode
  (t . mouse-wheel-mode)
  (defun . mouse-wheel-mode)
  (t . mwheel-install)
  (defun . mwheel-install)
  (provide . mwheel))
 ("/usr/share/emacs/23.0.93/lisp/dnd.elc" dnd-protocol-alist dnd-open-remote-file-function dnd-open-file-other-window
  (defun . dnd-handle-one-url)
  (defun . dnd-get-local-file-uri)
  (defun . dnd-get-local-file-name)
  (defun . dnd-open-local-file)
  (defun . dnd-open-remote-url)
  (defun . dnd-open-file)
  (defun . dnd-insert-text)
  (provide . dnd))
 ("/usr/share/emacs/23.0.93/lisp/international/fontset.elc"
  (defun . setup-default-fontset)
  (defun . create-default-fontset)
  (defun . set-font-encoding)
  x-font-name-charset-alist xlfd-regexp-family-subnum xlfd-regexp-family-subnum xlfd-regexp-weight-subnum xlfd-regexp-weight-subnum xlfd-regexp-slant-subnum xlfd-regexp-slant-subnum xlfd-regexp-swidth-subnum xlfd-regexp-swidth-subnum xlfd-regexp-adstyle-subnum xlfd-regexp-adstyle-subnum xlfd-regexp-pixelsize-subnum xlfd-regexp-pixelsize-subnum xlfd-regexp-pointsize-subnum xlfd-regexp-pointsize-subnum xlfd-regexp-resx-subnum xlfd-regexp-resx-subnum xlfd-regexp-resy-subnum xlfd-regexp-resy-subnum xlfd-regexp-spacing-subnum xlfd-regexp-spacing-subnum xlfd-regexp-avgwidth-subnum xlfd-regexp-avgwidth-subnum xlfd-regexp-registry-subnum xlfd-regexp-registry-subnum xlfd-tight-regexp xlfd-tight-regexp xlfd-style-regexp xlfd-style-regexp xlfd-regexp-numeric-subnums xlfd-regexp-numeric-subnums
  (defun . x-decompose-font-name)
  (defun . x-compose-font-name)
  (defun . x-must-resolve-font-name)
  (defun . x-complement-fontset-spec)
  (defun . fontset-name-p)
  (defun . generate-fontset-menu)
  (defun . fontset-plain-name)
  charset-script-alist
  (defun . create-fontset-from-fontset-spec)
  (defun . create-fontset-from-ascii-font)
  standard-fontset-spec
  (defun . create-fontset-from-x-resource)
  (provide . fontset))
 ("/usr/share/emacs/23.0.93/lisp/image.elc" image-type-header-regexps image-type-file-name-regexps image-type-auto-detectable image-load-path
  (defun . image-load-path-for-library)
  (defun . image-jpeg-p)
  (t . image-type-from-data)
  (defun . image-type-from-data)
  (t . image-type-from-buffer)
  (defun . image-type-from-buffer)
  (t . image-type-from-file-header)
  (defun . image-type-from-file-header)
  (t . image-type-from-file-name)
  (defun . image-type-from-file-name)
  (t . image-type)
  (defun . image-type)
  (t . image-type-available-p)
  (defun . image-type-available-p)
  (t . image-type-auto-detected-p)
  (defun . image-type-auto-detected-p)
  (t . create-image)
  (defun . create-image)
  (t . put-image)
  (defun . put-image)
  (t . insert-image)
  (defun . insert-image)
  (t . insert-sliced-image)
  (defun . insert-sliced-image)
  (t . remove-images)
  (defun . remove-images)
  (defun . image-search-load-path)
  (t . find-image)
  (defun . find-image)
  (t . defimage)
  (defun . defimage)
  (provide . image))
 ("/usr/share/emacs/23.0.93/lisp/fringe.elc"
  (defun . fringe-bitmap-p)
  fringe-mode-explicit
  (defun . set-fringe-mode-1)
  (defun . set-fringe-mode)
  (defun . fringe-mode-initialize)
  fringe-mode
  (defun . fringe-query-style)
  (defun . fringe-mode)
  (defun . set-fringe-style)
  (defun . fringe-columns)
  (provide . fringe))
 ("/usr/share/emacs/23.0.93/lisp/buff-menu.elc" Buffer-menu-use-header-line
  (defface . buffer-menu-buffer)
  Buffer-menu-buffer+size-width Buffer-menu-mode-width Buffer-menu-use-frame-buffer-list Buffer-menu-sort-column Buffer-menu-buffer-column Buffer-menu-buffer-column Buffer-menu-files-only Buffer-menu-mode-map Buffer-menu-mode-map Buffer-menu-mode-syntax-table Buffer-menu-mode-abbrev-table Buffer-menu-mode-abbrev-table
  (defun . Buffer-menu-mode)
  buffer-menu-mode-hook
  (defun . Buffer-menu-revert-function)
  (defun . Buffer-menu-toggle-files-only)
  (defun . Buffer-menu-buffer)
  (defun . buffer-menu)
  (defun . buffer-menu-other-window)
  (defun . Buffer-menu-no-header)
  (defun . Buffer-menu-mark)
  (defun . Buffer-menu-unmark)
  (defun . Buffer-menu-backup-unmark)
  (defun . Buffer-menu-delete)
  (defun . Buffer-menu-delete-backwards)
  (defun . Buffer-menu-save)
  (defun . Buffer-menu-not-modified)
  (defun . Buffer-menu-beginning)
  (defun . Buffer-menu-execute)
  (defun . Buffer-menu-select)
  (defun . Buffer-menu-marked-buffers)
  (defun . Buffer-menu-isearch-buffers)
  (defun . Buffer-menu-isearch-buffers-regexp)
  (defun . Buffer-menu-visit-tags-table)
  (defun . Buffer-menu-1-window)
  (defun . Buffer-menu-mouse-select)
  (defun . Buffer-menu-this-window)
  (defun . Buffer-menu-other-window)
  (defun . Buffer-menu-switch-other-window)
  (defun . Buffer-menu-2-window)
  (defun . Buffer-menu-toggle-read-only)
  (defun . Buffer-menu-bury)
  (defun . Buffer-menu-view)
  (defun . Buffer-menu-view-other-window)
  (defun . list-buffers)
  Buffer-menu-short-ellipsis Buffer-menu-short-ellipsis
  (defun . Buffer-menu-buffer+size)
  (defun . Buffer-menu-sort)
  (defun . Buffer-menu-sort-by-column)
  Buffer-menu-sort-button-map
  (defun . Buffer-menu-make-sort-button)
  (defun . list-buffers-noselect))
 ("/usr/share/emacs/23.0.93/lisp/replace.elc" case-replace query-replace-history query-replace-defaults query-replace-interactive query-replace-from-history-variable query-replace-to-history-variable query-replace-skip-read-only query-replace-show-replacement query-replace-highlight query-replace-lazy-highlight
  (defface . query-replace)
  (defun . query-replace-descr)
  (defun . query-replace-read-from)
  (defun . query-replace-compile-replacement)
  (defun . query-replace-read-to)
  (defun . query-replace-read-args)
  (defun . query-replace)
  (defun . query-replace-regexp)
  (defun . query-replace-regexp-eval)
  (defun . map-query-replace-regexp)
  (defun . replace-string)
  (defun . replace-regexp)
  regexp-history
  (defun . read-regexp)
  (defun . delete-non-matching-lines)
  (defun . delete-matching-lines)
  (defun . count-matches)
  (defun . keep-lines-read-args)
  (defun . keep-lines)
  (defun . flush-lines)
  (defun . how-many)
  occur-mode-map occur-revert-arguments occur-mode-hook occur-hook occur-mode-find-occurrence-hook
  (defun . occur-mode)
  (defun . occur-revert-function)
  (defun . occur-mode-find-occurrence)
  (defun . occur-mode-mouse-goto)
  (defun . occur-mode-goto-occurrence)
  (defun . occur-mode-goto-occurrence-other-window)
  (defun . occur-mode-display-occurrence)
  (defun . occur-find-match)
  (defun . occur-next)
  (defun . occur-prev)
  (defun . occur-next-error)
  (defface . match)
  list-matching-lines-default-context-lines
  (defun . list-matching-lines)
  list-matching-lines-face list-matching-lines-buffer-name-face occur-excluded-properties
  (defun . occur-accumulate-lines)
  (defun . occur-read-primary-args)
  (defun . occur-rename-buffer)
  (defun . occur)
  (defun . multi-occur)
  (defun . multi-occur-in-matching-buffers)
  (defun . occur-1)
  (defun . occur-engine-add-prefix)
  (defun . occur-engine)
  (defun . occur-context-lines)
  query-replace-help query-replace-map multi-query-replace-map
  (defun . replace-match-string-symbols)
  (defun . replace-eval-replacement)
  (defun . replace-quote)
  (defun . replace-loop-through-replacements)
  (defun . replace-match-data)
  (defun . replace-match-maybe-edit)
  replace-search-function replace-re-search-function
  (defun . perform-replace)
  replace-overlay
  (defun . replace-highlight)
  (defun . replace-dehighlight))
 ("/usr/share/emacs/23.0.93/lisp/textmodes/fill.elc" fill-individual-varying-indent colon-double-space fill-paragraph-function fill-paragraph-handle-comment enable-kinsoku
  (defun . set-fill-prefix)
  adaptive-fill-mode adaptive-fill-regexp adaptive-fill-first-line-regexp adaptive-fill-function fill-indent-according-to-mode
  (defun . current-fill-column)
  (defun . canonically-space-region)
  (defun . fill-common-string-prefix)
  (defun . fill-match-adaptive-prefix)
  (defun . fill-context-prefix)
  (defun . fill-single-word-nobreak-p)
  (defun . fill-french-nobreak-p)
  fill-nobreak-predicate fill-nobreak-invisible
  (defun . fill-nobreak-p)
  fill-find-break-point-function-table fill-nospace-between-words-table
  (defun . fill-find-break-point)
  (defun . fill-delete-prefix)
  (defun . fill-delete-newlines)
  (defun . fill-move-to-break-point)
  (defun . fill-text-properties-at)
  (defun . fill-newline)
  (defun . fill-indent-to-left-margin)
  (defun . fill-region-as-paragraph)
  (defun . skip-line-prefix)
  (defun . fill-minibuffer-function)
  fill-forward-paragraph-function
  (defun . fill-forward-paragraph)
  (defun . fill-paragraph)
  (defun . fill-comment-paragraph)
  (defun . fill-region)
  default-justification
  (defun . current-justification)
  (defun . set-justification)
  (defun . set-justification-none)
  (defun . set-justification-left)
  (defun . set-justification-right)
  (defun . set-justification-full)
  (defun . set-justification-center)
  (defun . justify-current-line)
  (defun . unjustify-current-line)
  (defun . unjustify-region)
  (defun . fill-nonuniform-paragraphs)
  (defun . fill-individual-paragraphs)
  (defun . fill-individual-paragraphs-prefix)
  (defun . fill-individual-paragraphs-citation))
 ("/usr/share/emacs/23.0.93/lisp/textmodes/text-mode.elc" text-mode-hook text-mode-variant text-mode-syntax-table text-mode-map text-mode-map text-mode-syntax-table text-mode-abbrev-table text-mode-abbrev-table
  (defun . text-mode)
  paragraph-indent-text-mode-map
  (defun . paragraph-indent-text-mode)
  (defun . paragraph-indent-minor-mode)
  (defun . indented-text-mode)
  (defun . text-mode-hook-identify)
  (defun . toggle-text-mode-auto-fill)
  (defun . center-paragraph)
  (defun . center-region)
  (defun . center-line))
 ("/usr/share/emacs/23.0.93/lisp/emacs-lisp/lisp-mode.elc" lisp-mode-abbrev-table lisp-mode-abbrev-table emacs-lisp-mode-syntax-table lisp-mode-syntax-table lisp-imenu-generic-expression lisp-doc-string-elt-property
  (defun . lisp-font-lock-syntactic-face-function)
  (defun . lisp-mode-variables)
  (defun . lisp-outline-level)
  lisp-mode-shared-map emacs-lisp-mode-map
  (defun . emacs-lisp-byte-compile)
  (defun . emacs-lisp-byte-compile-and-load)
  emacs-lisp-mode-hook lisp-mode-hook lisp-interaction-mode-hook
  (defun . emacs-lisp-mode)
  lisp-mode-map
  (defun . lisp-mode)
  (defun . lisp-find-tag-default)
  (defun . common-lisp-mode)
  (defun . lisp-eval-defun)
  lisp-interaction-mode-map lisp-interaction-mode-abbrev-table lisp-interaction-mode-map lisp-interaction-mode-syntax-table lisp-interaction-mode-abbrev-table
  (defun . lisp-interaction-mode)
  (defun . eval-print-last-sexp)
  (defun . last-sexp-setup-props)
  (defun . last-sexp-toggle-display)
  (defun . prin1-char)
  (defun . preceding-sexp)
  (defun . eval-last-sexp-1)
  (defun . eval-last-sexp-print-value)
  eval-last-sexp-fake-value
  (defun . eval-last-sexp)
  (defun . eval-defun-1)
  (defun . eval-defun-2)
  (defun . eval-defun)
  (defun . lisp-comment-indent)
  (defun . lisp-mode-auto-fill)
  lisp-indent-offset lisp-indent-function
  (defun . lisp-indent-line)
  (defun . calculate-lisp-indent)
  (defun . lisp-indent-function)
  lisp-body-indent
  (defun . lisp-indent-specform)
  (defun . lisp-indent-defform)
  (defun . indent-sexp)
  (defun . lisp-indent-region)
  (defun . indent-pp-sexp)
  emacs-lisp-docstring-fill-column
  (defun . lisp-fill-paragraph)
  (defun . indent-code-rigidly)
  (provide . lisp-mode))
 ("/usr/share/emacs/23.0.93/lisp/textmodes/paragraphs.elc" use-hard-newlines
  (defun . use-hard-newlines)
  paragraph-start paragraph-separate sentence-end-double-space sentence-end-without-period sentence-end-without-space sentence-end sentence-end-base
  (defun . sentence-end)
  page-delimiter paragraph-ignore-fill-prefix
  (defun . forward-paragraph)
  (defun . backward-paragraph)
  (defun . mark-paragraph)
  (defun . kill-paragraph)
  (defun . backward-kill-paragraph)
  (defun . transpose-paragraphs)
  (defun . start-of-paragraph-text)
  (defun . end-of-paragraph-text)
  (defun . forward-sentence)
  (defun . repunctuate-sentences)
  (defun . backward-sentence)
  (defun . kill-sentence)
  (defun . backward-kill-sentence)
  (defun . mark-end-of-sentence)
  (defun . transpose-sentences))
 ("/usr/share/emacs/23.0.93/lisp/register.elc" register-alist
  (defun . get-register)
  (defun . set-register)
  (defun . point-to-register)
  (defun . window-configuration-to-register)
  (defun . frame-configuration-to-register)
  (defun . register-to-point)
  (defun . jump-to-register)
  (defun . register-swap-out)
  (defun . number-to-register)
  (defun . increment-register)
  (defun . view-register)
  (defun . list-registers)
  (defun . describe-register-1)
  (defun . insert-register)
  (defun . copy-to-register)
  (defun . append-to-register)
  (defun . prepend-to-register)
  (defun . copy-rectangle-to-register)
  (provide . register))
 ("/usr/share/emacs/23.0.93/lisp/textmodes/page.elc"
  (defun . forward-page)
  (defun . backward-page)
  (defun . mark-page)
  (defun . narrow-to-page)
  (defun . count-lines-page)
  (defun . what-page)
  (provide . page))
 ("/usr/share/emacs/23.0.93/lisp/emacs-lisp/lisp.elc" defun-prompt-regexp parens-require-spaces forward-sexp-function
  (defun . forward-sexp)
  (defun . backward-sexp)
  (defun . mark-sexp)
  (defun . forward-list)
  (defun . backward-list)
  (defun . down-list)
  (defun . backward-up-list)
  (defun . up-list)
  (defun . kill-sexp)
  (defun . backward-kill-sexp)
  (defun . kill-backward-up-list)
  beginning-of-defun-function
  (defun . beginning-of-defun)
  (defun . beginning-of-defun-raw)
  end-of-defun-function
  (defun . buffer-end)
  (defun . end-of-defun)
  (defun . mark-defun)
  (defun . narrow-to-defun)
  insert-pair-alist
  (defun . insert-pair)
  (defun . insert-parentheses)
  (defun . delete-pair)
  (defun . raise-sexp)
  (defun . move-past-close-and-reindent)
  (defun . check-parens)
  (defun . field-complete)
  (defun . lisp-complete-symbol))
 ("/usr/share/emacs/23.0.93/lisp/paths.el"
  (defun . prune-directory-list)
  Info-default-directory-list news-directory news-path news-inews-program gnus-default-nntp-server gnus-nntp-service gnus-local-organization rmail-file-name rmail-spool-directory remote-shell-program term-file-prefix abbrev-file-name)
 ("/usr/share/emacs/23.0.93/lisp/menu-bar.elc" menu-bar-help-menu menu-bar-tools-menu global-buffers-menu-map menu-bar-options-menu menu-bar-edit-menu menu-bar-file-menu menu-bar-files-menu
  (defun . menu-find-file-existing)
  menu-bar-last-search-type
  (defun . nonincremental-repeat-search-forward)
  (defun . nonincremental-repeat-search-backward)
  (defun . nonincremental-search-forward)
  (defun . nonincremental-search-backward)
  (defun . nonincremental-re-search-forward)
  (defun . nonincremental-re-search-backward)
  menu-bar-search-menu menu-bar-i-search-menu menu-bar-replace-menu menu-bar-goto-menu
  (defun . menu-bar-next-tag-other-window)
  (defun . menu-bar-next-tag)
  yank-menu
  (defun . menu-bar-kill-ring-save)
  (defun . clipboard-yank)
  (defun . clipboard-kill-ring-save)
  (defun . clipboard-kill-region)
  (defun . menu-bar-enable-clipboard)
  menu-bar-custom-menu
  (defun . menu-bar-make-mm-toggle)
  (defun . menu-bar-make-toggle)
  (defun . menu-set-font)
  (defun . menu-bar-options-save)
  menu-bar-showhide-menu menu-bar-showhide-fringe-menu menu-bar-showhide-fringe-ind-menu
  (defun . menu-bar-showhide-fringe-ind-customize)
  (defun . menu-bar-showhide-fringe-ind-mixed)
  (defun . menu-bar-showhide-fringe-ind-box)
  (defun . menu-bar-showhide-fringe-ind-right)
  (defun . menu-bar-showhide-fringe-ind-left)
  (defun . menu-bar-showhide-fringe-ind-none)
  (defun . toggle-indicate-empty-lines)
  (defun . menu-bar-showhide-fringe-menu-customize)
  (defun . menu-bar-showhide-fringe-menu-customize-reset)
  (defun . menu-bar-showhide-fringe-menu-customize-right)
  (defun . menu-bar-showhide-fringe-menu-customize-left)
  (defun . menu-bar-showhide-fringe-menu-customize-disable)
  menu-bar-showhide-scroll-bar-menu
  (defun . menu-bar-right-scroll-bar)
  (defun . menu-bar-left-scroll-bar)
  (defun . menu-bar-no-scroll-bar)
  (defun . toggle-debug-on-quit)
  (defun . toggle-debug-on-error)
  (defun . toggle-save-place-globally)
  (defun . toggle-uniquify-buffer-names)
  (defun . toggle-case-fold-search)
  (defun . menu-bar-text-mode-auto-fill)
  menu-bar-line-wrapping-menu
  (defun . send-mail-item-name)
  (defun . read-mail-item-name)
  menu-bar-games-menu menu-bar-encryption-decryption-menu
  (defun . menu-bar-read-mail)
  menu-bar-describe-menu menu-bar-search-documentation-menu
  (defun . menu-bar-read-lispref)
  (defun . menu-bar-read-lispintro)
  (defun . search-emacs-glossary)
  (defun . emacs-index-search)
  (defun . elisp-index-search)
  (defun . debian-emacs-changelog)
  (defun . debian-emacs-news)
  (defun . debian-emacs-readme)
  menu-bar-manuals-menu
  (defun . menu-bar-help-extra-packages)
  (defun . help-with-tutorial-spec-language)
  (defun . menu-bar-menu-frame-live-and-visible-p)
  (defun . menu-bar-non-minibuffer-window-p)
  (defun . kill-this-buffer)
  (defun . kill-this-buffer-enabled-p)
  (defun . delete-frame-enabled-p)
  yank-menu-length
  (defun . menu-bar-update-yank-menu)
  (defun . menu-bar-select-yank)
  buffers-menu-max-size buffers-menu-buffer-name-length buffers-menu-show-directories buffers-menu-show-status list-buffers-directory
  (defun . menu-bar-select-buffer)
  (defun . menu-bar-select-frame)
  (defun . menu-bar-update-buffers-1)
  menu-bar-buffers-menu-command-entries
  (defun . menu-bar-update-buffers)
  menu-bar-mode
  (defun . menu-bar-mode)
  (defun . toggle-menu-bar-mode-from-frame)
  (defun . menu-bar-open)
  (provide . menu-bar))
 ("/usr/share/emacs/23.0.93/lisp/rfn-eshadow.elc" file-name-shadow-properties-custom-type file-name-shadow-properties-custom-type file-name-shadow-properties file-name-shadow-tty-properties
  (defface . file-name-shadow)
  rfn-eshadow-setup-minibuffer-hook rfn-eshadow-update-overlay-hook rfn-eshadow-frobbed-minibufs
  (defun . rfn-eshadow-setup-minibuffer)
  (defun . rfn-eshadow-sifn-equal)
  (defun . rfn-eshadow-update-overlay)
  file-name-shadow-mode
  (defun . file-name-shadow-mode)
  (provide . rfn-eshadow))
 ("/usr/share/emacs/23.0.93/lisp/isearch.elc" search-exit-option search-slow-window-lines search-slow-speed search-upper-case search-nonincremental-instead search-whitespace-regexp search-invisible isearch-hide-immediately isearch-resume-in-command-history isearch-mode-hook isearch-mode-end-hook isearch-mode-end-hook-quit isearch-message-function isearch-wrap-function isearch-push-state-function isearch-filter-predicate search-ring regexp-search-ring search-ring-max regexp-search-ring-max search-ring-yank-pointer regexp-search-ring-yank-pointer search-ring-update search-highlight
  (defface . isearch)
  isearch
  (defface . isearch-fail)
  isearch-lazy-highlight lazy-highlight-cleanup isearch-lazy-highlight-cleanup lazy-highlight-initial-delay isearch-lazy-highlight-initial-delay lazy-highlight-interval isearch-lazy-highlight-interval lazy-highlight-max-at-a-time isearch-lazy-highlight-max-at-a-time
  (defface . lazy-highlight)
  lazy-highlight-face isearch-lazy-highlight-face isearch-help-map
  (defun . isearch-help-for-help-internal-doc)
  (defun . isearch-help-for-help-internal)
  (defun . isearch-help-for-help)
  (defun . isearch-describe-bindings)
  (defun . isearch-describe-key)
  (defun . isearch-describe-mode)
  (defun . isearch-mode-help)
  isearch-mode-map minibuffer-local-isearch-map isearch-forward isearch-regexp isearch-word isearch-hidden isearch-cmds isearch-string isearch-message isearch-message-prefix-add isearch-message-suffix-add isearch-success isearch-error isearch-other-end isearch-wrapped isearch-barrier isearch-just-started isearch-start-hscroll isearch-case-fold-search isearch-last-case-fold-search isearch-original-minibuffer-message-timeout isearch-adjusted isearch-slow-terminal-mode isearch-small-window isearch-opoint isearch-window-configuration isearch-yank-flag isearch-op-fun isearch-recursive-edit isearch-nonincremental isearch-new-forward isearch-opened-overlays isearch-input-method-function isearch-input-method-local-p isearch-mode
  (defun . isearch-forward)
  (defun . isearch-forward-regexp)
  (defun . isearch-forward-word)
  (defun . isearch-backward)
  (defun . isearch-backward-regexp)
  (defun . isearch-mode)
  (defun . isearch-update)
  (defun . isearch-done)
  (defun . isearch-update-ring)
  (defun . isearch-string-state)
  (defun . isearch-message-state)
  (defun . isearch-point-state)
  (defun . isearch-success-state)
  (defun . isearch-forward-state)
  (defun . isearch-other-end-state)
  (defun . isearch-word-state)
  (defun . isearch-error-state)
  (defun . isearch-wrapped-state)
  (defun . isearch-barrier-state)
  (defun . isearch-case-fold-search-state)
  (defun . isearch-pop-fun-state)
  (defun . isearch-top-state)
  (defun . isearch-pop-state)
  (defun . isearch-push-state)
  (defun . isearch-exit)
  (defun . isearch-edit-string)
  (defun . isearch-nonincremental-exit-minibuffer)
  (defun . isearch-forward-exit-minibuffer)
  (defun . isearch-reverse-exit-minibuffer)
  (defun . isearch-cancel)
  (defun . isearch-abort)
  (defun . isearch-repeat)
  (defun . isearch-repeat-forward)
  (defun . isearch-repeat-backward)
  (defun . isearch-toggle-regexp)
  (defun . isearch-toggle-word)
  (defun . isearch-toggle-case-fold)
  (defun . isearch-query-replace)
  (defun . isearch-query-replace-regexp)
  (defun . isearch-occur)
  (defun . isearch-highlight-regexp)
  (defun . isearch-delete-char)
  (defun . isearch-del-char)
  (defun . isearch-yank-string)
  (defun . isearch-yank-kill)
  (defun . isearch-yank-x-selection)
  (defun . isearch-mouse-2)
  (defun . isearch-yank-internal)
  (defun . isearch-yank-char-in-minibuffer)
  (defun . isearch-yank-char)
  (defun . isearch-yank-word-or-char)
  (defun . isearch-yank-word)
  (defun . isearch-yank-line)
  (defun . isearch-search-and-update)
  (defun . isearch-backslash)
  (defun . isearch-fallback)
  (defun . isearch-unread-key-sequence)
  isearch-allow-scroll
  (defun . isearch-string-out-of-window)
  (defun . isearch-back-into-window)
  (defun . isearch-reread-key-sequence-naturally)
  (defun . isearch-lookup-scroll-key)
  (defun . isearch-other-control-char)
  (defun . isearch-other-meta-char)
  (defun . isearch-quote-char)
  (defun . isearch-return-char)
  (defun . isearch-printing-char)
  (defun . isearch-process-search-char)
  (defun . isearch-process-search-string)
  (defun . isearch-ring-adjust1)
  (defun . isearch-ring-adjust)
  (defun . isearch-ring-advance)
  (defun . isearch-ring-retreat)
  (defun . isearch-complete1)
  (defun . isearch-complete)
  (defun . isearch-complete-edit)
  (defun . isearch-message)
  (defun . isearch-message-prefix)
  (defun . isearch-message-suffix)
  isearch-search-fun-function
  (defun . isearch-search-fun)
  (defun . isearch-search-string)
  (defun . isearch-search)
  (defun . isearch-open-overlay-temporary)
  (defun . isearch-open-necessary-overlays)
  (defun . isearch-clean-overlays)
  (defun . isearch-intersects-p)
  (defun . isearch-close-unnecessary-overlays)
  (defun . isearch-range-invisible)
  (defun . isearch-filter-visible)
  (defun . isearch-no-upper-case-p)
  (defun . isearch-text-char-description)
  (defun . isearch-unread)
  isearch-overlay
  (defun . isearch-highlight)
  (defun . isearch-dehighlight)
  isearch-lazy-highlight-overlays isearch-lazy-highlight-wrapped isearch-lazy-highlight-start-limit isearch-lazy-highlight-end-limit isearch-lazy-highlight-start isearch-lazy-highlight-end isearch-lazy-highlight-timer isearch-lazy-highlight-last-string isearch-lazy-highlight-window isearch-lazy-highlight-window-start isearch-lazy-highlight-window-end isearch-lazy-highlight-case-fold-search isearch-lazy-highlight-regexp isearch-lazy-highlight-space-regexp
  (defun . lazy-highlight-cleanup)
  (defun . isearch-lazy-highlight-cleanup)
  (defun . isearch-lazy-highlight-new-loop)
  (defun . isearch-lazy-highlight-search)
  (defun . isearch-lazy-highlight-update)
  (defun . isearch-resume))
 ("/usr/share/emacs/23.0.93/lisp/emacs-lisp/timer.elc"
  (defun . timer--triggered)
  (defun . timer--high-seconds)
  (defun . timer--low-seconds)
  (defun . timer--usecs)
  (defun . timer--repeat-delay)
  (defun . timer--function)
  (defun . timer--args)
  (defun . timer--idle-delay)
  (defun . timer-create)
  (defun . timerp)
  (defun . timer--time)
  (defun . timer-set-time)
  (defun . timer-set-idle-time)
  (defun . timer-next-integral-multiple-of-time)
  (defun . timer-relative-time)
  (defun . timer--time-less-p)
  (defun . timer-inc-time)
  (defun . timer-set-time-with-usecs)
  (defun . timer-set-function)
  (defun . timer--activate)
  (defun . timer-activate)
  (defun . timer-activate-when-idle)
  (defun . disable-timeout)
  (defun . cancel-timer)
  (defun . cancel-timer-internal)
  (defun . cancel-function-timers)
  timer-event-last timer-event-last-1 timer-event-last-2 timer-max-repeats
  (defun . timer-until)
  (defun . timer-event-handler)
  (defun . timeout-event-p)
  (defun . run-at-time)
  (defun . run-with-timer)
  (defun . add-timeout)
  (defun . run-with-idle-timer)
  (defun . with-timeout-handler)
  with-timeout-timers
  (defun . with-timeout)
  (defun . with-timeout-suspend)
  (defun . with-timeout-unsuspend)
  (defun . y-or-n-p-with-timeout)
  timer-duration-words
  (defun . timer-duration)
  (provide . timer))
 ("/usr/share/emacs/23.0.93/lisp/select.elc" selection-coding-system next-selection-coding-system
  (defun . x-selection)
  (defun . x-get-selection)
  (defun . x-get-clipboard)
  (defun . x-set-selection)
  (defun . x-valid-simple-selection-p)
  (defun . x-get-cut-buffer)
  (defun . x-set-cut-buffer)
  (defun . xselect-convert-to-string)
  (defun . xselect-convert-to-length)
  (defun . xselect-convert-to-targets)
  (defun . xselect-convert-to-delete)
  (defun . xselect-convert-to-filename)
  (defun . xselect-convert-to-charpos)
  (defun . xselect-convert-to-lineno)
  (defun . xselect-convert-to-colno)
  (defun . xselect-convert-to-os)
  (defun . xselect-convert-to-host)
  (defun . xselect-convert-to-user)
  (defun . xselect-convert-to-class)
  (defun . xselect-convert-to-name)
  (defun . xselect-convert-to-integer)
  (defun . xselect-convert-to-atom)
  (defun . xselect-convert-to-identity)
  (provide . select))
 ("/usr/share/emacs/23.0.93/lisp/scroll-bar.elc"
  (require . mouse)
  (defun . scroll-bar-event-ratio)
  (defun . scroll-bar-scale)
  (defun . scroll-bar-columns)
  previous-scroll-bar-mode scroll-bar-mode-explicit
  (defun . set-scroll-bar-mode-1)
  (defun . set-scroll-bar-mode)
  scroll-bar-mode
  (defun . scroll-bar-mode)
  (defun . toggle-scroll-bar)
  (defun . toggle-horizontal-scroll-bar)
  (defun . scroll-bar-set-window-start)
  (defun . scroll-bar-drag-position)
  (defun . scroll-bar-maybe-set-window-start)
  (defun . scroll-bar-drag-1)
  (defun . scroll-bar-drag)
  (defun . scroll-bar-scroll-down)
  (defun . scroll-bar-scroll-up)
  (defun . scroll-bar-toolkit-scroll)
  (provide . scroll-bar))
 ("/usr/share/emacs/23.0.93/lisp/mouse.elc" mouse-yank-at-point mouse-drag-copy-region mouse-1-click-follows-link mouse-1-click-in-non-selected-windows
  (defun . popup-menu)
  (defun . minor-mode-menu-from-indicator)
  (defun . mouse-minor-mode-menu)
  (defun . mouse-menu-major-mode-map)
  (defun . mouse-menu-non-singleton)
  (defun . mouse-menu-bar-map)
  (defun . mouse-major-mode-menu)
  (defun . mouse-popup-menubar)
  (defun . mouse-popup-menubar-stuff)
  (defun . mouse-minibuffer-check)
  (defun . mouse-delete-window)
  (defun . mouse-select-window)
  (defun . mouse-tear-off-window)
  (defun . mouse-delete-other-windows)
  (defun . mouse-split-window-vertically)
  (defun . mouse-split-window-horizontally)
  (defun . mouse-drag-window-above)
  (defun . mouse-drag-move-window-bottom)
  (defun . mouse-drag-move-window-top)
  (defun . mouse-drag-mode-line-1)
  (defun . mouse-drag-mode-line)
  (defun . mouse-drag-header-line)
  (defun . mouse-drag-vertical-line-rightward-window)
  (defun . mouse-drag-vertical-line)
  (defun . mouse-set-point)
  mouse-last-region-beg mouse-last-region-end mouse-last-region-tick
  (defun . mouse-region-match)
  (defun . mouse-set-region)
  (defun . mouse-set-region-1)
  mouse-scroll-delay mouse-scroll-min-lines
  (defun . mouse-scroll-subr)
  mouse-drag-overlay mouse-drag-overlay mouse-selection-click-count mouse-selection-click-count-buffer
  (defun . mouse-drag-region)
  (defun . mouse-posn-property)
  (defun . mouse-on-link-p)
  (defun . mouse-fixup-help-message)
  (defun . mouse-move-drag-overlay)
  (defun . mouse-drag-track)
  (defun . mouse-skip-word)
  (defun . mouse-start-end)
  (defun . mouse-set-mark-fast)
  (defun . mouse-undouble-last-event)
  mouse-region-delete-keys
  (defun . mouse-show-mark)
  (defun . mouse-set-mark)
  (defun . mouse-kill)
  (defun . mouse-yank-at-click)
  (defun . mouse-yank-primary)
  (defun . mouse-kill-ring-save)
  mouse-save-then-kill-posn
  (defun . mouse-save-then-kill-delete-region)
  (defun . mouse-save-then-kill)
  mouse-secondary-overlay mouse-secondary-click-count mouse-secondary-start
  (defun . mouse-start-secondary)
  (defun . mouse-set-secondary)
  (defun . mouse-drag-secondary)
  (defun . mouse-yank-secondary)
  (defun . mouse-kill-secondary)
  (defun . mouse-secondary-save-then-kill)
  mouse-buffer-menu-maxlen mouse-buffer-menu-mode-mult mouse-buffer-menu-mode-groups
  (defun . mouse-buffer-menu)
  (defun . mouse-buffer-menu-alist)
  (defun . mouse-buffer-menu-split)
  (defun . mouse-choose-completion)
  (defun . font-menu-add-default)
  x-fixed-font-alist
  (defun . mouse-select-font)
  (defun . mouse-set-font)
  mouse-appearance-menu-map
  (defun . mouse-appearance-menu)
  (provide . mouse)
  (defun . mldrag-drag-mode-line)
  (defun . mldrag-drag-vertical-line)
  (provide . mldrag))
 ("/usr/share/emacs/23.0.93/lisp/jit-lock.elc" jit-lock-chunk-size jit-lock-stealth-time jit-lock-stealth-nice jit-lock-stealth-load jit-lock-stealth-verbose jit-lock-defer-contextually jit-lock-contextually jit-lock-context-time jit-lock-defer-time jit-lock-mode jit-lock-functions jit-lock-context-unfontify-pos jit-lock-stealth-timer jit-lock-stealth-repeat-timer jit-lock-context-timer jit-lock-defer-timer jit-lock-defer-buffers jit-lock-stealth-buffers
  (defun . jit-lock-mode)
  (defun . jit-lock-register)
  (defun . jit-lock-unregister)
  (defun . jit-lock-refontify)
  (defun . jit-lock-function)
  (defun . jit-lock-fontify-now)
  (defun . jit-lock-force-redisplay)
  (defun . jit-lock-stealth-chunk-start)
  (defun . jit-lock-stealth-fontify)
  (defun . jit-lock-deferred-fontify)
  (defun . jit-lock-context-fontify)
  jit-lock-after-change-extend-region-functions
  (defun . jit-lock-after-change)
  (provide . jit-lock))
 ("/usr/share/emacs/23.0.93/lisp/font-lock.elc"
  (require . syntax)
  font-lock-maximum-size font-lock-maximum-decoration font-lock-verbose font-lock-comment-face font-lock-comment-delimiter-face font-lock-string-face font-lock-doc-face font-lock-keyword-face font-lock-builtin-face font-lock-function-name-face font-lock-variable-name-face font-lock-type-face font-lock-constant-face font-lock-warning-face font-lock-negation-char-face font-lock-preprocessor-face font-lock-reference-face font-lock-keywords font-lock-keywords-alist font-lock-removed-keywords-alist font-lock-keywords-only font-lock-keywords-case-fold-search font-lock-syntactically-fontified font-lock-syntactic-face-function font-lock-syntactic-keywords font-lock-syntax-table font-lock-beginning-of-syntax-function font-lock-mark-block-function font-lock-fontify-buffer-function font-lock-unfontify-buffer-function font-lock-fontify-region-function font-lock-unfontify-region-function font-lock-inhibit-thing-lock font-lock-multiline font-lock-fontified
  (defun . font-lock-mode-internal)
  (defun . font-lock-add-keywords)
  (defun . font-lock-update-removed-keyword-alist)
  (defun . font-lock-remove-keywords)
  font-lock-support-mode
  (defun . font-lock-turn-on-thing-lock)
  (defun . font-lock-turn-off-thing-lock)
  (defun . font-lock-after-fontify-buffer)
  (defun . font-lock-after-unfontify-buffer)
  font-lock-extend-after-change-region-function
  (defun . font-lock-fontify-buffer)
  (defun . font-lock-unfontify-buffer)
  (defun . font-lock-fontify-region)
  (defun . font-lock-unfontify-region)
  (defun . font-lock-default-fontify-buffer)
  (defun . font-lock-default-unfontify-buffer)
  font-lock-dont-widen font-lock-extend-region-functions
  (defun . font-lock-extend-region-multiline)
  (defun . font-lock-extend-region-wholelines)
  (defun . font-lock-default-fontify-region)
  font-lock-extra-managed-props
  (defun . font-lock-default-unfontify-region)
  (defun . font-lock-after-change-function)
  (defun . font-lock-extend-jit-lock-region-after-change)
  (defun . font-lock-fontify-block)
  (defun . font-lock-prepend-text-property)
  (defun . font-lock-append-text-property)
  (defun . font-lock-fillin-text-property)
  (defun . font-lock-apply-syntactic-highlight)
  (defun . font-lock-fontify-syntactic-anchored-keywords)
  (defun . font-lock-fontify-syntactic-keywords-region)
  font-lock-comment-start-skip font-lock-comment-end-skip
  (defun . font-lock-fontify-syntactically-region)
  (defun . font-lock-apply-highlight)
  (defun . font-lock-fontify-anchored-keywords)
  (defun . font-lock-fontify-keywords-region)
  (defun . font-lock-compile-keywords)
  (defun . font-lock-compile-keyword)
  (defun . font-lock-eval-keywords)
  (defun . font-lock-value-in-major-mode)
  (defun . font-lock-choose-keywords)
  font-lock-set-defaults
  (defun . font-lock-set-defaults)
  (defface . font-lock-comment-face)
  (defface . font-lock-comment-delimiter-face)
  (defface . font-lock-string-face)
  (defface . font-lock-doc-face)
  (defface . font-lock-keyword-face)
  (defface . font-lock-builtin-face)
  (defface . font-lock-function-name-face)
  (defface . font-lock-variable-name-face)
  (defface . font-lock-type-face)
  (defface . font-lock-constant-face)
  (defface . font-lock-warning-face)
  (defface . font-lock-negation-char-face)
  (defface . font-lock-preprocessor-face)
  (defface . font-lock-regexp-grouping-backslash)
  (defface . font-lock-regexp-grouping-construct)
  (defun . font-lock-match-c-style-declaration-item-and-skip-to-next)
  cpp-font-lock-keywords-source-directives cpp-font-lock-keywords-source-depth cpp-font-lock-keywords lisp-font-lock-keywords-1 lisp-font-lock-keywords-2 lisp-font-lock-keywords
  (provide . font-lock))
 ("/usr/share/emacs/23.0.93/lisp/emacs-lisp/syntax.elc"
  (defun . syntax-ppss-depth)
  (defun . syntax-ppss-toplevel-pos)
  (defun . syntax-ppss-context)
  syntax-ppss-max-span syntax-begin-function syntax-ppss-cache syntax-ppss-last
  (defun . syntax-ppss-after-change-function)
  (defun . syntax-ppss-flush-cache)
  syntax-ppss-stats
  (defun . syntax-ppss-stats)
  (defun . syntax-ppss)
  (defun . syntax-ppss-debug)
  (provide . syntax))
 ("/usr/share/emacs/23.0.93/lisp/facemenu.elc" facemenu-keybindings facemenu-new-faces-at-end facemenu-unlisted-faces facemenu-listed-faces facemenu-face-menu
  (defun . facemenu-face-menu)
  facemenu-foreground-menu
  (defun . facemenu-foreground-menu)
  facemenu-background-menu
  (defun . facemenu-background-menu)
  (defun . facemenu-enable-faces-p)
  facemenu-special-menu
  (defun . facemenu-special-menu)
  facemenu-justification-menu
  (defun . facemenu-justification-menu)
  facemenu-indentation-menu
  (defun . facemenu-indentation-menu)
  facemenu-menu
  (defun . facemenu-menu)
  facemenu-keymap
  (defun . facemenu-keymap)
  facemenu-add-face-function facemenu-end-add-face facemenu-remove-face-function facemenu-color-alist
  (defun . facemenu-update)
  (defun . facemenu-set-face)
  (defun . facemenu-set-foreground)
  (defun . facemenu-set-background)
  (defun . facemenu-set-face-from-menu)
  (defun . facemenu-set-invisible)
  (defun . facemenu-set-intangible)
  (defun . facemenu-set-read-only)
  (defun . facemenu-remove-face-props)
  (defun . facemenu-remove-all)
  (defun . facemenu-remove-special)
  (defun . facemenu-read-color)
  (defun . list-colors-display)
  (defun . list-colors-print)
  (defun . list-colors-duplicates)
  (defun . facemenu-color-equal)
  (defun . facemenu-add-face)
  (defun . facemenu-active-faces)
  (defun . facemenu-add-new-face)
  (defun . facemenu-add-new-color)
  (defun . facemenu-complete-face-list)
  (defun . facemenu-iterate)
  (provide . facemenu))
 ("/usr/share/emacs/23.0.93/lisp/font-core.elc" font-lock-defaults font-lock-defaults-alist font-lock-function font-lock-mode
  (defun . font-lock-mode)
  (defun . font-lock-change-mode)
  (defun . font-lock-defontify)
  (defun . font-lock-default-function)
  (defun . turn-on-font-lock)
  font-lock-global-modes
  (defun . turn-on-font-lock-if-desired)
  font-lock-mode-major-mode global-font-lock-mode
  (defun . global-font-lock-mode)
  global-font-lock-mode-buffers
  (defun . global-font-lock-mode-enable-in-buffers)
  (defun . global-font-lock-mode-check-buffers)
  (defun . global-font-lock-mode-cmhh)
  (provide . font-core))
 ("/usr/share/emacs/23.0.93/lisp/term/tty-colors.elc" color-name-rgb-alist tty-standard-colors tty-color-mode-alist tty-defined-color-alist
  (defun . tty-color-alist)
  (defun . tty-modify-color-alist)
  (defun . tty-register-default-colors)
  (defun . tty-color-canonicalize)
  (defun . tty-color-define)
  (defun . tty-color-clear)
  (defun . tty-color-off-gray-diag)
  (defun . tty-color-approximate)
  (defun . tty-color-standard-values)
  (defun . tty-color-translate)
  (defun . tty-color-by-index)
  (defun . tty-color-values)
  (defun . tty-color-desc)
  (defun . tty-color-gray-shades))
 ("/usr/share/emacs/23.0.93/lisp/frame.elc" frame-creation-function-alist window-system-default-frame-alist initial-frame-alist minibuffer-frame-alist pop-up-frame-alist pop-up-frame-function special-display-frame-alist
  (defun . special-display-popup-frame)
  (defun . handle-delete-frame)
  frame-initial-frame frame-initial-geometry-arguments
  (defun . frame-initialize)
  frame-notice-user-settings
  (defun . frame-notice-user-settings)
  (defun . make-initial-minibuffer-frame)
  (defun . modify-all-frames-parameters)
  (defun . get-other-frame)
  (defun . next-multiframe-window)
  (defun . previous-multiframe-window)
  (defun . make-frame-on-display)
  (defun . close-display-connection)
  (defun . make-frame-command)
  before-make-frame-hook after-make-frame-functions after-setting-font-hook
  (defun . new-frame)
  frame-inherited-parameters
  (defun . make-frame)
  (defun . filtered-frame-list)
  (defun . minibuffer-frame-list)
  (defun . get-device-terminal)
  (defun . frames-on-display-list)
  (defun . framep-on-display)
  (defun . frame-remove-geometry-params)
  (defun . select-frame-set-input-focus)
  (defun . other-frame)
  (defun . iconify-or-deiconify-frame)
  (defun . suspend-frame)
  (defun . make-frame-names-alist)
  frame-name-history
  (defun . select-frame-by-name)
  (defun . current-frame-configuration)
  (defun . set-frame-configuration)
  (defun . frame-height)
  (defun . frame-width)
  (defun . set-default-font)
  (defun . set-frame-font)
  (defun . set-frame-parameter)
  (defun . set-background-color)
  (defun . set-foreground-color)
  (defun . set-cursor-color)
  (defun . set-mouse-color)
  (defun . set-border-color)
  (defun . auto-raise-mode)
  (defun . auto-lower-mode)
  (defun . set-frame-name)
  (defun . frame-current-scroll-bars)
  (defun . selected-terminal)
  (defun . display-mouse-p)
  (defun . display-popup-menus-p)
  (defun . display-graphic-p)
  (defun . display-images-p)
  (defun . display-multi-frame-p)
  (defun . display-multi-font-p)
  (defun . display-selections-p)
  (defun . display-screens)
  (defun . display-pixel-height)
  (defun . display-pixel-width)
  display-mm-dimensions-alist
  (defun . display-mm-height)
  (defun . display-mm-width)
  (defun . display-backing-store)
  (defun . display-save-under)
  (defun . display-planes)
  (defun . display-color-cells)
  (defun . display-visual-class)
  (defun . frame-geom-value-cons)
  (defun . frame-geom-spec-cons)
  (defun . screen-height)
  (defun . screen-width)
  (defun . set-screen-width)
  (defun . set-screen-height)
  (defun . delete-other-frames)
  delete-frame-hook show-trailing-whitespace auto-hscroll-mode automatic-hscrolling blink-cursor-delay blink-cursor-interval blink-cursor-idle-timer blink-cursor-timer
  (defun . blink-cursor-start)
  (defun . blink-cursor-timer-function)
  (defun . blink-cursor-end)
  blink-cursor-mode
  (defun . blink-cursor-mode)
  blink-cursor display-hourglass hourglass-delay cursor-in-non-selected-windows
  (provide . frame))
 ("/usr/share/emacs/23.0.93/lisp/window.elc" window-size-fixed
  (defun . save-selected-window)
  (defun . window-body-height)
  (defun . one-window-p)
  (defun . window-current-scroll-bars)
  (defun . walk-windows)
  (defun . get-window-with-predicate)
  (defun . some-window)
  (defun . get-buffer-window-list)
  (defun . minibuffer-window-active-p)
  (defun . count-windows)
  (defun . bw-get-tree)
  (defun . bw-get-tree-1)
  (defun . bw-find-tree-sub)
  (defun . bw-find-tree-sub-1)
  (defun . bw-l)
  (defun . bw-t)
  (defun . bw-r)
  (defun . bw-b)
  (defun . bw-dir)
  (defun . bw-eqdir)
  (defun . bw-refresh-edges)
  (defun . balance-windows)
  (defun . bw-adjust-window)
  (defun . bw-balance-sub)
  (defun . window-fixed-size-p)
  window-area-factor
  (defun . balance-windows-area)
  display-buffer-function special-display-buffer-names special-display-regexps
  (defun . special-display-p)
  special-display-function same-window-buffer-names same-window-regexps
  (defun . same-window-p)
  pop-up-frames display-buffer-reuse-frames pop-up-windows split-height-threshold split-width-threshold split-window-preferred-function
  (defun . window--splittable-p)
  (defun . window--try-to-split-window)
  (defun . window--frame-usable-p)
  even-window-heights
  (defun . window--even-window-heights)
  (defun . window--display-buffer-1)
  (defun . window--display-buffer-2)
  (defun . display-buffer)
  (defun . pop-to-buffer)
  split-window-keep-point
  (defun . split-window-vertically)
  (defun . split-window-save-restore-data)
  (defun . split-window-horizontally)
  (defun . set-window-text-height)
  (defun . enlarge-window-horizontally)
  (defun . shrink-window-horizontally)
  (defun . window-buffer-height)
  (defun . count-screen-lines)
  (defun . fit-window-to-buffer)
  (defun . window-safely-shrinkable-p)
  (defun . shrink-window-if-larger-than-buffer)
  (defun . kill-buffer-and-window)
  (defun . quit-window)
  recenter-last-op
  (defun . recenter-top-bottom)
  mouse-autoselect-window-timer mouse-autoselect-window-position mouse-autoselect-window-window mouse-autoselect-window-state
  (defun . mouse-autoselect-window-cancel)
  (defun . mouse-autoselect-window-start)
  (defun . mouse-autoselect-window-select)
  (defun . handle-select-window)
  (defun . delete-other-windows-vertically)
  (defun . truncated-partial-width-window-p))
 ("/usr/share/emacs/23.0.93/lisp/indent.elc" standard-indent indent-line-function tab-always-indent
  (defun . indent-according-to-mode)
  (defun . indent-for-tab-command)
  (defun . insert-tab)
  (defun . indent-rigidly)
  (defun . indent-line-to)
  (defun . current-left-margin)
  (defun . move-to-left-margin)
  (defun . indent-to-left-margin)
  (defun . delete-to-left-margin)
  (defun . set-left-margin)
  (defun . set-right-margin)
  (defun . alter-text-property)
  (defun . increase-left-margin)
  (defun . decrease-left-margin)
  (defun . increase-right-margin)
  (defun . decrease-right-margin)
  (defun . beginning-of-line-text)
  indent-region-function
  (defun . indent-region)
  (defun . indent-relative-maybe)
  (defun . indent-relative)
  tab-stop-list edit-tab-stops-map edit-tab-stops-buffer
  (defun . edit-tab-stops)
  (defun . edit-tab-stops-note-changes)
  (defun . tab-to-tab-stop)
  (defun . move-to-tab-stop))
 ("/usr/share/emacs/23.0.93/lisp/language/cham.el"
  (provide . cham))
 ("/usr/share/emacs/23.0.93/lisp/language/burmese.el")
 ("/usr/share/emacs/23.0.93/lisp/language/khmer.el")
 ("/usr/share/emacs/23.0.93/lisp/language/georgian.el"
  (provide . georgian))
 ("/usr/share/emacs/23.0.93/lisp/language/utf-8-lang.el"
  (provide . utf-8-lang))
 ("/usr/share/emacs/23.0.93/lisp/language/misc-lang.el"
  (provide . misc-lang))
 ("/usr/share/emacs/23.0.93/lisp/language/vietnamese.elc"
  (provide . vietnamese))
 ("/usr/share/emacs/23.0.93/lisp/language/tibetan.elc" tibetan-composable-pattern tibetan-consonant-transcription-alist tibetan-consonant-transcription-alist tibetan-vowel-transcription-alist tibetan-vowel-transcription-alist tibetan-modifier-transcription-alist tibetan-modifier-transcription-alist tibetan-precomposed-transcription-alist tibetan-precomposed-transcription-alist tibetan-subjoined-transcription-alist tibetan-subjoined-transcription-alist tibetan-base-to-subjoined-alist tibetan-base-to-subjoined-alist tibetan-composite-vowel-alist tibetan-composite-vowel-alist tibetan-precomposition-rule-alist tibetan-precomposition-rule-alist tibetan-regexp tibetan-precomposed-regexp tibetan-precomposition-rule-regexp tibetan-decomposed tibetan-decomposed-temp
  (provide . tibetan))
 ("/usr/share/emacs/23.0.93/lisp/language/thai.el"
  (provide . thai))
 ("/usr/share/emacs/23.0.93/lisp/language/tai-viet.el"
  (provide . tai-viet))
 ("/usr/share/emacs/23.0.93/lisp/language/lao.el"
  (provide . lao))
 ("/usr/share/emacs/23.0.93/lisp/language/korean.el"
  (provide . korean))
 ("/usr/share/emacs/23.0.93/lisp/language/japanese.el"
  (defun . compose-gstring-for-variation-glyph)
  (provide . japanese))
 ("/usr/share/emacs/23.0.93/lisp/international/eucjp-ms.el")
 ("/usr/share/emacs/23.0.93/lisp/international/cp51932.el")
 ("/usr/share/emacs/23.0.93/lisp/language/hebrew.el"
  (provide . hebrew))
 ("/usr/share/emacs/23.0.93/lisp/language/greek.el"
  (provide . greek))
 ("/usr/share/emacs/23.0.93/lisp/language/romanian.el"
  (provide . romanian))
 ("/usr/share/emacs/23.0.93/lisp/language/slovak.el"
  (provide . slovak))
 ("/usr/share/emacs/23.0.93/lisp/language/czech.el"
  (provide . czech))
 ("/usr/share/emacs/23.0.93/lisp/language/european.elc"
  (defun . turkish-case-conversion-enable)
  (defun . turkish-case-conversion-disable)
  (provide . european))
 ("/usr/share/emacs/23.0.93/lisp/language/ethiopic.elc" ccl-encode-ethio-font ccl-encode-ethio-font
  (provide . ethiopic))
 ("/usr/share/emacs/23.0.93/lisp/language/english.el")
 ("/usr/share/emacs/23.0.93/lisp/language/sinhala.el")
 ("/usr/share/emacs/23.0.93/lisp/language/indian.elc" devanagari-composable-pattern tamil-composable-pattern kannada-composable-pattern malayalam-composable-pattern
  (provide . indian))
 ("/usr/share/emacs/23.0.93/lisp/language/cyrillic.elc"
  (provide . cyrillic))
 ("/usr/share/emacs/23.0.93/lisp/language/chinese.elc"
  (provide . chinese))
 ("/usr/share/emacs/23.0.93/lisp/international/charprop.el")
 ("/usr/share/emacs/23.0.93/lisp/composite.elc" reference-point-alist
  (t . encode-composition-rule)
  (defun . encode-composition-rule)
  (defun . decode-composition-rule)
  (defun . encode-composition-components)
  (defun . decode-composition-components)
  (defun . compose-region)
  (defun . decompose-region)
  (defun . compose-string)
  (defun . decompose-string)
  (defun . compose-chars)
  (defun . find-composition)
  (defun . compose-chars-after)
  (defun . compose-last-chars)
  (defun . lgstring-header)
  (defun . lgstring-set-header)
  (defun . lgstring-font)
  (defun . lgstring-char)
  (defun . lgstring-char-len)
  (defun . lgstring-shaped-p)
  (defun . lgstring-set-id)
  (defun . lgstring-glyph)
  (defun . lgstring-glyph-len)
  (defun . lgstring-set-glyph)
  (defun . lglyph-from)
  (defun . lglyph-to)
  (defun . lglyph-char)
  (defun . lglyph-code)
  (defun . lglyph-width)
  (defun . lglyph-lbearing)
  (defun . lglyph-rbearing)
  (defun . lglyph-ascent)
  (defun . lglyph-descent)
  (defun . lglyph-adjustment)
  (defun . lglyph-set-from-to)
  (defun . lglyph-set-char)
  (defun . lglyph-set-code)
  (defun . lglyph-set-width)
  (defun . lglyph-set-adjustment)
  (defun . lglyph-copy)
  (defun . lgstring-insert-glyph)
  (defun . compose-glyph-string)
  (defun . compose-glyph-string-relative)
  (defun . compose-gstring-for-graphic)
  (defun . compose-gstring-for-terminal)
  (defun . auto-compose-chars)
  auto-composition-mode
  (t . auto-composition-mode)
  (defun . auto-composition-mode)
  (defun . turn-on-auto-composition-if-enabled)
  auto-composition-mode-major-mode global-auto-composition-mode
  (t . global-auto-composition-mode)
  (defun . global-auto-composition-mode)
  global-auto-composition-mode-buffers
  (defun . global-auto-composition-mode-enable-in-buffers)
  (defun . global-auto-composition-mode-check-buffers)
  (defun . global-auto-composition-mode-cmhh)
  (defun . toggle-auto-composition)
  (defun . decompose-composite-char))
 ("/usr/share/emacs/23.0.93/lisp/international/characters.elc" cjk-char-width-table
  (defun . use-cjk-char-width-table)
  (defun . use-default-char-width-table)
  (defun . build-unicode-category-table))
 ("/usr/share/emacs/23.0.93/lisp/case-table.elc"
  (defun . describe-buffer-case-table)
  (defun . get-upcase-table)
  (defun . copy-case-table)
  (defun . set-case-syntax-delims)
  (defun . set-case-syntax-pair)
  (defun . set-upcase-syntax)
  (defun . set-downcase-syntax)
  (defun . set-case-syntax)
  (provide . case-table))
 ("/usr/share/emacs/23.0.93/lisp/international/mule-cmds.elc" mule-keymap mule-menu-keymap describe-language-environment-map setup-language-environment-map set-coding-system-map help-xref-mule-regexp-template help-xref-mule-regexp-template
  (defun . coding-system-change-eol-conversion)
  (defun . coding-system-change-text-conversion)
  (defun . canonicalize-coding-system-name)
  (defun . coding-system-from-name)
  (defun . toggle-enable-multibyte-characters)
  (defun . view-hello-file)
  (defun . universal-coding-system-argument)
  (defun . set-default-coding-systems)
  (defun . prefer-coding-system)
  sort-coding-systems-predicate
  (defun . sort-coding-systems)
  (defun . find-coding-systems-region)
  (defun . find-coding-systems-string)
  (defun . find-coding-systems-for-charsets)
  (defun . find-multibyte-characters)
  (defun . search-unencodable-char)
  last-coding-system-specified select-safe-coding-system-accept-default-p
  (defun . select-safe-coding-system-interactively)
  (defun . select-safe-coding-system)
  (defun . select-message-coding-system)
  language-info-alist
  (defun . get-language-info)
  (defun . set-language-info)
  (defun . set-language-info-internal)
  (defun . set-language-info-alist)
  (defun . read-language-name)
  leim-list-file-name leim-list-header leim-list-entry-regexp update-leim-list-functions
  (defun . update-leim-list-file)
  current-input-method current-input-method-title default-input-method input-method-history inactivate-current-input-method-function describe-current-input-method-function input-method-alist
  (defun . register-input-method)
  (defun . read-input-method-name)
  (defun . activate-input-method)
  (defun . inactivate-input-method)
  (defun . set-input-method)
  toggle-input-method-active
  (defun . toggle-input-method)
  (defun . describe-input-method)
  (defun . describe-current-input-method)
  (defun . read-multilingual-string)
  input-method-verbose-flag input-method-highlight-flag input-method-activate-hook input-method-inactivate-hook input-method-after-insert-chunk-hook input-method-exit-on-first-char input-method-use-echo-area input-method-exit-on-invalid-key set-language-environment-hook exit-language-environment-hook
  (defun . setup-specified-language-environment)
  current-language-environment
  (defun . reset-language-environment)
  (defun . set-display-table-and-terminal-coding-system)
  (defun . set-language-environment)
  language-info-custom-alist
  (defun . standard-display-european-internal)
  (defun . set-language-environment-coding-systems)
  (defun . set-language-environment-input-method)
  (defun . set-language-environment-nonascii-translation)
  (defun . set-language-environment-charset)
  (defun . set-language-environment-unibyte)
  (defun . princ-list)
  (defun . describe-specified-language-support)
  (defun . describe-language-environment)
  locale-translation-file-name locale-language-names locale-charset-language-names locale-preferred-coding-systems
  (defun . locale-name-match)
  (defun . locale-charset-match-p)
  locale-charset-alist
  (defun . locale-charset-to-coding-system)
  (defun . locale-translate)
  (defun . set-locale-environment)
  char-code-property-alist
  (defun . define-char-code-property)
  char-code-property-table
  (defun . get-char-code-property)
  (defun . put-char-code-property)
  (defun . char-code-property-description)
  iso-2022-control-alist
  (defun . encoded-string-description)
  (defun . encode-coding-char)
  unify-8859-on-encoding-mode
  (defun . unify-8859-on-encoding-mode)
  unify-8859-on-decoding-mode
  (defun . unify-8859-on-decoding-mode)
  nonascii-insert-offset nonascii-translation-table ucs-names
  (defun . ucs-names)
  ucs-completions
  (defun . read-char-by-name)
  (defun . ucs-insert))
 ("/usr/share/emacs/23.0.93/lisp/epa-hook.elc"
  (defun . epa-file--file-name-regexp-set)
  epa-file-name-regexp epa-file-inhibit-auto-save epa-file-encrypt-to epa-file-handler epa-file-auto-mode-alist-entry
  (defun . epa-file-name-regexp-update)
  (defun . epa-file-find-file-hook)
  auto-encryption-mode
  (defun . auto-encryption-mode)
  (provide . epa-hook))
 ("/usr/share/emacs/23.0.93/lisp/jka-cmpr-hook.elc" jka-compr-added-to-file-coding-system-alist jka-compr-file-name-handler-entry jka-compr-compression-info-list--internal jka-compr-mode-alist-additions--internal jka-compr-load-suffixes--internal
  (defun . jka-compr-build-file-regexp)
  (defun . jka-compr-info-regexp)
  (defun . jka-compr-info-compress-message)
  (defun . jka-compr-info-compress-program)
  (defun . jka-compr-info-compress-args)
  (defun . jka-compr-info-uncompress-message)
  (defun . jka-compr-info-uncompress-program)
  (defun . jka-compr-info-uncompress-args)
  (defun . jka-compr-info-can-append)
  (defun . jka-compr-info-strip-extension)
  (defun . jka-compr-info-file-magic-bytes)
  (defun . jka-compr-get-compression-info)
  (defun . jka-compr-install)
  (defun . jka-compr-installed-p)
  (defun . jka-compr-update)
  (defun . jka-compr-set)
  jka-compr-compression-info-list jka-compr-mode-alist-additions jka-compr-load-suffixes auto-compression-mode
  (defun . auto-compression-mode)
  (defun . with-auto-compression-mode)
  (provide . jka-cmpr-hook))
 ("/usr/share/emacs/23.0.93/lisp/help.elc" help-window help-window-point-marker help-map help-button-cache
  (defun . help-quit)
  help-return-method
  (defun . print-help-return-message)
  (defun . help)
  (defun . help-for-help)
  (defun . help-for-help-internal-doc)
  (defun . help-for-help-internal)
  (defun . function-called-at-point)
  (defun . view-help-file)
  (defun . describe-distribution)
  (defun . describe-copying)
  (defun . describe-gnu-project)
  (defun . describe-project)
  (defun . describe-no-warranty)
  (defun . describe-prefix-bindings)
  (defun . view-emacs-news)
  (defun . view-emacs-todo)
  (defun . view-todo)
  (defun . view-echo-area-messages)
  (defun . view-order-manuals)
  (defun . view-emacs-FAQ)
  (defun . view-emacs-problems)
  (defun . view-emacs-debugging)
  (defun . view-external-packages)
  (defun . view-lossage)
  (defun . describe-bindings)
  (defun . describe-bindings-internal)
  (defun . where-is)
  (defun . help-key-description)
  (defun . describe-key-briefly)
  (defun . describe-key)
  (defun . describe-mode)
  (defun . describe-minor-mode)
  (defun . describe-minor-mode-completion-table-for-symbol)
  (defun . describe-minor-mode-from-symbol)
  (defun . describe-minor-mode-completion-table-for-indicator)
  (defun . describe-minor-mode-from-indicator)
  (defun . lookup-minor-mode-from-indicator)
  temp-buffer-max-height temp-buffer-resize-mode
  (defun . temp-buffer-resize-mode)
  (defun . resize-temp-buffer-window)
  help-window-select
  (defun . help-window-display-message)
  (defun . help-window-setup-finish)
  (defun . help-window-setup)
  (defun . with-help-window)
  (provide . help))
 ("/usr/share/emacs/23.0.93/lisp/simple.elc" idle-update-delay
  (defun . get-next-valid-buffer)
  (defun . last-buffer)
  (defun . next-buffer)
  (defun . previous-buffer)
  (defface . next-error)
  next-error-highlight next-error-highlight-no-select next-error-recenter next-error-hook next-error-highlight-timer next-error-overlay-arrow-position next-error-last-buffer next-error-function
  (defun . next-error-buffer-p)
  (defun . next-error-find-buffer)
  (defun . next-error)
  (defun . next-error-internal)
  (defun . goto-next-locus)
  (defun . next-match)
  (defun . previous-error)
  (defun . first-error)
  (defun . next-error-no-select)
  (defun . previous-error-no-select)
  next-error-follow-last-line next-error-follow-minor-mode
  (defun . next-error-follow-minor-mode)
  (defun . next-error-follow-mode-post-command-hook)
  (defun . fundamental-mode)
  special-mode-map special-mode-map special-mode-syntax-table special-mode-abbrev-table special-mode-abbrev-table
  (defun . special-mode)
  hard-newline
  (defun . newline)
  (defun . set-hard-newline-properties)
  (defun . open-line)
  (defun . split-line)
  (defun . delete-indentation)
  (defun . join-line)
  (defun . delete-blank-lines)
  (defun . delete-trailing-whitespace)
  (defun . newline-and-indent)
  (defun . reindent-then-newline-and-indent)
  (defun . quoted-insert)
  (defun . forward-to-indentation)
  (defun . backward-to-indentation)
  (defun . back-to-indentation)
  (defun . fixup-whitespace)
  (defun . delete-horizontal-space)
  (defun . just-one-space)
  (defun . beginning-of-buffer)
  (defun . end-of-buffer)
  (defun . mark-whole-buffer)
  (defun . goto-line)
  (defun . count-lines-region)
  (defun . what-line)
  (defun . count-lines)
  (defun . line-number-at-pos)
  (defun . what-cursor-position)
  read-expression-history minibuffer-completing-symbol minibuffer-default eval-expression-print-level eval-expression-print-length eval-expression-debug-on-error
  (defun . eval-expression-print-format)
  (defun . eval-expression)
  (defun . edit-and-eval-command)
  (defun . repeat-complex-command)
  minibuffer-history minibuffer-history-sexp-flag minibuffer-history-search-history minibuffer-text-before-history
  (defun . minibuffer-history-initialize)
  (defun . minibuffer-avoid-prompt)
  minibuffer-history-case-insensitive-variables
  (defun . previous-matching-history-element)
  (defun . next-matching-history-element)
  minibuffer-temporary-goal-position minibuffer-default-add-function minibuffer-default-add-done
  (defun . minibuffer-default-add-completions)
  (defun . goto-history-element)
  (defun . next-history-element)
  (defun . previous-history-element)
  (defun . next-complete-history-element)
  (defun . previous-complete-history-element)
  (defun . minibuffer-prompt-width)
  (defun . minibuffer-history-isearch-setup)
  (defun . minibuffer-history-isearch-end)
  (defun . minibuffer-history-isearch-search)
  (defun . minibuffer-history-isearch-message)
  (defun . minibuffer-history-isearch-wrap)
  (defun . minibuffer-history-isearch-push-state)
  (defun . minibuffer-history-isearch-pop-state)
  (defun . advertised-undo)
  undo-equiv-table undo-in-region undo-no-redo pending-undo-list
  (defun . undo)
  (defun . buffer-disable-undo)
  (defun . undo-only)
  undo-in-progress
  (defun . undo-more)
  (defun . undo-copy-list)
  (defun . undo-copy-list-1)
  (defun . undo-start)
  (defun . undo-make-selective-list)
  (defun . undo-elt-in-region)
  (defun . undo-elt-crosses-region)
  (defun . undo-delta)
  undo-ask-before-discard undo-extra-outer-limit
  (defun . undo-outer-limit-truncate)
  shell-command-history shell-command-switch shell-command-default-error-buffer
  (defun . minibuffer-default-add-shell-commands)
  (defun . minibuffer-complete-shell-command)
  minibuffer-local-shell-command-map
  (defun . read-shell-command)
  (defun . shell-command)
  (defun . display-message-or-buffer)
  (defun . shell-command-sentinel)
  (defun . shell-command-on-region)
  (defun . shell-command-to-string)
  (defun . process-file)
  (defun . start-file-process)
  universal-argument-map universal-argument-num-events overriding-map-is-bound saved-overriding-map
  (defun . ensure-overriding-map-is-bound)
  (defun . restore-overriding-map)
  (defun . universal-argument)
  (defun . universal-argument-more)
  (defun . negative-argument)
  (defun . digit-argument)
  (defun . universal-argument-minus)
  (defun . universal-argument-other-key)
  buffer-substring-filters
  (defun . filter-buffer-substring)
  interprogram-cut-function interprogram-paste-function kill-ring kill-ring-max kill-ring-yank-pointer
  (defun . kill-new)
  (defun . kill-append)
  yank-pop-change-selection
  (defun . current-kill)
  kill-read-only-ok
  (defun . kill-region)
  (defun . copy-region-as-kill)
  (defun . kill-ring-save)
  (defun . append-next-kill)
  yank-excluded-properties yank-window-start yank-undo-function
  (defun . yank-pop)
  (defun . yank)
  (defun . rotate-yank-pointer)
  (defun . kill-forward-chars)
  (defun . kill-backward-chars)
  backward-delete-char-untabify-method
  (defun . backward-delete-char-untabify)
  (defun . zap-to-char)
  kill-whole-line
  (defun . kill-line)
  (defun . kill-whole-line)
  (defun . forward-visible-line)
  (defun . end-of-visible-line)
  (defun . insert-buffer)
  (defun . append-to-buffer)
  (defun . prepend-to-buffer)
  (defun . copy-to-buffer)
  activate-mark-hook deactivate-mark-hook
  (defun . mark)
  (defun . deactivate-mark)
  (defun . activate-mark)
  select-active-regions
  (defun . set-mark)
  use-empty-active-region
  (defun . use-region-p)
  (defun . region-active-p)
  mark-ring mark-ring-max global-mark-ring global-mark-ring-max
  (defun . pop-to-mark-command)
  (defun . push-mark-command)
  set-mark-command-repeat-pop set-mark-default-inactive
  (defun . set-mark-command)
  (defun . push-mark)
  (defun . pop-mark)
  (defun . exchange-dot-and-mark)
  (defun . exchange-point-and-mark)
  shift-select-mode
  (defun . handle-shift-selection)
  transient-mark-mode
  (defun . transient-mark-mode)
  transient-mark-mode widen-automatically
  (defun . pop-global-mark)
  next-line-add-newlines
  (defun . next-line)
  (defun . previous-line)
  track-eol goal-column temporary-goal-column line-move-ignore-invisible line-move-visual
  (defun . line-move-partial)
  (defun . line-move)
  (defun . line-move-visual)
  (defun . line-move-1)
  (defun . line-move-finish)
  (defun . line-move-to-column)
  (defun . move-end-of-line)
  (defun . move-beginning-of-line)
  (defun . set-goal-column)
  (defun . end-of-visual-line)
  (defun . beginning-of-visual-line)
  (defun . kill-visual-line)
  (defun . next-logical-line)
  (defun . previous-logical-line)
  visual-line-mode-map visual-line-fringe-indicators visual-line--saved-state visual-line-mode
  (defun . visual-line-mode)
  (defun . turn-on-visual-line-mode)
  visual-line-mode-major-mode global-visual-line-mode
  (defun . global-visual-line-mode)
  global-visual-line-mode-buffers
  (defun . global-visual-line-mode-enable-in-buffers)
  (defun . global-visual-line-mode-check-buffers)
  (defun . global-visual-line-mode-cmhh)
  (defun . scroll-other-window-down)
  (defun . beginning-of-buffer-other-window)
  (defun . end-of-buffer-other-window)
  (defun . transpose-chars)
  (defun . transpose-words)
  (defun . transpose-sexps)
  (defun . transpose-lines)
  (defun . transpose-subr)
  (defun . transpose-subr-1)
  (defun . backward-word)
  (defun . mark-word)
  (defun . kill-word)
  (defun . backward-kill-word)
  (defun . current-word)
  fill-prefix auto-fill-inhibit-regexp
  (defun . do-auto-fill)
  comment-line-break-function
  (defun . default-indent-new-line)
  normal-auto-fill-function
  (defun . auto-fill-mode)
  (defun . auto-fill-function)
  (defun . turn-on-auto-fill)
  (defun . turn-off-auto-fill)
  (defun . set-fill-column)
  (defun . set-selective-display)
  indicate-unused-lines
  (defun . toggle-truncate-lines)
  (defun . toggle-word-wrap)
  overwrite-mode-textual overwrite-mode-binary
  (defun . overwrite-mode)
  (defun . binary-overwrite-mode)
  line-number-mode
  (defun . line-number-mode)
  column-number-mode
  (defun . column-number-mode)
  size-indication-mode
  (defun . size-indication-mode)
  blink-matching-paren blink-matching-paren-on-screen blink-matching-paren-distance blink-matching-delay blink-matching-paren-dont-ignore-comments
  (defun . blink-matching-open)
  (defun . keyboard-quit)
  buffer-quit-function
  (defun . keyboard-escape-quit)
  (defun . play-sound-file)
  read-mail-command mail-user-agent
  (defun . rfc822-goto-eoh)
  (defun . sendmail-user-agent-compose)
  (defun . compose-mail)
  (defun . compose-mail-other-window)
  (defun . compose-mail-other-frame)
  set-variable-value-history
  (defun . set-variable)
  completion-list-mode-map completion-reference-buffer completion-no-auto-exit completion-base-size
  (defun . delete-completion-window)
  (defun . previous-completion)
  (defun . next-completion)
  (defun . choose-completion)
  (defun . choose-completion-delete-max-match)
  choose-completion-string-functions
  (defun . choose-completion-string)
  completion-list-mode-map completion-list-mode-syntax-table completion-list-mode-abbrev-table completion-list-mode-abbrev-table
  (defun . completion-list-mode)
  (defun . completion-list-mode-finish)
  completion-show-help completion-root-regexp
  (defun . completion-setup-function)
  (defun . switch-to-completions)
  (defun . event-apply-alt-modifier)
  (defun . event-apply-super-modifier)
  (defun . event-apply-hyper-modifier)
  (defun . event-apply-shift-modifier)
  (defun . event-apply-control-modifier)
  (defun . event-apply-meta-modifier)
  (defun . event-apply-modifier)
  clone-buffer-hook clone-indirect-buffer-hook
  (defun . clone-process)
  (defun . clone-buffer)
  (defun . clone-indirect-buffer)
  (defun . clone-indirect-buffer-other-window)
  normal-erase-is-backspace
  (defun . normal-erase-is-backspace-setup-frame)
  (defun . normal-erase-is-backspace-mode)
  vis-mode-saved-buffer-invisibility-spec visible-mode
  (defun . visible-mode)
  (defun . apply-partially)
  bad-packages-alist
  (defun . bad-package-check)
  (provide . simple))
 ("/usr/share/emacs/23.0.93/lisp/abbrev.elc" only-global-abbrevs abbrev-mode
  (defun . abbrev-mode)
  abbrev-mode edit-abbrevs-map
  (defun . kill-all-abbrevs)
  (defun . copy-abbrev-table)
  (defun . insert-abbrevs)
  (defun . list-abbrevs)
  (defun . abbrev-table-name)
  (defun . prepare-abbrev-list-buffer)
  (defun . edit-abbrevs-mode)
  (defun . edit-abbrevs)
  (defun . edit-abbrevs-redefine)
  (defun . define-abbrevs)
  (defun . read-abbrev-file)
  (defun . quietly-read-abbrev-file)
  (defun . write-abbrev-file)
  (defun . add-mode-abbrev)
  (defun . add-global-abbrev)
  (defun . add-abbrev)
  (defun . inverse-add-mode-abbrev)
  (defun . inverse-add-global-abbrev)
  (defun . inverse-add-abbrev)
  (defun . abbrev-prefix-mark)
  (defun . expand-region-abbrevs)
  (defun . abbrev-table-get)
  (defun . abbrev-table-put)
  (defun . abbrev-get)
  (defun . abbrev-put)
  (defun . abbrev-with-wrapper-hook)
  abbrev-table-name-list
  (defun . make-abbrev-table)
  (defun . abbrev-table-p)
  global-abbrev-table abbrev-minor-mode-table-alist fundamental-mode-abbrev-table abbrevs-changed abbrev-all-caps abbrev-start-location abbrev-start-location-buffer last-abbrev last-abbrev-text last-abbrev-location pre-abbrev-expand-hook
  (defun . clear-abbrev-table)
  (defun . define-abbrev)
  (defun . abbrev--check-chars)
  (defun . define-global-abbrev)
  (defun . define-mode-abbrev)
  (defun . abbrev--active-tables)
  (defun . abbrev-symbol)
  (defun . abbrev-expansion)
  (defun . abbrev--before-point)
  (defun . abbrev-insert)
  abbrev-expand-functions
  (defun . expand-abbrev)
  (defun . unexpand-abbrev)
  (defun . abbrev--write)
  (defun . abbrev--describe)
  (defun . insert-abbrev-table-description)
  (defun . define-abbrev-table)
  (defun . abbrev-table-menu)
  (provide . abbrev))
 ("/usr/share/emacs/23.0.93/lisp/loaddefs.el" add-log-current-defun-function add-log-full-name add-log-mailing-address add-log-lisp-like-modes add-log-c-like-modes add-log-tex-like-modes ad-redefinition-action ad-default-compilation-action
  (defun . outlinify-sticky)
  (defun . ange-ftp-re-read-dir)
  (defun . command-apropos)
  autoarg-mode autoarg-kp-mode auto-insert-mode global-auto-revert-mode mouse-avoidance-mode display-battery-mode binhex-begin-line bookmark-map
  (defun . bookmark-locate)
  (defun . list-bookmarks)
  (defun . edit-bookmarks)
  menu-bar-bookmark-map
  (defun . menu-bar-bookmark-map)
  browse-url-browser-function browse-url-firefox-program browse-url-galeon-program
  (defun . list-yahrzeit-dates)
  calc-settings-file c-mode-syntax-table c++-mode-syntax-table objc-mode-syntax-table java-mode-syntax-table idl-mode-syntax-table pike-mode-syntax-table custom-print-functions comint-output-filter-functions comint-use-prompt-regexp-instead-of-fields comint-file-name-prefix compilation-mode-hook compilation-start-hook compilation-window-height compilation-process-setup-function compilation-buffer-name-function compilation-finish-function compilation-finish-functions compilation-ask-about-save compilation-search-path compile-command compilation-disable-input partial-completion-mode dynamic-completion-mode global-auto-composition-mode crisp-mode
  (defun . brief-mode)
  cua-mode custom-browse-sort-alphabetically custom-buffer-sort-alphabetically custom-menu-sort-alphabetically
  (defun . customize-variable)
  (defun . customize-variable-other-window)
  customize-package-emacs-version-alist
  (defun . customize-changed)
  custom-file global-cwarn-mode
  (defun . pending-delete-mode)
  delete-selection-mode desktop-save-mode desktop-locals-to-save desktop-save-buffer desktop-buffer-mode-handlers desktop-minor-mode-handlers diff-switches diff-command dired-listing-switches dired-chown-program dired-ls-F-marks-symlinks dired-trivial-filenames dired-keep-marker-rename dired-keep-marker-copy dired-keep-marker-hardlink dired-keep-marker-symlink dired-dwim-target dired-copy-preserve-time dired-directory dnd-protocol-alist
  (defun . zone-mode)
  (defun . easy-mmode-define-minor-mode)
  (defun . easy-mmode-define-global-mode)
  (defun . define-global-minor-mode)
  (defun . ebnf-despool)
  edebug-all-defs edebug-all-forms
  (defun . edebug-defun)
  (defun . ediff3)
  (defun . ediff)
  (defun . ebuffers)
  (defun . ebuffers3)
  (defun . edirs)
  (defun . edir-revisions)
  (defun . edirs3)
  (defun . edirs-merge)
  (defun . edir-merge-revisions)
  (defun . edir-merge-revisions-with-ancestor)
  (defun . edirs-merge-with-ancestor)
  (defun . ediff-merge)
  (defun . ediff-merge-with-ancestor)
  (defun . epatch)
  (defun . epatch-buffer)
  (defun . erevision)
  menu-bar-ediff-misc-menu menu-bar-epatch-menu menu-bar-ediff-merge-menu menu-bar-ediff-menu
  (defun . eregistry)
  edmacro-eight-bits eldoc-minor-mode-string eldoc-documentation-function menu-bar-emerge-menu epa-global-mail-mode
  (defun . epg-import-keys-from-server)
  (defun . erc-select)
  erc-ctcp-query-DCC-hook erc-track-minor-mode
  (defun . eshell-report-bug)
  tags-file-name tags-case-fold-search tags-table-list tags-compression-info-list tags-add-tables find-tag-hook find-tag-default-function eudc-tools-menu
  (defun . ffap)
  find-ls-option find-ls-subdir-switches find-grep-options find-name-arg ff-special-constructs
  (defun . ff-find-related-file)
  flyspell-mode
  (defun . gdba)
  gdb-enable-debug generic-mode-list
  (defun . gnus-batch-kill)
  (defun . gnus-set-sorted-intersection)
  (defun . goto-address-at-mouse)
  grep-window-height grep-command grep-find-command grep-setup-hook grep-regexp-alist grep-program find-program xargs-program grep-find-use-xargs grep-history grep-find-history
  (defun . find-grep)
  help-at-pt-display-when-idle three-step-help global-hi-lock-mode
  (defun . highlight-lines-matching-regexp)
  (defun . highlight-regexp)
  (defun . highlight-phrase)
  (defun . unhighlight-regexp)
  hs-special-modes-alist global-highlight-changes-mode hippie-expand-try-functions-list hippie-expand-verbose hippie-expand-dabbrev-skip-space hippie-expand-dabbrev-as-symbol hippie-expand-no-restriction hippie-expand-max-buffers hippie-expand-ignore-buffers hippie-expand-only-buffers global-hl-line-mode holiday-general-holidays general-holidays holiday-oriental-holidays oriental-holidays holiday-local-holidays local-holidays holiday-other-holidays other-holidays hebrew-holidays-1 hebrew-holidays-2 hebrew-holidays-3 hebrew-holidays-4 holiday-hebrew-holidays hebrew-holidays holiday-christian-holidays christian-holidays holiday-islamic-holidays islamic-holidays holiday-bahai-holidays bahai-holidays holiday-solar-holidays solar-holidays
  (defun . holiday-list)
  icomplete-mode ido-mode
  (defun . image-dired)
  (defun . tumme)
  image-file-name-extensions image-file-name-regexps auto-image-file-mode imenu-sort-function imenu-generic-expression imenu-create-index-function imenu-prev-index-position-function imenu-extract-index-name-function imenu-name-lookup-function imenu-default-goto-function inferior-lisp-filter-regexp inferior-lisp-program inferior-lisp-load-command inferior-lisp-prompt inferior-lisp-mode-hook
  (defun . run-lisp)
  Info-split-threshold ispell-personal-dictionary ispell-menu-map ispell-menu-xemacs ispell-menu-map-needed ispell-skip-region-alist ispell-tex-skip-alists ispell-html-skip-alists iswitchb-mode jka-compr-inhibit keypad-setup keypad-numlock-setup keypad-shifted-setup keypad-numlock-shifted-setup kkc-after-update-conversion-functions default-korean-keyboard
  (defun . landmark-repeat)
  (defun . landmark)
  latex-inputenc-coding-alist latin1-display latin1-display-ucs-per-lynx ledit-save-files ledit-go-to-lisp-string ledit-go-to-liszt-string linum-format global-linum-mode locate-ls-subdir-switches lpr-windows-system lpr-lp-system printer-name lpr-switches lpr-command ls-lisp-support-shell-wildcards
  (defun . phases-of-moon)
  mail-hist-keep-history mail-use-rfc822 mail-abbrevs-mode mail-complete-style
  (defun . manual-entry)
  minibuffer-depth-indicate-mode minibuffer-electric-default-mode multi-isearch-next-buffer-function multi-isearch-next-buffer-current-function multi-isearch-current-buffer mouse-sel-mode msb-mode
  (defun . string-to-list)
  (defun . string-to-vector)
  (defun . nested-alist-p)
  mouse-wheel-mode
  (defun . ipconfig)
  (defun . indent-for-comment)
  (defun . set-comment-column)
  (defun . kill-comment)
  (defun . indent-new-comment-line)
  comment-use-syntax comment-column comment-start comment-start-skip comment-end-skip comment-end comment-indent-function comment-insert-comment-function comment-style comment-padding comment-multi-line comment-auto-fill-only-comments disabled-command-function disabled-command-hook
  (defun . run-octave)
  (defun . org-publish-project)
  show-paren-mode pc-selection-mode
  (defun . pcomplete/gdb)
  (defun . pcomplete/pushd)
  (defun . pcomplete/time)
  cvs-dired-action cvs-dired-use-hook
  (defun . cvs-dired-noselect)
  cvs-global-menu
  (defun . edit-picture)
  (defun . run-prolog)
  bdf-directory-list ps-page-dimensions-database ps-paper-type ps-print-color-p quickurl-reread-hook-postfix
  (defun . irc)
  rcirc-track-minor-mode
  (defun . regexp-builder)
  recentf-mode
  (defun . close-rectangle)
  (defun . replace-rectangle)
  global-reveal-mode rmail-dont-reply-to-names rmail-default-dont-reply-to-names rmail-ignored-headers rmail-displayed-headers rmail-retry-ignored-headers rmail-highlighted-headers rmail-primary-inbox-list rmail-secondary-file-directory rmail-secondary-file-regexp rmail-mode-hook rmail-show-message-hook rmail-file-coding-system rmail-insert-mime-forwarded-message-function rmail-user-mail-address-regexp savehist-mode scroll-all-mode mail-from-style mail-specify-envelope-from mail-self-blind mail-interactive send-mail-function mail-header-separator mail-archive-file-name mail-default-reply-to mail-alias-file mail-personal-alias-file mail-setup-hook mail-aliases mail-yank-prefix mail-indentation-spaces mail-citation-hook mail-citation-prefix-regexp mail-signature mail-signature-file mail-default-directory mail-default-headers mail-bury-selects-summary mail-send-nonascii mail-mailing-lists sendmail-coding-system default-sendmail-coding-system server-mode
  (defun . xml-mode)
  (defun . shell-script-mode)
  shell-dumb-shell-regexp skeleton-filter-function
  (defun . speedbar)
  strokes-mode
  (defun . t-mouse-mode)
  gpm-mouse-mode table-cell-map-hook table-load-hook table-point-entered-cell-hook table-point-left-cell-hook tex-shell-file-name tex-directory tex-first-line-header-regexp tex-main-file tex-offer-save tex-run-command latex-run-command slitex-run-command tex-start-options tex-start-commands latex-block-names tex-bibtex-command tex-dvi-print-command tex-alt-dvi-print-command tex-dvi-view-command tex-show-queue-command tex-default-mode tex-open-quote tex-close-quote
  (defun . TeX-mode)
  (defun . plain-TeX-mode)
  (defun . LaTeX-mode)
  texinfo-open-quote texinfo-close-quote
  (defun . thumbs)
  display-time-day-and-date display-time-mode
  (defun . subtract-time)
  tpu-edt-mode
  (defun . tpu-edt)
  trace-buffer tramp-mode tramp-syntax tramp-file-name-regexp-unified tramp-file-name-regexp-separate tramp-file-name-regexp-url tramp-file-name-regexp tramp-root-regexp tramp-completion-file-name-regexp-unified tramp-completion-file-name-regexp-separate tramp-completion-file-name-regexp-url tramp-completion-file-name-regexp tramp-completion-file-name-handler-alist
  (defun . tramp-run-real-handler)
  (defun . tramp-completion-run-real-handler)
  (defun . tramp-completion-file-name-handler)
  (defun . tramp-register-file-name-handler)
  (defun . tramp-register-completion-file-name-handler)
  type-break-mode type-break-interval type-break-good-rest-interval type-break-good-break-interval type-break-keystroke-threshold url-handler-mode
  (defun . url-http-file-readable-p)
  url-https-default-port url-https-asynchronous-p
  (defun . url-https-expand-file-name)
  (defun . url-rlogin)
  (defun . url-telnet)
  (defun . url-tn3270)
  url-debug
  (defun . url-basepath)
  vc-checkout-hook vc-checkin-hook vc-before-checkin-hook
  (defun . vc-resolve-conflicts)
  (defun . vc-revert-buffer)
  (defun . vc-arch-registered)
  vc-bzr-admin-dirname vc-bzr-admin-checkout-format-file
  (defun . vc-bzr-registered)
  (defun . vc-cvs-registered)
  (defun . vc-git-registered)
  (defun . vc-hg-registered)
  vc-mtn-admin-dir vc-mtn-admin-format
  (defun . vc-mtn-registered)
  vc-rcs-master-templates
  (defun . vc-rcs-registered)
  vc-sccs-master-templates
  (defun . vc-sccs-registered)
  (defun . vc-sccs-search-project-dir)
  (defun . vc-svn-registered)
  view-remove-frame-by-deleting view-mode warning-prefix-function warning-series warning-fill-prefix warning-type-format
  (defun . which-func-mode)
  which-function-mode global-whitespace-mode global-whitespace-newline-mode widget-keymap winner-mode woman-locale xterm-mouse-mode
  (provide . loaddefs))
 ("/usr/share/emacs/23.0.93/lisp/startup.elc" command-line-processed initial-buffer-choice inhibit-startup-screen inhibit-splash-screen inhibit-startup-message startup-screen-inhibit-startup-screen inhibit-startup-echo-area-message inhibit-default-init inhibit-startup-buffer-menu command-switch-alist command-line-args-left argv command-line-functions command-line-default-directory command-line-x-option-alist command-line-ns-option-alist before-init-hook after-init-hook emacs-startup-hook term-setup-hook inhibit-startup-hooks keyboard-type window-setup-hook initial-major-mode init-file-user site-run-file mail-host-address user-mail-address auto-save-list-file-prefix emacs-quick-startup emacs-basic-display init-file-debug init-file-had-error normal-top-level-add-subdirs-inode-list debian-emacs-flavor no-blinking-cursor pure-space-overflow pure-space-overflow-message tutorial-directory
  (defun . normal-top-level-add-subdirs-to-load-path)
  (defun . normal-top-level-add-to-load-path)
  (defun . normal-top-level)
  (defun . precompute-menubar-bindings)
  tty-long-option-alist tty-long-option-alist tool-bar-images-pixel-height tool-bar-originally-present handle-args-function-alist window-system-initialization-alist
  (defun . tty-handle-args)
  (defun . command-line)
  initial-scratch-message fancy-startup-text fancy-about-text fancy-splash-image splash-screen-keymap
  (defun . fancy-splash-insert)
  (defun . fancy-splash-head)
  (defun . fancy-startup-tail)
  (defun . exit-splash-screen)
  (defun . fancy-startup-screen)
  (defun . fancy-about-screen)
  (defun . fancy-splash-frame)
  (defun . use-fancy-splash-screens-p)
  (defun . normal-splash-screen)
  (defun . normal-mouse-startup-screen)
  (defun . normal-no-mouse-startup-screen)
  (defun . normal-about-screen)
  (defun . startup-echo-area-message)
  (defun . display-startup-echo-area-message)
  (defun . display-startup-screen)
  (defun . display-about-screen)
  (defun . about-emacs)
  (defun . display-splash-screen)
  (defun . command-line-1)
  (defun . command-line-normalize-file-name))
 ("/usr/share/emacs/23.0.93/lisp/button.elc"
  (defface . button)
  button-map button-buffer-map
  (defun . button-category-symbol)
  (defun . define-button-type)
  (defun . button-type-put)
  (defun . button-type-get)
  (defun . button-type-subtype-p)
  (defun . button-start)
  (defun . button-end)
  (defun . button-get)
  (defun . button-put)
  (defun . button-activate)
  (defun . button-label)
  (defun . button-type)
  (defun . button-has-type-p)
  (defun . make-button)
  (defun . insert-button)
  (defun . make-text-button)
  (defun . insert-text-button)
  (defun . button-at)
  (defun . next-button)
  (defun . previous-button)
  (defun . push-button)
  (defun . forward-button)
  (defun . backward-button)
  (provide . button))
 ("/usr/share/emacs/23.0.93/lisp/minibuffer.elc"
  (defun . completion-boundaries)
  (defun . completion--some)
  (defun . complete-with-action)
  (defun . completion-table-dynamic)
  (defun . lazy-completion-table)
  (defun . completion-table-with-context)
  (defun . completion-table-with-terminator)
  (defun . completion-table-with-predicate)
  (defun . completion-table-in-turn)
  (defun . complete-in-turn)
  (defun . dynamic-completion-table)
  (defun . minibuffer-message)
  (defun . minibuffer-completion-contents)
  (defun . delete-minibuffer-contents)
  completion-auto-help completion-styles-alist completion-styles
  (defun . completion-try-completion)
  (defun . completion-all-completions)
  (defun . minibuffer--bitset)
  (defun . completion--do-completion)
  (defun . minibuffer-complete)
  completion-all-sorted-completions
  (defun . completion--flush-all-sorted-completions)
  (defun . completion-all-sorted-completions)
  (defun . minibuffer-force-complete)
  minibuffer-confirm-exit-commands
  (defun . minibuffer-complete-and-exit)
  (defun . completion--try-word-completion)
  (defun . minibuffer-complete-word)
  (defun . completion--insert-strings)
  completion-common-substring completion-setup-hook
  (defface . completions-first-difference)
  (defface . completions-common-part)
  (defun . completion-hilit-commonality)
  (defun . display-completion-list)
  (defun . minibuffer-completion-help)
  (defun . exit-minibuffer)
  (defun . self-insert-and-exit)
  minibuffer-local-must-match-filename-map
  (defun . minibuffer--double-dollars)
  (defun . completion--make-envvar-table)
  completion--embedded-envvar-re completion--embedded-envvar-re
  (defun . completion--embedded-envvar-table)
  (defun . completion--file-name-table)
  (defun . read-file-name-internal)
  read-file-name-function read-file-name-predicate read-file-name-completion-ignore-case insert-default-directory
  (defun . read-file-name)
  (defun . internal-complete-buffer-except)
  (defun . completion-emacs21-try-completion)
  (defun . completion-emacs21-all-completions)
  (defun . completion-emacs22-try-completion)
  (defun . completion-emacs22-all-completions)
  (defun . completion--merge-suffix)
  (defun . completion-basic-try-completion)
  (defun . completion-basic-all-completions)
  completion-pcm--delim-wild-regex
  (defun . completion-pcm--prepare-delim-re)
  completion-pcm-word-delimiters
  (defun . completion-pcm--pattern-trivial-p)
  (defun . completion-pcm--string->pattern)
  (defun . completion-pcm--pattern->regex)
  (defun . completion-pcm--all-completions)
  (defun . completion-pcm--hilit-commonality)
  (defun . completion-pcm--find-all-completions)
  (defun . completion-pcm-all-completions)
  (defun . completion-pcm--merge-completions)
  (defun . completion-pcm--pattern->string)
  (defun . completion-pcm--filename-try-filter)
  (defun . completion-pcm--merge-try)
  (defun . completion-pcm-try-completion)
  (provide . minibuffer))
 ("/usr/share/emacs/23.0.93/lisp/faces.elc" face-name-history face-font-selection-order face-font-family-alternatives face-font-registry-alternatives
  (defun . face-list)
  (defun . make-face)
  (defun . make-empty-face)
  (defun . copy-face)
  (defun . internal-find-face)
  (defun . internal-get-face)
  (defun . facep)
  (defun . check-face)
  (defun . face-id)
  (defun . face-equal)
  (defun . face-differs-from-default-p)
  (defun . face-nontrivial-p)
  face-x-resources
  (defun . set-face-attribute-from-resource)
  (defun . set-face-attributes-from-resources)
  (defun . make-face-x-resource-internal)
  (defun . face-name)
  (defun . face-all-attributes)
  (defun . face-attribute)
  (defun . face-attribute-merged-with)
  (defun . face-attribute-specified-or)
  (defun . face-foreground)
  (defun . face-background)
  (defun . face-stipple)
  (defun . face-background-pixmap)
  (defun . face-underline-p)
  (defun . face-inverse-video-p)
  (defun . face-bold-p)
  (defun . face-italic-p)
  (defun . face-documentation)
  (defun . set-face-documentation)
  (defun . face-doc-string)
  (defun . set-face-doc-string)
  (defun . set-face-attribute)
  (defun . make-face-bold)
  (defun . make-face-unbold)
  (defun . make-face-italic)
  (defun . make-face-unitalic)
  (defun . make-face-bold-italic)
  (defun . set-face-font)
  (defun . set-face-background)
  (defun . set-face-foreground)
  (defun . set-face-stipple)
  (defun . set-face-underline-p)
  (defun . set-face-underline)
  (defun . set-face-inverse-video-p)
  (defun . set-face-bold-p)
  (defun . set-face-italic-p)
  (defun . set-face-background-pixmap)
  (defun . invert-face)
  (defun . read-face-name)
  (defun . face-valid-attribute-values)
  face-attribute-name-alist
  (defun . face-descriptive-attribute-name)
  (defun . face-read-string)
  (defun . face-read-integer)
  (defun . read-face-attribute)
  (defun . read-face-font)
  (defun . read-all-face-attributes)
  (defun . modify-face)
  (defun . read-face-and-attribute)
  list-faces-sample-text
  (defun . list-faces-display)
  (defun . describe-face)
  (defun . face-attr-construct)
  (defun . face-spec-set-match-display)
  (defun . face-spec-choose)
  (defun . face-spec-reset-face)
  (defun . face-spec-set)
  (defun . face-spec-recalc)
  (defun . face-spec-set-2)
  (defun . face-attr-match-p)
  (defun . face-spec-match-p)
  (defun . face-default-spec)
  (defun . face-user-default-spec)
  (defun . defined-colors)
  (defun . x-defined-colors)
  (defun . color-defined-p)
  (defun . x-color-defined-p)
  (defun . color-values)
  (defun . x-color-values)
  (defun . display-color-p)
  (defun . x-display-color-p)
  (defun . display-grayscale-p)
  (defun . read-color)
  (defun . face-at-point)
  (defun . foreground-color-at-point)
  (defun . background-color-at-point)
  frame-background-mode inhibit-frame-set-background-mode
  (defun . frame-set-background-mode)
  (defun . x-handle-named-frame-geometry)
  (defun . x-handle-reverse-video)
  (defun . x-create-frame-with-faces)
  (defun . face-set-after-frame-default)
  (defun . tty-handle-reverse-video)
  (defun . tty-create-frame-with-faces)
  (defun . tty-find-type)
  (defun . tty-run-terminal-initialization)
  (defun . tty-set-up-initial-frame-faces)
  (defun . frame-update-faces)
  (defun . frame-update-face-colors)
  (defface . default)
  (defface . bold)
  (defface . italic)
  (defface . bold-italic)
  (defface . underline)
  (defface . fixed-pitch)
  (defface . variable-pitch)
  (defface . shadow)
  (defface . link)
  (defface . link-visited)
  (defface . highlight)
  (defface . region)
  (defface . secondary-selection)
  (defface . trailing-whitespace)
  (defface . escape-glyph)
  (defface . nobreak-space)
  (defface . mode-line)
  (defface . mode-line-inactive)
  (defface . mode-line-highlight)
  (defface . mode-line-emphasis)
  (defface . mode-line-buffer-id)
  (defface . header-line)
  (defface . vertical-border)
  (defface . minibuffer-prompt)
  (defface . fringe)
  (defface . scroll-bar)
  (defface . border)
  (defface . cursor)
  (defface . mouse)
  (defface . tool-bar)
  (defface . menu)
  x-font-regexp x-font-regexp-head x-font-regexp-weight x-font-regexp-slant x-font-regexp-weight-subnum x-font-regexp-weight-subnum x-font-regexp-slant-subnum x-font-regexp-slant-subnum x-font-regexp-swidth-subnum x-font-regexp-swidth-subnum x-font-regexp-adstyle-subnum x-font-regexp-adstyle-subnum
  (defun . x-resolve-font-name)
  (defun . x-frob-font-weight)
  (defun . x-frob-font-slant)
  (defun . internal-frob-font-weight)
  (defun . internal-frob-font-slant)
  (defun . x-make-font-bold)
  (defun . x-make-font-demibold)
  (defun . x-make-font-unbold)
  (defun . x-make-font-italic)
  (defun . x-make-font-oblique)
  (defun . x-make-font-unitalic)
  (defun . x-make-font-bold-italic)
  (provide . faces))
 ("/usr/share/emacs/23.0.93/lisp/cus-face.elc"
  (defun . custom-facep)
  (defun . custom-declare-face)
  custom-face-attributes
  (defun . custom-face-attributes-get)
  (defun . custom-set-faces)
  (defun . custom-theme-set-faces)
  (defun . custom-theme-reset-faces)
  (defun . custom-reset-faces)
  (provide . cus-face))
 ("/usr/share/emacs/23.0.93/lisp/files.elc" delete-auto-save-files directory-abbrev-alist make-backup-files backup-inhibited backup-by-copying backup-by-copying-when-linked backup-by-copying-when-mismatch backup-by-copying-when-privileged-mismatch backup-enable-predicate buffer-offer-save find-file-existing-other-name find-file-visit-truename revert-without-query buffer-file-number buffer-file-numbers-unique buffer-file-read-only temporary-file-directory small-temporary-file-directory null-device file-name-invalid-regexp file-precious-flag break-hardlink-on-save version-control dired-kept-versions delete-old-versions kept-old-versions kept-new-versions require-final-newline mode-require-final-newline auto-save-default auto-save-file-name-transforms save-abbrevs find-file-run-dired find-directory-functions find-file-not-found-functions find-file-not-found-hooks find-file-hooks find-file-hook write-file-functions write-file-hooks local-write-file-hooks write-contents-functions write-contents-hooks enable-local-variables local-enable-local-variables enable-local-eval view-read-only file-name-history
  (defun . ange-ftp-completion-hook-function)
  (defun . convert-standard-filename)
  (defun . read-directory-name)
  (defun . pwd)
  cd-path
  (defun . parse-colon-path)
  (defun . cd-absolute)
  (defun . cd)
  (defun . load-file)
  (defun . locate-file)
  (defun . locate-file-completion-table)
  (defun . locate-file-completion)
  locate-dominating-stop-dir-regexp
  (defun . locate-dominating-file)
  (defun . executable-find)
  (defun . load-library)
  (defun . file-remote-p)
  (defun . file-local-copy)
  (defun . file-truename)
  (defun . file-chase-links)
  (defun . make-temp-file)
  (defun . recode-file-name)
  confirm-nonexistent-file-or-buffer
  (defun . confirm-nonexistent-file-or-buffer)
  (defun . read-buffer-to-switch)
  (defun . switch-to-buffer-other-window)
  (defun . switch-to-buffer-other-frame)
  (defun . display-buffer-other-frame)
  find-file-default
  (defun . minibuffer-with-setup-hook)
  (defun . find-file-read-args)
  (defun . find-file)
  (defun . find-file-other-window)
  (defun . find-file-other-frame)
  (defun . find-file-existing)
  (defun . find-file-read-only)
  (defun . find-file-read-only-other-window)
  (defun . find-file-read-only-other-frame)
  (defun . find-alternate-file-other-window)
  (defun . find-alternate-file)
  (defun . create-file-buffer)
  (defun . generate-new-buffer)
  automount-dir-prefix abbreviated-home-dir
  (defun . abbreviate-file-name)
  find-file-not-true-dirname-list
  (defun . find-buffer-visiting)
  find-file-wildcards find-file-suppress-same-file-warnings large-file-warning-threshold
  (defun . abort-if-file-too-large)
  (defun . find-file-noselect)
  (defun . find-file-noselect-1)
  (defun . insert-file-contents-literally)
  (defun . insert-file-1)
  (defun . insert-file-literally)
  find-file-literally
  (defun . find-file-literally)
  after-find-file-from-revert-buffer
  (defun . after-find-file)
  (defun . report-errors)
  (defun . normal-mode)
  auto-mode-case-fold auto-mode-alist
  (defun . conf-mode-maybe)
  interpreter-mode-alist inhibit-first-line-modes-regexps inhibit-first-line-modes-suffixes auto-mode-interpreter-regexp magic-mode-alist magic-fallback-mode-alist magic-mode-regexp-match-limit
  (defun . set-auto-mode)
  (defun . set-auto-mode-0)
  (defun . set-auto-mode-1)
  ignored-local-variables hack-local-variables-hook safe-local-variable-values safe-local-eval-forms file-local-variables-alist before-hack-local-variables-hook
  (defun . hack-local-variables-confirm)
  (defun . hack-local-variables-prop-line)
  (defun . hack-local-variables-filter)
  (defun . hack-local-variables)
  (defun . safe-local-variable-p)
  (defun . risky-local-variable-p)
  (defun . hack-one-local-variable-quotep)
  (defun . hack-one-local-variable-constantp)
  (defun . hack-one-local-variable-eval-safep)
  (defun . hack-one-local-variable)
  dir-locals-class-alist dir-locals-directory-cache
  (defun . dir-locals-get-class-variables)
  (defun . dir-locals-collect-mode-variables)
  (defun . dir-locals-collect-variables)
  (defun . dir-locals-set-directory-class)
  (defun . dir-locals-set-class-variables)
  dir-locals-file
  (defun . dir-locals-find-file)
  (defun . dir-locals-read-from-file)
  (defun . hack-dir-local-variables)
  change-major-mode-with-file-name
  (defun . set-visited-file-name)
  (defun . write-file)
  (defun . backup-buffer)
  (defun . backup-buffer-copy)
  (defun . file-name-sans-versions)
  (defun . file-ownership-preserved-p)
  (defun . file-name-sans-extension)
  (defun . file-name-extension)
  make-backup-file-name-function backup-directory-alist
  (defun . normal-backup-enable-predicate)
  (defun . make-backup-file-name)
  (defun . make-backup-file-name-1)
  (defun . backup-file-name-p)
  (defun . backup-extract-version)
  (defun . find-backup-file-name)
  (defun . file-nlinks)
  (defun . file-relative-name)
  (defun . save-buffer)
  (defun . delete-auto-save-file-if-necessary)
  auto-save-hook before-save-hook after-save-hook save-buffer-coding-system
  (defun . basic-save-buffer)
  (defun . basic-save-buffer-1)
  (defun . basic-save-buffer-2)
  (defun . diff-buffer-with-file)
  save-some-buffers-action-alist buffer-save-without-query
  (defun . save-some-buffers)
  (defun . not-modified)
  (defun . toggle-read-only)
  (defun . insert-file)
  (defun . append-to-file)
  (defun . file-newest-backup)
  (defun . rename-uniquely)
  (defun . make-directory)
  revert-buffer-function revert-buffer-insert-file-contents-function buffer-stale-function before-revert-hook after-revert-hook
  (defun . revert-buffer)
  (defun . recover-this-file)
  (defun . recover-file)
  (defun . recover-session)
  (defun . recover-session-finish)
  (defun . kill-buffer-ask)
  (defun . kill-some-buffers)
  (defun . kill-matching-buffers)
  (defun . auto-save-mode)
  (defun . rename-auto-save-file)
  (defun . make-auto-save-file-name)
  (defun . auto-save-file-name-p)
  (defun . wildcard-to-regexp)
  list-directory-brief-switches list-directory-verbose-switches
  (defun . file-expand-wildcards)
  (defun . list-directory)
  (defun . shell-quote-wildcard-pattern)
  insert-directory-program directory-free-space-program directory-free-space-args
  (defun . get-free-disk-space)
  directory-listing-before-filename-regexp insert-directory-ls-version
  (defun . insert-directory)
  (defun . insert-directory-adj-pos)
  (defun . insert-directory-safely)
  kill-emacs-query-functions confirm-kill-emacs
  (defun . save-buffers-kill-emacs)
  (defun . save-buffers-kill-terminal)
  (defun . file-name-non-special)
  (defun . file-modes-char-to-who)
  (defun . file-modes-char-to-right)
  (defun . file-modes-rights-to-number)
  (defun . file-modes-symbolic-to-number)
  (defun . read-file-modes)
  trash-directory
  (defun . move-file-to-trash))
 ("/usr/share/emacs/23.0.93/lisp/bindings.elc"
  (defun . make-mode-line-mouse-map)
  (defun . mode-line-toggle-read-only)
  (defun . mode-line-toggle-modified)
  (defun . mode-line-widen)
  (defun . mode-line-abbrev-mode)
  (defun . mode-line-auto-fill-mode)
  mode-line-input-method-map mode-line-coding-system-map
  (defun . mode-line-change-eol)
  mode-line-eol-desc-cache
  (defun . mode-line-eol-desc)
  mode-line-client mode-line-mule-info
  (defun . mode-line-frame-control)
  mode-line-frame-identification mode-line-process mode-line-modified mode-line-remote mode-line-position mode-line-modes mode-line-mode-menu mode-line-major-mode-keymap mode-line-minor-mode-keymap mode-line-column-line-number-mode-map mode-line-buffer-identification-keymap
  (defun . propertized-buffer-identification)
  mode-line-buffer-identification
  (defun . unbury-buffer)
  (defun . mode-line-unbury-buffer)
  (defun . mode-line-bury-buffer)
  (defun . mode-line-other-buffer)
  (defun . mode-line-next-buffer)
  (defun . mode-line-previous-buffer)
  (defun . bound-and-true-p)
  (defun . mode-line-minor-mode-help)
  minor-mode-alist
  (provide . base64)
  (provide . md5)
  (provide . overlay)
  (provide . text-properties)
  (defun . complete-symbol)
  narrow-map goto-map search-map
  (defun . mode-specific-command-prefix)
  mode-specific-map ctl-x-r-map abbrev-map)
 ("/usr/share/emacs/23.0.93/lisp/format.elc" format-alist
  (defun . format-encode-run-method)
  (defun . format-decode-run-method)
  (defun . format-annotate-function)
  (defun . format-decode)
  (defun . format-decode-buffer)
  (defun . format-decode-region)
  (defun . format-encode-buffer)
  (defun . format-encode-region)
  (defun . format-write-file)
  (defun . format-find-file)
  (defun . format-insert-file)
  (defun . format-read)
  (defun . format-replace-strings)
  (defun . format-delq-cons)
  (defun . format-make-relatively-unique)
  (defun . format-common-tail)
  (defun . format-proper-list-p)
  (defun . format-reorder)
  (defun . format-deannotate-region)
  (defun . format-subtract-regions)
  (defun . format-property-increment-region)
  (defun . format-insert-annotations)
  (defun . format-annotate-value)
  (defun . format-annotate-region)
  (defun . format-annotate-location)
  (defun . format-annotate-single-property-change)
  (defun . format-annotate-atomic-property-change)
  (provide . format))
 ("/usr/share/emacs/23.0.93/lisp/env.elc" read-envvar-name-history
  (defun . read-envvar-name)
  setenv-history
  (defun . substitute-env-vars)
  (defun . setenv-internal)
  (defun . setenv)
  (defun . getenv)
  (provide . env))
 ("/usr/share/emacs/23.0.93/lisp/international/mule-conf.el"
  (defun . define-iso-single-byte-charset)
  (provide . code-pages))
 ("/usr/share/emacs/23.0.93/lisp/international/mule.elc" mule-version mule-version-date private-char-area-1-min private-char-area-1-max private-char-area-2-min private-char-area-2-max emacs-mule-charset-table
  (defun . convert-define-charset-argument)
  (defun . define-charset)
  (defun . load-with-code-conversion)
  (defun . charset-info)
  (defun . charset-id)
  (defun . charset-bytes)
  (defun . get-charset-property)
  (defun . put-charset-property)
  (defun . charset-description)
  (defun . charset-dimension)
  (defun . charset-chars)
  (defun . charset-iso-final-char)
  (defun . charset-short-name)
  (defun . charset-long-name)
  (defun . charset-list)
  (defun . char-valid-p)
  (defun . generic-char-p)
  (defun . make-char-internal)
  ascii-case-table coding-system-iso-2022-flags
  (defun . define-coding-system)
  (defun . coding-system-doc-string)
  (defun . coding-system-mnemonic)
  (defun . coding-system-type)
  (defun . coding-system-charset-list)
  (defun . coding-system-category)
  (defun . coding-system-get)
  (defun . coding-system-eol-type-mnemonic)
  (defun . coding-system-lessp)
  (defun . coding-system-equal)
  (defun . add-to-coding-system-list)
  (defun . coding-system-list)
  char-coding-system-table
  (defun . transform-make-coding-system-args)
  (defun . make-coding-system)
  (defun . merge-coding-systems)
  (defun . autoload-coding-system)
  buffer-file-coding-system-explicit
  (defun . set-buffer-file-coding-system)
  (defun . revert-buffer-with-coding-system)
  (defun . set-file-name-coding-system)
  default-terminal-coding-system
  (defun . set-terminal-coding-system)
  default-keyboard-coding-system
  (defun . set-keyboard-coding-system)
  keyboard-coding-system
  (defun . set-buffer-process-coding-system)
  (defun . set-clipboard-coding-system)
  (defun . set-selection-coding-system)
  last-next-selection-coding-system
  (defun . set-next-selection-coding-system)
  (defun . set-coding-priority)
  ctext-non-standard-encodings-alist ctext-non-standard-encodings ctext-non-standard-encodings-regexp
  (defun . ctext-post-read-conversion)
  (defun . ctext-non-standard-encodings-table)
  (defun . ctext-pre-write-conversion)
  auto-coding-alist auto-coding-regexp-alist
  (defun . auto-coding-regexp-alist-lookup)
  auto-coding-functions set-auto-coding-for-load
  (defun . auto-coding-alist-lookup)
  (defun . find-auto-coding)
  (defun . set-auto-coding)
  (defun . after-insert-file-set-coding)
  (defun . find-new-buffer-file-coding-system)
  (defun . modify-coding-system-alist)
  (defun . decode-coding-inserted-region)
  (defun . recode-region)
  (defun . make-translation-table)
  (defun . make-translation-table-from-vector)
  (defun . make-translation-table-from-alist)
  (defun . define-translation-table)
  (defun . translate-region)
  (defun . with-category-table)
  (defun . define-translation-hash-table)
  (defun . sgml-xml-auto-coding-function)
  (defun . sgml-html-meta-auto-coding-function)
  (defun . xml-find-file-coding-system)
  (provide . mule))
 ("/usr/share/emacs/23.0.93/lisp/emacs-lisp/map-ynp.elc"
  (defun . map-y-or-n-p))
 ("/usr/share/emacs/23.0.93/lisp/custom.elc"
  (require . widget)
  custom-define-hook custom-dont-initialize custom-current-group-alist
  (defun . custom-initialize-default)
  (defun . custom-initialize-set)
  (defun . custom-initialize-safe-set)
  (defun . custom-initialize-safe-default)
  (defun . custom-initialize-reset)
  (defun . custom-initialize-changed)
  (defun . custom-declare-variable)
  (defun . defcustom)
  (defun . defface)
  (defun . custom-current-group)
  (defun . custom-declare-group)
  (defun . defgroup)
  (defun . custom-add-to-group)
  (defun . custom-group-of-mode)
  (defun . custom-handle-all-keywords)
  (defun . custom-handle-keyword)
  (defun . custom-add-dependencies)
  (defun . custom-add-option)
  (defun . custom-add-frequent-value)
  (defun . custom-add-link)
  (defun . custom-add-version)
  (defun . custom-add-package-version)
  (defun . custom-add-load)
  (defun . custom-autoload)
  (defun . custom-variable-p)
  (defun . custom-note-var-changed)
  custom-load-recursion
  (defun . custom-load-symbol)
  custom-local-buffer
  (defun . custom-set-default)
  (defun . custom-set-minor-mode)
  (defun . custom-quote)
  (defun . customize-mark-to-save)
  (defun . customize-mark-as-set)
  (defun . custom-reevaluate-setting)
  custom-known-themes
  (defun . custom-theme-p)
  (defun . custom-check-theme)
  (defun . custom-push-theme)
  (defun . custom-set-variables)
  (defun . custom-theme-set-variables)
  (defun . deftheme)
  (defun . custom-declare-theme)
  (defun . custom-make-theme-feature)
  custom-theme-directory
  (defun . provide-theme)
  (defun . load-theme)
  custom-enabling-themes
  (defun . enable-theme)
  custom-enabled-themes
  (defun . custom-theme-enabled-p)
  (defun . disable-theme)
  (defun . custom-variable-theme-value)
  (defun . custom-theme-recalc-variable)
  (defun . custom-theme-recalc-face)
  (defun . custom-theme-reset-variables)
  (defun . custom-reset-variables)
  read-quoted-char-radix
  (provide . custom))
 ("/usr/share/emacs/23.0.93/lisp/widget.elc"
  (defun . define-widget-keywords)
  (defun . define-widget)
  (defun . widget-plist-member)
  (provide . widget))
 ("/usr/share/emacs/23.0.93/lisp/version.el" emacs-copyright emacs-version emacs-major-version emacs-minor-version emacs-build-time emacs-build-system
  (defun . emacs-version)
  (defun . version))
 ("/usr/share/emacs/23.0.93/lisp/subr.elc" custom-declare-variable-list
  (defun . custom-declare-variable-early)
  (defun . declare-function)
  (defun . not)
  (defun . noreturn)
  (defun . 1value)
  (defun . def-edebug-spec)
  (defun . lambda)
  (defun . push)
  (defun . pop)
  (defun . when)
  (defun . unless)
  --dolist-tail--
  (defun . dolist)
  --dotimes-limit--
  (defun . dotimes)
  (defun . declare)
  (defun . ignore-errors)
  (defun . ignore)
  (defun . error)
  (defun . frame-configuration-p)
  (defun . functionp)
  (defun . caar)
  (defun . cadr)
  (defun . cdar)
  (defun . cddr)
  (defun . last)
  (defun . butlast)
  (defun . nbutlast)
  (defun . delete-dups)
  (defun . number-sequence)
  (defun . copy-tree)
  (defun . assoc-default)
  (defun . assoc-ignore-case)
  (defun . assoc-ignore-representation)
  (defun . member-ignore-case)
  (defun . assq-delete-all)
  (defun . rassq-delete-all)
  (defun . remove)
  (defun . remq)
  (defun . kbd)
  (defun . undefined)
  (defun . suppress-keymap)
  (defun . define-key-after)
  (defun . map-keymap-sorted)
  (defun . keymap-canonicalize)
  (defun . keyboard-translate)
  (defun . global-set-key)
  (defun . local-set-key)
  (defun . global-unset-key)
  (defun . local-unset-key)
  key-substitution-in-progress
  (defun . substitute-key-definition)
  (defun . substitute-key-definition-key)
  global-map esc-map ctl-x-map ctl-x-4-map
  (defun . ctl-x-4-prefix)
  ctl-x-5-map
  (defun . ctl-x-5-prefix)
  listify-key-sequence-1 listify-key-sequence-1
  (defun . listify-key-sequence)
  (defun . eventp)
  (defun . event-modifiers)
  (defun . event-basic-type)
  (defun . mouse-movement-p)
  (defun . mouse-event-p)
  (defun . event-start)
  (defun . event-end)
  (defun . event-click-count)
  (defun . posn-window)
  (defun . posn-area)
  (defun . posn-point)
  (defun . posn-set-point)
  (defun . posn-x-y)
  (defun . posn-col-row)
  (defun . posn-actual-col-row)
  (defun . posn-timestamp)
  (defun . posn-string)
  (defun . posn-image)
  (defun . posn-object)
  (defun . posn-object-x-y)
  (defun . posn-object-width-height)
  (defun . window-dot)
  (defun . set-window-dot)
  (defun . read-input)
  (defun . show-buffer)
  (defun . eval-current-buffer)
  (defun . string-to-int)
  (defun . insert-string)
  (defun . makehash)
  (defun . baud-rate)
  (defun . focus-frame)
  (defun . unfocus-frame)
  executing-macro x-lost-selection-hooks x-sent-selection-hooks messages-buffer-max-lines last-input-char last-command-char
  (defun . send-string)
  (defun . send-region)
  (defun . string=)
  (defun . string<)
  (defun . move-marker)
  (defun . rplaca)
  (defun . rplacd)
  (defun . beep)
  (defun . indent-to-column)
  (defun . backward-delete-char)
  (defun . search-forward-regexp)
  (defun . search-backward-regexp)
  (defun . int-to-string)
  (defun . store-match-data)
  (defun . chmod)
  (defun . mkdir)
  (defun . point-at-eol)
  (defun . point-at-bol)
  (defun . user-original-login-name)
  (defun . make-local-hook)
  (defun . add-hook)
  (defun . remove-hook)
  (defun . add-to-list)
  (defun . add-to-ordered-list)
  (defun . add-to-history)
  delay-mode-hooks delayed-mode-hooks after-change-major-mode-hook
  (defun . run-mode-hooks)
  (defun . delay-mode-hooks)
  (defun . derived-mode-p)
  minor-mode-list
  (defun . add-minor-mode)
  (defun . symbol-file)
  (defun . locate-library)
  (defun . eval-at-startup)
  (defun . load-history-regexp)
  (defun . load-history-filename-element)
  (defun . eval-after-load)
  (defun . do-after-load-evaluation)
  (defun . eval-next-after-load)
  (defun . process-lines)
  (defun . open-network-stream)
  (defun . process-kill-without-query)
  (defun . process-get)
  (defun . process-put)
  read-quoted-char-radix
  (defun . read-quoted-char)
  (defun . read-passwd)
  (defun . read-number)
  (defun . sit-for)
  (defun . atomic-change-group)
  (defun . prepare-change-group)
  (defun . activate-change-group)
  (defun . accept-change-group)
  (defun . cancel-change-group)
  (defun . redraw-modeline)
  (defun . force-mode-line-update)
  (defun . momentary-string-display)
  (defun . copy-overlay)
  (defun . remove-overlays)
  suspend-hook suspend-resume-hook temp-buffer-show-hook temp-buffer-setup-hook buffer-file-type user-emacs-directory
  (defun . locate-user-emacs-file)
  (defun . find-tag-default)
  (defun . play-sound)
  (defun . shell-quote-argument)
  (defun . string-or-null-p)
  (defun . booleanp)
  (defun . field-at-pos)
  (defun . remove-yank-excluded-properties)
  (defun . insert-for-yank)
  (defun . insert-for-yank-1)
  (defun . insert-buffer-substring-no-properties)
  (defun . insert-buffer-substring-as-yank)
  (defun . start-process-shell-command)
  (defun . start-file-process-shell-command)
  (defun . call-process-shell-command)
  (defun . process-file-shell-command)
  (defun . with-current-buffer)
  (defun . with-selected-window)
  (defun . with-selected-frame)
  (defun . with-temp-file)
  (defun . with-temp-message)
  (defun . with-temp-buffer)
  (defun . with-output-to-string)
  (defun . with-local-quit)
  (defun . while-no-input)
  (defun . condition-case-no-debug)
  (defun . with-demoted-errors)
  (defun . combine-after-change-calls)
  (defun . with-case-table)
  (defun . save-match-data)
  (defun . match-string)
  (defun . match-string-no-properties)
  (defun . match-substitute-replacement)
  (defun . looking-back)
  (defun . looking-at-p)
  (defun . string-match-p)
  (defun . subregexp-context-p)
  split-string-default-separators
  (defun . split-string)
  (defun . combine-and-quote-strings)
  (defun . split-string-and-unquote)
  (defun . subst-char-in-string)
  (defun . replace-regexp-in-string)
  (defun . add-to-invisibility-spec)
  (defun . remove-from-invisibility-spec)
  (defun . with-syntax-table)
  (defun . make-syntax-table)
  (defun . syntax-after)
  (defun . syntax-class)
  (defun . text-clone-maintain)
  (defun . text-clone-create)
  (defun . define-mail-user-agent)
  (defun . progress-reporter-update)
  (defun . make-progress-reporter)
  (defun . progress-reporter-force-update)
  (defun . progress-reporter-do-update)
  (defun . progress-reporter-done)
  (defun . dotimes-with-progress-reporter)
  version-separator version-regexp-alist
  (defun . version-to-list)
  (defun . version-list-<)
  (defun . version-list-=)
  (defun . version-list-<=)
  (defun . version-list-not-zero)
  (defun . version<)
  (defun . version<=)
  (defun . version=))
 ("/usr/share/emacs/23.0.93/lisp/emacs-lisp/backquote.elc"
  (provide . backquote)
  (defun . backquote-list*-function)
  (defun . backquote-list*-macro)
  (defun . backquote-list*)
  backquote-backquote-symbol backquote-unquote-symbol backquote-splice-symbol
  (defun . backquote)
  (defun . \`)
  (defun . backquote-delay-process)
  (defun . backquote-process)
  (defun . backquote-listify))
 ("/usr/share/emacs/23.0.93/lisp/emacs-lisp/byte-run.elc"
  (defun . macro-declaration-function)
  (defun . defsubst)
  (defun . make-obsolete)
  (defun . define-obsolete-function-alias)
  (defun . make-obsolete-variable)
  (defun . define-obsolete-variable-alias)
  (defun . dont-compile)
  (defun . eval-when-compile)
  (defun . eval-and-compile)
  (defun . with-no-warnings)))
