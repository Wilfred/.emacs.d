This is
/home/melpa/melpa/working/python-info-20130916.1420/python.info,
produced by makeinfo version 4.13 from
/home/melpa/melpa/working/python-info/python.texi.

Generated by Sphinx 1.1.3.
INFO-DIR-SECTION Programming
START-INFO-DIR-ENTRY
* Python: (python.info). The Python Programming Language
END-INFO-DIR-ENTRY

     Python 2.7.5, September 16, 2013

     Georg Brandl

     Copyright (C) 1990-2013, Python Software Foundation


File: python.info,  Node: About these documents,  Next: Reporting Bugs,  Prev: Glossary,  Up: Top

13 About these documents
************************

These documents are generated from reStructuredText(1) sources by
Sphinx(2), a document processor specifically written for the Python
documentation.

  Development of the documentation and its toolchain takes place on the
<docs@python.org> mailing list.  We're always looking for volunteers
wanting to help with the docs, so feel free to send a mail there!

  Many thanks go to:

   * Fred L. Drake, Jr., the creator of the original Python
     documentation toolset and writer of much of the content;

   * the Docutils(3) project for creating reStructuredText and the
     Docutils suite;

   * Fredrik Lundh for his Alternative Python Reference(4) project from
     which Sphinx got many good ideas.

  See *note Reporting Bugs: 31ae. for information how to report bugs in
this documentation, or Python itself.

* Menu:

* Contributors to the Python Documentation::

  ---------- Footnotes ----------

  (1) http://docutils.sf.net/rst.html

  (2) http://sphinx.pocoo.org/

  (3) http://docutils.sf.net/

  (4) http://effbot.org/zone/pyref.htm


File: python.info,  Node: Contributors to the Python Documentation,  Up: About these documents

13.1 Contributors to the Python Documentation
=============================================

Many people have contributed to the Python language, the Python standard
library, and the Python documentation.  See Misc/ACKS(1) in the Python
source distribution for a partial list of contributors.

  It is only with the input and contributions of the Python community
that Python has such wonderful documentation - Thank You!

  ---------- Footnotes ----------

  (1) http://hg.python.org/cpython/file/2.7/Misc/ACKS


File: python.info,  Node: Reporting Bugs,  Next: Copyright,  Prev: About these documents,  Up: Top

14 Reporting Bugs
*****************

Python is a mature programming language which has established a
reputation for stability.  In order to maintain this reputation, the
developers would like to know of any deficiencies you find in Python.

* Menu:

* Documentation bugs::
* Using the Python issue tracker::


File: python.info,  Node: Documentation bugs,  Next: Using the Python issue tracker,  Up: Reporting Bugs

14.1 Documentation bugs
=======================

If you find a bug in this documentation or would like to propose an
improvement, please send an e-mail to <docs@python.org> describing the
bug and where you found it.  If you have a suggestion how to fix it,
include that as well.

  <docs@python.org> is a mailing list run by volunteers; your request
will be noticed, even if it takes a while to be processed.

  Of course, if you want a more persistent record of your issue, you
can use the issue tracker for documentation bugs as well.


File: python.info,  Node: Using the Python issue tracker,  Prev: Documentation bugs,  Up: Reporting Bugs

14.2 Using the Python issue tracker
===================================

Bug reports for Python itself should be submitted via the Python Bug
Tracker (<http://bugs.python.org/>).  The bug tracker offers a Web form
which allows pertinent information to be entered and submitted to the
developers.

  The first step in filing a report is to determine whether the problem
has already been reported.  The advantage in doing so, aside from
saving the developers time, is that you learn what has been done to fix
it; it may be that the problem has already been fixed for the next
release, or additional information is needed (in which case you are
welcome to provide it if you can!).  To do this, search the bug
database using the search box on the top of the page.

  If the problem you're reporting is not already in the bug tracker, go
back to the Python Bug Tracker and log in.  If you don't already have a
tracker account, select the "Register" link or, if you use OpenID, one
of the OpenID provider logos in the sidebar.  It is not possible to
submit a bug report anonymously.

  Being now logged in, you can submit a bug.  Select the "Create New"
link in the sidebar to open the bug reporting form.

  The submission form has a number of fields.  For the "Title" field,
enter a _very_ short description of the problem; less than ten words is
good.  In the "Type" field, select the type of your problem; also
select the "Component" and "Versions" to which the bug relates.

  In the "Comment" field, describe the problem in detail, including
what you expected to happen and what did happen.  Be sure to include
whether any extension modules were involved, and what hardware and
software platform you were using (including version information as
appropriate).

  Each bug report will be assigned to a developer who will determine
what needs to be done to correct the problem.  You will receive an
update each time action is taken on the bug.

See also
........

Python Developer's Guide(1)
     Detailed description of the issue workflow and developers tools.

How to Report Bugs Effectively(2)
     Article which goes into some detail about how to create a useful
     bug report.  This describes what kind of information is useful and
     why it is useful.

Bug Writing Guidelines(3)
     Information about writing a good bug report.  Some of this is
     specific to the Mozilla project, but describes general good
     practices.

  ---------- Footnotes ----------

  (1) http://docs.python.org/devguide/

  (2) http://www.chiark.greenend.org.uk/~sgtatham/bugs.html

  (3) http://developer.mozilla.org/en/docs/Bug_writing_guidelines


File: python.info,  Node: Copyright,  Next: History and License,  Prev: Reporting Bugs,  Up: Top

15 Copyright
************

Python and this documentation is:

  Copyright © 2001-2013 Python Software Foundation. All rights reserved.

  Copyright © 2000 BeOpen.com. All rights reserved.

  Copyright © 1995-2000 Corporation for National Research Initiatives.
All rights reserved.

  Copyright © 1991-1995 Stichting Mathematisch Centrum. All rights
reserved.

      * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 


  See *note History and License: 31b6. for complete license and
permissions information.


File: python.info,  Node: History and License,  Next: Python Module Index,  Prev: Copyright,  Up: Top

16 History and License
**********************

* Menu:

* History of the software::
* Terms and conditions for accessing or otherwise using Python::
* Licenses and Acknowledgements for Incorporated Software::


File: python.info,  Node: History of the software,  Next: Terms and conditions for accessing or otherwise using Python,  Up: History and License

16.1 History of the software
============================

Python was created in the early 1990s by Guido van Rossum at Stichting
Mathematisch Centrum (CWI, see <http://www.cwi.nl/>) in the Netherlands
as a successor of a language called ABC.  Guido remains Python's
principal author, although it includes many contributions from others.

  In 1995, Guido continued his work on Python at the Corporation for
National Research Initiatives (CNRI, see
<http://www.cnri.reston.va.us/>) in Reston, Virginia where he released
several versions of the software.

  In May 2000, Guido and the Python core development team moved to
BeOpen.com to form the BeOpen PythonLabs team.  In October of the same
year, the PythonLabs team moved to Digital Creations (now Zope
Corporation; see <http://www.zope.com/>).  In 2001, the Python Software
Foundation (PSF, see <http://www.python.org/psf/>) was formed, a
non-profit organization created specifically to own Python-related
Intellectual Property.  Zope Corporation is a sponsoring member of the
PSF.

  All Python releases are Open Source (see <http://www.opensource.org/>
for the Open Source Definition). Historically, most, but not all,
Python releases have also been GPL-compatible; the table below
summarizes the various releases.

Release              Derived from       Year            Owner            GPL compatible?
----------------------------------------------------------------------------------------------- 
0.9.0 thru 1.2       n/a                1991-1995       CWI              yes
1.3 thru 1.5.2       1.2                1995-1999       CNRI             yes
1.6                  1.5.2              2000            CNRI             no
2.0                  1.6                2000            BeOpen.com       no
1.6.1                1.6                2001            CNRI             no
2.1                  2.0+1.6.1          2001            PSF              no
2.0.1                2.0+1.6.1          2001            PSF              yes
2.1.1                2.1+2.0.1          2001            PSF              yes
2.2                  2.1.1              2001            PSF              yes
2.1.2                2.1.1              2002            PSF              yes
2.1.3                2.1.2              2002            PSF              yes
2.2.1                2.2                2002            PSF              yes
2.2.2                2.2.1              2002            PSF              yes
2.2.3                2.2.2              2002-2003       PSF              yes
2.3                  2.2.2              2002-2003       PSF              yes
2.3.1                2.3                2002-2003       PSF              yes
2.3.2                2.3.1              2003            PSF              yes
2.3.3                2.3.2              2003            PSF              yes
2.3.4                2.3.3              2004            PSF              yes
2.3.5                2.3.4              2005            PSF              yes
2.4                  2.3                2004            PSF              yes
2.4.1                2.4                2005            PSF              yes
2.4.2                2.4.1              2005            PSF              yes
2.4.3                2.4.2              2006            PSF              yes
2.4.4                2.4.3              2006            PSF              yes
2.5                  2.4                2006            PSF              yes
2.5.1                2.5                2007            PSF              yes
2.5.2                2.5.1              2008            PSF              yes
2.5.3                2.5.2              2008            PSF              yes
2.6                  2.5                2008            PSF              yes
2.6.1                2.6                2008            PSF              yes
2.6.2                2.6.1              2009            PSF              yes
2.6.3                2.6.2              2009            PSF              yes
2.6.4                2.6.3              2010            PSF              yes
2.7                  2.6                2010            PSF              yes

     Note: GPL-compatible doesn't mean that we're distributing Python
     under the GPL.  All Python licenses, unlike the GPL, let you
     distribute a modified version without making your changes open
     source. The GPL-compatible licenses make it possible to combine
     Python with other software that is released under the GPL; the
     others don't.

  Thanks to the many outside volunteers who have worked under Guido's
direction to make these releases possible.


File: python.info,  Node: Terms and conditions for accessing or otherwise using Python,  Next: Licenses and Acknowledgements for Incorporated Software,  Prev: History of the software,  Up: History and License

16.2 Terms and conditions for accessing or otherwise using Python
=================================================================

                PSF LICENSE AGREEMENT FOR PYTHON 2.7.5

  1. This LICENSE AGREEMENT is between the Python Software Foundation
     ("PSF"), and the Individual or Organization ("Licensee") accessing
     and otherwise using Python 2.7.5 software in source or binary form
     and its associated documentation.

  2. Subject to the terms and conditions of this License Agreement, PSF
     hereby grants Licensee a nonexclusive, royalty-free, world-wide
     license to reproduce, analyze, test, perform and/or display
     publicly, prepare derivative works, distribute, and otherwise use
     Python 2.7.5 alone or in any derivative version, provided,
     however, that PSF's License Agreement and PSF's notice of
     copyright, i.e., "Copyright © 2001-2013 Python Software
     Foundation; All Rights Reserved" are retained in Python 2.7.5
     alone or in any derivative version prepared by Licensee.

  3. In the event Licensee prepares a derivative work that is based on
     or incorporates Python 2.7.5 or any part thereof, and wants to
     make the derivative work available to others as provided herein,
     then Licensee hereby agrees to include in any such work a brief
     summary of the changes made to Python 2.7.5.

  4. PSF is making Python 2.7.5 available to Licensee on an "AS IS"
     basis.  PSF MAKES NO REPRESENTATIONS OR WARRANTIES, EXPRESS OR
     IMPLIED.  BY WAY OF EXAMPLE, BUT NOT LIMITATION, PSF MAKES NO AND
     DISCLAIMS ANY REPRESENTATION OR WARRANTY OF MERCHANTABILITY OR
     FITNESS FOR ANY PARTICULAR PURPOSE OR THAT THE USE OF PYTHON 2.7.5
     WILL NOT INFRINGE ANY THIRD PARTY RIGHTS.

  5. PSF SHALL NOT BE LIABLE TO LICENSEE OR ANY OTHER USERS OF PYTHON
     2.7.5 FOR ANY INCIDENTAL, SPECIAL, OR CONSEQUENTIAL DAMAGES OR
     LOSS AS A RESULT OF MODIFYING, DISTRIBUTING, OR OTHERWISE USING
     PYTHON 2.7.5, OR ANY DERIVATIVE THEREOF, EVEN IF ADVISED OF THE
     POSSIBILITY THEREOF.

  6. This License Agreement will automatically terminate upon a
     material breach of its terms and conditions.

  7. Nothing in this License Agreement shall be deemed to create any
     relationship of agency, partnership, or joint venture between PSF
     and Licensee.  This License Agreement does not grant permission to
     use PSF trademarks or trade name in a trademark sense to endorse
     or promote products or services of Licensee, or any third party.

  8. By copying, installing or otherwise using Python 2.7.5, Licensee
     agrees to be bound by the terms and conditions of this License
     Agreement.

              BEOPEN.COM LICENSE AGREEMENT FOR PYTHON 2.0

         BEOPEN PYTHON OPEN SOURCE LICENSE AGREEMENT VERSION 1

  1. This LICENSE AGREEMENT is between BeOpen.com ("BeOpen"), having an
     office at 160 Saratoga Avenue, Santa Clara, CA 95051, and the
     Individual or Organization ("Licensee") accessing and otherwise
     using this software in source or binary form and its associated
     documentation ("the Software").

  2. Subject to the terms and conditions of this BeOpen Python License
     Agreement, BeOpen hereby grants Licensee a non-exclusive,
     royalty-free, world-wide license to reproduce, analyze, test,
     perform and/or display publicly, prepare derivative works,
     distribute, and otherwise use the Software alone or in any
     derivative version, provided, however, that the BeOpen Python
     License is retained in the Software, alone or in any derivative
     version prepared by Licensee.

  3. BeOpen is making the Software available to Licensee on an "AS IS"
     basis.  BEOPEN MAKES NO REPRESENTATIONS OR WARRANTIES, EXPRESS OR
     IMPLIED.  BY WAY OF EXAMPLE, BUT NOT LIMITATION, BEOPEN MAKES NO
     AND DISCLAIMS ANY REPRESENTATION OR WARRANTY OF MERCHANTABILITY OR
     FITNESS FOR ANY PARTICULAR PURPOSE OR THAT THE USE OF THE SOFTWARE
     WILL NOT INFRINGE ANY THIRD PARTY RIGHTS.

  4. BEOPEN SHALL NOT BE LIABLE TO LICENSEE OR ANY OTHER USERS OF THE
     SOFTWARE FOR ANY INCIDENTAL, SPECIAL, OR CONSEQUENTIAL DAMAGES OR
     LOSS AS A RESULT OF USING, MODIFYING OR DISTRIBUTING THE SOFTWARE,
     OR ANY DERIVATIVE THEREOF, EVEN IF ADVISED OF THE POSSIBILITY
     THEREOF.

  5. This License Agreement will automatically terminate upon a
     material breach of its terms and conditions.

  6. This License Agreement shall be governed by and interpreted in all
     respects by the law of the State of California, excluding conflict
     of law provisions.  Nothing in this License Agreement shall be
     deemed to create any relationship of agency, partnership, or joint
     venture between BeOpen and Licensee.  This License Agreement does
     not grant permission to use BeOpen trademarks or trade names in a
     trademark sense to endorse or promote products or services of
     Licensee, or any third party.  As an exception, the "BeOpen
     Python" logos available at <http://www.pythonlabs.com/logos.html>
     may be used according to the permissions granted on that web page.

  7. By copying, installing or otherwise using the software, Licensee
     agrees to be bound by the terms and conditions of this License
     Agreement.

                CNRI LICENSE AGREEMENT FOR PYTHON 1.6.1

  1. This LICENSE AGREEMENT is between the Corporation for National
     Research Initiatives, having an office at 1895 Preston White
     Drive, Reston, VA 20191 ("CNRI"), and the Individual or
     Organization ("Licensee") accessing and otherwise using Python
     1.6.1 software in source or binary form and its associated
     documentation.

  2. Subject to the terms and conditions of this License Agreement,
     CNRI hereby grants Licensee a nonexclusive, royalty-free,
     world-wide license to reproduce, analyze, test, perform and/or
     display publicly, prepare derivative works, distribute, and
     otherwise use Python 1.6.1 alone or in any derivative version,
     provided, however, that CNRI's License Agreement and CNRI's notice
     of copyright, i.e., "Copyright © 1995-2001 Corporation for
     National Research Initiatives; All Rights Reserved" are retained
     in Python 1.6.1 alone or in any derivative version prepared by
     Licensee.  Alternately, in lieu of CNRI's License Agreement,
     Licensee may substitute the following text (omitting the quotes):
     "Python 1.6.1 is made available subject to the terms and
     conditions in CNRI's License Agreement.  This Agreement together
     with Python 1.6.1 may be located on the Internet using the
     following unique, persistent identifier (known as a handle):
     1895.22/1013.  This Agreement may also be obtained from a proxy
     server on the Internet using the following URL:
     <http://hdl.handle.net/1895.22/1013>."

  3. In the event Licensee prepares a derivative work that is based on
     or incorporates Python 1.6.1 or any part thereof, and wants to
     make the derivative work available to others as provided herein,
     then Licensee hereby agrees to include in any such work a brief
     summary of the changes made to Python 1.6.1.

  4. CNRI is making Python 1.6.1 available to Licensee on an "AS IS"
     basis.  CNRI MAKES NO REPRESENTATIONS OR WARRANTIES, EXPRESS OR
     IMPLIED.  BY WAY OF EXAMPLE, BUT NOT LIMITATION, CNRI MAKES NO AND
     DISCLAIMS ANY REPRESENTATION OR WARRANTY OF MERCHANTABILITY OR
     FITNESS FOR ANY PARTICULAR PURPOSE OR THAT THE USE OF PYTHON 1.6.1
     WILL NOT INFRINGE ANY THIRD PARTY RIGHTS.

  5. CNRI SHALL NOT BE LIABLE TO LICENSEE OR ANY OTHER USERS OF PYTHON
     1.6.1 FOR ANY INCIDENTAL, SPECIAL, OR CONSEQUENTIAL DAMAGES OR
     LOSS AS A RESULT OF MODIFYING, DISTRIBUTING, OR OTHERWISE USING
     PYTHON 1.6.1, OR ANY DERIVATIVE THEREOF, EVEN IF ADVISED OF THE
     POSSIBILITY THEREOF.

  6. This License Agreement will automatically terminate upon a
     material breach of its terms and conditions.

  7. This License Agreement shall be governed by the federal
     intellectual property law of the United States, including without
     limitation the federal copyright law, and, to the extent such U.S.
     federal law does not apply, by the law of the Commonwealth of
     Virginia, excluding Virginia's conflict of law provisions.
     Notwithstanding the foregoing, with regard to derivative works
     based on Python 1.6.1 that incorporate non-separable material that
     was previously distributed under the GNU General Public License
     (GPL), the law of the Commonwealth of Virginia shall govern this
     License Agreement only as to issues arising under or with respect
     to Paragraphs 4, 5, and 7 of this License Agreement.  Nothing in
     this License Agreement shall be deemed to create any relationship
     of agency, partnership, or joint venture between CNRI and
     Licensee.  This License Agreement does not grant permission to use
     CNRI trademarks or trade name in a trademark sense to endorse or
     promote products or services of Licensee, or any third party.

  8. By clicking on the "ACCEPT" button where indicated, or by copying,
     installing or otherwise using Python 1.6.1, Licensee agrees to be
     bound by the terms and conditions of this License Agreement.

                                ACCEPT

          CWI LICENSE AGREEMENT FOR PYTHON 0.9.0 THROUGH 1.2

  Copyright © 1991 - 1995, Stichting Mathematisch Centrum Amsterdam, The
Netherlands.  All rights reserved.

  Permission to use, copy, modify, and distribute this software and its
documentation for any purpose and without fee is hereby granted,
provided that the above copyright notice appear in all copies and that
both that copyright notice and this permission notice appear in
supporting documentation, and that the name of Stichting Mathematisch
Centrum or CWI not be used in advertising or publicity pertaining to
distribution of the software without specific, written prior permission.

  STICHTING MATHEMATISCH CENTRUM DISCLAIMS ALL WARRANTIES WITH REGARD
TO THIS SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS, IN NO EVENT SHALL STICHTING MATHEMATISCH CENTRUM BE LIABLE
FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.


File: python.info,  Node: Licenses and Acknowledgements for Incorporated Software,  Prev: Terms and conditions for accessing or otherwise using Python,  Up: History and License

16.3 Licenses and Acknowledgements for Incorporated Software
============================================================

This section is an incomplete, but growing list of licenses and
acknowledgements for third-party software incorporated in the Python
distribution.

* Menu:

* Mersenne Twister::
* Sockets: Sockets<2>.
* Floating point exception control::
* MD5 message digest algorithm::
* Asynchronous socket services::
* Cookie management::
* Execution tracing::
* UUencode and UUdecode functions::
* XML Remote Procedure Calls::
* test_epoll::
* Select kqueue::
* strtod and dtoa::
* OpenSSL::
* expat::
* libffi::
* zlib::


File: python.info,  Node: Mersenne Twister,  Next: Sockets<2>,  Up: Licenses and Acknowledgements for Incorporated Software

16.3.1 Mersenne Twister
-----------------------

The `_random' module includes code based on a download from
<http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/MT2002/emt19937ar.html>.
The following are the verbatim comments from the original code:

    A C-program for MT19937, with initialization improved 2002/1/26.
    Coded by Takuji Nishimura and Makoto Matsumoto.

    Before using, initialize the state by using init_genrand(seed)
    or init_by_array(init_key, key_length).

    Copyright (C) 1997 - 2002, Makoto Matsumoto and Takuji Nishimura,
    All rights reserved.

    Redistribution and use in source and binary forms, with or without
    modification, are permitted provided that the following conditions
    are met:

     1. Redistributions of source code must retain the above copyright
        notice, this list of conditions and the following disclaimer.

     2. Redistributions in binary form must reproduce the above copyright
        notice, this list of conditions and the following disclaimer in the
        documentation and/or other materials provided with the distribution.

     3. The names of its contributors may not be used to endorse or promote
        products derived from this software without specific prior written
        permission.

    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
    "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
    LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
    A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
    CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
    EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
    PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
    PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
    LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
    NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
    SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


    Any feedback is very welcome.
    http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/emt.html
    email: m-mat @ math.sci.hiroshima-u.ac.jp (remove space)



File: python.info,  Node: Sockets<2>,  Next: Floating point exception control,  Prev: Mersenne Twister,  Up: Licenses and Acknowledgements for Incorporated Software

16.3.2 Sockets
--------------

The *note socket: 15c. module uses the functions, `getaddrinfo()', and
`getnameinfo()', which are coded in separate source files from the WIDE
Project, <http://www.wide.ad.jp/>.

    Copyright (C) 1995, 1996, 1997, and 1998 WIDE Project.
    All rights reserved.

    Redistribution and use in source and binary forms, with or without
    modification, are permitted provided that the following conditions
    are met:
    1. Redistributions of source code must retain the above copyright
       notice, this list of conditions and the following disclaimer.
    2. Redistributions in binary form must reproduce the above copyright
       notice, this list of conditions and the following disclaimer in the
       documentation and/or other materials provided with the distribution.
    3. Neither the name of the project nor the names of its contributors
       may be used to endorse or promote products derived from this software
       without specific prior written permission.

    THIS SOFTWARE IS PROVIDED BY THE PROJECT AND CONTRIBUTORS ``AS IS'' AND
    GAI_ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
    ARE DISCLAIMED.  IN NO EVENT SHALL THE PROJECT OR CONTRIBUTORS BE LIABLE
    FOR GAI_ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
    DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
    OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
    HOWEVER CAUSED AND ON GAI_ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
    LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN GAI_ANY WAY
    OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
    SUCH DAMAGE.



File: python.info,  Node: Floating point exception control,  Next: MD5 message digest algorithm,  Prev: Sockets<2>,  Up: Licenses and Acknowledgements for Incorporated Software

16.3.3 Floating point exception control
---------------------------------------

The source for the *note fpectl: d4. module includes the following
notice:

      ---------------------------------------------------------------------
     /                       Copyright (c) 1996.                           \
    |          The Regents of the University of California.                 |
    |                        All rights reserved.                           |
    |                                                                       |
    |   Permission to use, copy, modify, and distribute this software for   |
    |   any purpose without fee is hereby granted, provided that this en-   |
    |   tire notice is included in all copies of any software which is or   |
    |   includes  a  copy  or  modification  of  this software and in all   |
    |   copies of the supporting documentation for such software.           |
    |                                                                       |
    |   This  work was produced at the University of California, Lawrence   |
    |   Livermore National Laboratory under  contract  no.  W-7405-ENG-48   |
    |   between  the  U.S.  Department  of  Energy and The Regents of the   |
    |   University of California for the operation of UC LLNL.              |
    |                                                                       |
    |                              DISCLAIMER                               |
    |                                                                       |
    |   This  software was prepared as an account of work sponsored by an   |
    |   agency of the United States Government. Neither the United States   |
    |   Government  nor the University of California nor any of their em-   |
    |   ployees, makes any warranty, express or implied, or  assumes  any   |
    |   liability  or  responsibility  for the accuracy, completeness, or   |
    |   usefulness of any information,  apparatus,  product,  or  process   |
    |   disclosed,   or  represents  that  its  use  would  not  infringe   |
    |   privately-owned rights. Reference herein to any specific  commer-   |
    |   cial  products,  process,  or  service  by trade name, trademark,   |
    |   manufacturer, or otherwise, does not  necessarily  constitute  or   |
    |   imply  its endorsement, recommendation, or favoring by the United   |
    |   States Government or the University of California. The views  and   |
    |   opinions  of authors expressed herein do not necessarily state or   |
    |   reflect those of the United States Government or  the  University   |
    |   of  California,  and shall not be used for advertising or product   |
     \  endorsement purposes.                                              /
      ---------------------------------------------------------------------



File: python.info,  Node: MD5 message digest algorithm,  Next: Asynchronous socket services,  Prev: Floating point exception control,  Up: Licenses and Acknowledgements for Incorporated Software

16.3.4 MD5 message digest algorithm
-----------------------------------

The source code for the *note md5: 10d. module contains the following
notice:

    Copyright (C) 1999, 2002 Aladdin Enterprises.  All rights reserved.

    This software is provided 'as-is', without any express or implied
    warranty.  In no event will the authors be held liable for any damages
    arising from the use of this software.

    Permission is granted to anyone to use this software for any purpose,
    including commercial applications, and to alter it and redistribute it
    freely, subject to the following restrictions:

    1. The origin of this software must not be misrepresented; you must not
       claim that you wrote the original software. If you use this software
       in a product, an acknowledgment in the product documentation would be
       appreciated but is not required.
    2. Altered source versions must be plainly marked as such, and must not be
       misrepresented as being the original software.
    3. This notice may not be removed or altered from any source distribution.

    L. Peter Deutsch
    ghost@aladdin.com

    Independent implementation of MD5 (RFC 1321).

    This code implements the MD5 Algorithm defined in RFC 1321, whose
    text is available at
          http://www.ietf.org/rfc/rfc1321.txt
    The code is derived from the text of the RFC, including the test suite
    (section A.5) but excluding the rest of Appendix A.  It does not include
    any code or documentation that is identified in the RFC as being
    copyrighted.

    The original and principal author of md5.h is L. Peter Deutsch
    <ghost@aladdin.com>.  Other authors are noted in the change history
    that follows (in reverse chronological order):

    2002-04-13 lpd Removed support for non-ANSI compilers; removed
          references to Ghostscript; clarified derivation from RFC 1321;
          now handles byte order either statically or dynamically.
    1999-11-04 lpd Edited comments slightly for automatic TOC extraction.
    1999-10-18 lpd Fixed typo in header comment (ansi2knr rather than md5);
          added conditionalization for C++ compilation from Martin
          Purschke <purschke@bnl.gov>.
    1999-05-03 lpd Original version.



File: python.info,  Node: Asynchronous socket services,  Next: Cookie management,  Prev: MD5 message digest algorithm,  Up: Licenses and Acknowledgements for Incorporated Software

16.3.5 Asynchronous socket services
-----------------------------------

The *note asynchat: 10. and *note asyncore: 11. modules contain the
following notice:

    Copyright 1996 by Sam Rushing

                            All Rights Reserved

    Permission to use, copy, modify, and distribute this software and
    its documentation for any purpose and without fee is hereby
    granted, provided that the above copyright notice appear in all
    copies and that both that copyright notice and this permission
    notice appear in supporting documentation, and that the name of Sam
    Rushing not be used in advertising or publicity pertaining to
    distribution of the software without specific, written prior
    permission.

    SAM RUSHING DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE,
    INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN
    NO EVENT SHALL SAM RUSHING BE LIABLE FOR ANY SPECIAL, INDIRECT OR
    CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS
    OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT,
    NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN
    CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.



File: python.info,  Node: Cookie management,  Next: Execution tracing,  Prev: Asynchronous socket services,  Up: Licenses and Acknowledgements for Incorporated Software

16.3.6 Cookie management
------------------------

The *note Cookie: 6f. module contains the following notice:

    Copyright 2000 by Timothy O'Malley <timo@alum.mit.edu>

                   All Rights Reserved

    Permission to use, copy, modify, and distribute this software
    and its documentation for any purpose and without fee is hereby
    granted, provided that the above copyright notice appear in all
    copies and that both that copyright notice and this permission
    notice appear in supporting documentation, and that the name of
    Timothy O'Malley  not be used in advertising or publicity
    pertaining to distribution of the software without specific, written
    prior permission.

    Timothy O'Malley DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS
    SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS, IN NO EVENT SHALL Timothy O'Malley BE LIABLE FOR
    ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
    WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
    WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS
    ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.



File: python.info,  Node: Execution tracing,  Next: UUencode and UUdecode functions,  Prev: Cookie management,  Up: Licenses and Acknowledgements for Incorporated Software

16.3.7 Execution tracing
------------------------

The *note trace: 180. module contains the following notice:

    portions copyright 2001, Autonomous Zones Industries, Inc., all rights...
    err...  reserved and offered to the public under the terms of the
    Python 2.2 license.
    Author: Zooko O'Whielacronx
    http://zooko.com/
    mailto:zooko@zooko.com

    Copyright 2000, Mojam Media, Inc., all rights reserved.
    Author: Skip Montanaro

    Copyright 1999, Bioreason, Inc., all rights reserved.
    Author: Andrew Dalke

    Copyright 1995-1997, Automatrix, Inc., all rights reserved.
    Author: Skip Montanaro

    Copyright 1991-1995, Stichting Mathematisch Centrum, all rights reserved.


    Permission to use, copy, modify, and distribute this Python software and
    its associated documentation for any purpose without fee is hereby
    granted, provided that the above copyright notice appears in all copies,
    and that both that copyright notice and this permission notice appear in
    supporting documentation, and that the name of neither Automatrix,
    Bioreason or Mojam Media be used in advertising or publicity pertaining to
    distribution of the software without specific, written prior permission.



File: python.info,  Node: UUencode and UUdecode functions,  Next: XML Remote Procedure Calls,  Prev: Execution tracing,  Up: Licenses and Acknowledgements for Incorporated Software

16.3.8 UUencode and UUdecode functions
--------------------------------------

The *note uu: 18f. module contains the following notice:

    Copyright 1994 by Lance Ellinghouse
    Cathedral City, California Republic, United States of America.
                           All Rights Reserved
    Permission to use, copy, modify, and distribute this software and its
    documentation for any purpose and without fee is hereby granted,
    provided that the above copyright notice appear in all copies and that
    both that copyright notice and this permission notice appear in
    supporting documentation, and that the name of Lance Ellinghouse
    not be used in advertising or publicity pertaining to distribution
    of the software without specific, written prior permission.
    LANCE ELLINGHOUSE DISCLAIMS ALL WARRANTIES WITH REGARD TO
    THIS SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND
    FITNESS, IN NO EVENT SHALL LANCE ELLINGHOUSE CENTRUM BE LIABLE
    FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
    WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
    ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT
    OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

    Modified by Jack Jansen, CWI, July 1995:
    - Use binascii module to do the actual line-by-line conversion
      between ascii and binary. This results in a 1000-fold speedup. The C
      version is still 5 times faster, though.
    - Arguments more compliant with Python standard



File: python.info,  Node: XML Remote Procedure Calls,  Next: test_epoll,  Prev: UUencode and UUdecode functions,  Up: Licenses and Acknowledgements for Incorporated Software

16.3.9 XML Remote Procedure Calls
---------------------------------

The *note xmlrpclib: 1aa. module contains the following notice:

        The XML-RPC client interface is

    Copyright (c) 1999-2002 by Secret Labs AB
    Copyright (c) 1999-2002 by Fredrik Lundh

    By obtaining, using, and/or copying this software and/or its
    associated documentation, you agree that you have read, understood,
    and will comply with the following terms and conditions:

    Permission to use, copy, modify, and distribute this software and
    its associated documentation for any purpose and without fee is
    hereby granted, provided that the above copyright notice appears in
    all copies, and that both that copyright notice and this permission
    notice appear in supporting documentation, and that the name of
    Secret Labs AB or the author not be used in advertising or publicity
    pertaining to distribution of the software without specific, written
    prior permission.

    SECRET LABS AB AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD
    TO THIS SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANT-
    ABILITY AND FITNESS.  IN NO EVENT SHALL SECRET LABS AB OR THE AUTHOR
    BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY
    DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
    WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS
    ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE
    OF THIS SOFTWARE.



File: python.info,  Node: test_epoll,  Next: Select kqueue,  Prev: XML Remote Procedure Calls,  Up: Licenses and Acknowledgements for Incorporated Software

16.3.10 test_epoll
------------------

The `test_epoll' contains the following notice:

    Copyright (c) 2001-2006 Twisted Matrix Laboratories.

    Permission is hereby granted, free of charge, to any person obtaining
    a copy of this software and associated documentation files (the
    "Software"), to deal in the Software without restriction, including
    without limitation the rights to use, copy, modify, merge, publish,
    distribute, sublicense, and/or sell copies of the Software, and to
    permit persons to whom the Software is furnished to do so, subject to
    the following conditions:

    The above copyright notice and this permission notice shall be
    included in all copies or substantial portions of the Software.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
    EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
    MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
    NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
    LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
    OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
    WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.



File: python.info,  Node: Select kqueue,  Next: strtod and dtoa,  Prev: test_epoll,  Up: Licenses and Acknowledgements for Incorporated Software

16.3.11 Select kqueue
---------------------

The *note select: 14e. and contains the following notice for the kqueue
interface:

    Copyright (c) 2000 Doug White, 2006 James Knight, 2007 Christian Heimes
    All rights reserved.

    Redistribution and use in source and binary forms, with or without
    modification, are permitted provided that the following conditions
    are met:
    1. Redistributions of source code must retain the above copyright
       notice, this list of conditions and the following disclaimer.
    2. Redistributions in binary form must reproduce the above copyright
       notice, this list of conditions and the following disclaimer in the
       documentation and/or other materials provided with the distribution.

    THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
    ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
    ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
    FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
    DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
    OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
    HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
    LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
    OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
    SUCH DAMAGE.



File: python.info,  Node: strtod and dtoa,  Next: OpenSSL,  Prev: Select kqueue,  Up: Licenses and Acknowledgements for Incorporated Software

16.3.12 strtod and dtoa
-----------------------

The file `Python/dtoa.c', which supplies C functions dtoa and strtod
for conversion of C doubles to and from strings, is derived from the
file of the same name by David M. Gay, currently available from
<http://www.netlib.org/fp/>.  The original file, as retrieved on March
16, 2009, contains the following copyright and licensing notice:

    /****************************************************************
     *
     * The author of this software is David M. Gay.
     *
     * Copyright (c) 1991, 2000, 2001 by Lucent Technologies.
     *
     * Permission to use, copy, modify, and distribute this software for any
     * purpose without fee is hereby granted, provided that this entire notice
     * is included in all copies of any software which is or includes a copy
     * or modification of this software and in all copies of the supporting
     * documentation for such software.
     *
     * THIS SOFTWARE IS BEING PROVIDED "AS IS", WITHOUT ANY EXPRESS OR IMPLIED
     * WARRANTY.  IN PARTICULAR, NEITHER THE AUTHOR NOR LUCENT MAKES ANY
     * REPRESENTATION OR WARRANTY OF ANY KIND CONCERNING THE MERCHANTABILITY
     * OF THIS SOFTWARE OR ITS FITNESS FOR ANY PARTICULAR PURPOSE.
     *
     ***************************************************************/



File: python.info,  Node: OpenSSL,  Next: expat,  Prev: strtod and dtoa,  Up: Licenses and Acknowledgements for Incorporated Software

16.3.13 OpenSSL
---------------

The modules *note hashlib: e6, *note posix: 136, *note ssl: 160, *note
crypt: 75. use the OpenSSL library for added performance if made
available by the operating system. Additionally, the Windows installers
for Python include a copy of the OpenSSL libraries, so we include a
copy of the OpenSSL license here:

     LICENSE ISSUES
     ==============

     The OpenSSL toolkit stays under a dual license, i.e. both the conditions of
     the OpenSSL License and the original SSLeay license apply to the toolkit.
     See below for the actual license texts. Actually both licenses are BSD-style
     Open Source licenses. In case of any license issues related to OpenSSL
     please contact openssl-core@openssl.org.

     OpenSSL License
     ---------------

       /* ====================================================================
        * Copyright (c) 1998-2008 The OpenSSL Project.  All rights reserved.
        *
        * Redistribution and use in source and binary forms, with or without
        * modification, are permitted provided that the following conditions
        * are met:
        *
        * 1. Redistributions of source code must retain the above copyright
        *    notice, this list of conditions and the following disclaimer.
        *
        * 2. Redistributions in binary form must reproduce the above copyright
        *    notice, this list of conditions and the following disclaimer in
        *    the documentation and/or other materials provided with the
        *    distribution.
        *
        * 3. All advertising materials mentioning features or use of this
        *    software must display the following acknowledgment:
        *    "This product includes software developed by the OpenSSL Project
        *    for use in the OpenSSL Toolkit. (http://www.openssl.org/)"
        *
        * 4. The names "OpenSSL Toolkit" and "OpenSSL Project" must not be used to
        *    endorse or promote products derived from this software without
        *    prior written permission. For written permission, please contact
        *    openssl-core@openssl.org.
        *
        * 5. Products derived from this software may not be called "OpenSSL"
        *    nor may "OpenSSL" appear in their names without prior written
        *    permission of the OpenSSL Project.
        *
        * 6. Redistributions of any form whatsoever must retain the following
        *    acknowledgment:
        *    "This product includes software developed by the OpenSSL Project
        *    for use in the OpenSSL Toolkit (http://www.openssl.org/)"
        *
        * THIS SOFTWARE IS PROVIDED BY THE OpenSSL PROJECT ``AS IS'' AND ANY
        * EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
        * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
        * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OpenSSL PROJECT OR
        * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
        * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
        * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
        * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
        * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
        * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
        * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
        * OF THE POSSIBILITY OF SUCH DAMAGE.
        * ====================================================================
        *
        * This product includes cryptographic software written by Eric Young
        * (eay@cryptsoft.com).  This product includes software written by Tim
        * Hudson (tjh@cryptsoft.com).
        *
        */

    Original SSLeay License
    -----------------------

       /* Copyright (C) 1995-1998 Eric Young (eay@cryptsoft.com)
        * All rights reserved.
        *
        * This package is an SSL implementation written
        * by Eric Young (eay@cryptsoft.com).
        * The implementation was written so as to conform with Netscapes SSL.
        *
        * This library is free for commercial and non-commercial use as long as
        * the following conditions are aheared to.  The following conditions
        * apply to all code found in this distribution, be it the RC4, RSA,
        * lhash, DES, etc., code; not just the SSL code.  The SSL documentation
        * included with this distribution is covered by the same copyright terms
        * except that the holder is Tim Hudson (tjh@cryptsoft.com).
        *
        * Copyright remains Eric Young's, and as such any Copyright notices in
        * the code are not to be removed.
        * If this package is used in a product, Eric Young should be given attribution
        * as the author of the parts of the library used.
        * This can be in the form of a textual message at program startup or
        * in documentation (online or textual) provided with the package.
        *
        * Redistribution and use in source and binary forms, with or without
        * modification, are permitted provided that the following conditions
        * are met:
        * 1. Redistributions of source code must retain the copyright
        *    notice, this list of conditions and the following disclaimer.
        * 2. Redistributions in binary form must reproduce the above copyright
        *    notice, this list of conditions and the following disclaimer in the
        *    documentation and/or other materials provided with the distribution.
        * 3. All advertising materials mentioning features or use of this software
        *    must display the following acknowledgement:
        *    "This product includes cryptographic software written by
        *     Eric Young (eay@cryptsoft.com)"
        *    The word 'cryptographic' can be left out if the rouines from the library
        *    being used are not cryptographic related :-).
        * 4. If you include any Windows specific code (or a derivative thereof) from
        *    the apps directory (application code) you must include an acknowledgement:
        *    "This product includes software written by Tim Hudson (tjh@cryptsoft.com)"
        *
        * THIS SOFTWARE IS PROVIDED BY ERIC YOUNG ``AS IS'' AND
        * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
        * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
        * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
        * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
        * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
        * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
        * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
        * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
        * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
        * SUCH DAMAGE.
        *
        * The licence and distribution terms for any publically available version or
        * derivative of this code cannot be changed.  i.e. this code cannot simply be
        * copied and put under another distribution licence
        * [including the GNU Public Licence.]
        */



File: python.info,  Node: expat,  Next: libffi,  Prev: OpenSSL,  Up: Licenses and Acknowledgements for Incorporated Software

16.3.14 expat
-------------

The `pyexpat' extension is built using an included copy of the expat
sources unless the build is configured `--with-system-expat':

    Copyright (c) 1998, 1999, 2000 Thai Open Source Software Center Ltd
                                   and Clark Cooper

    Permission is hereby granted, free of charge, to any person obtaining
    a copy of this software and associated documentation files (the
    "Software"), to deal in the Software without restriction, including
    without limitation the rights to use, copy, modify, merge, publish,
    distribute, sublicense, and/or sell copies of the Software, and to
    permit persons to whom the Software is furnished to do so, subject to
    the following conditions:

    The above copyright notice and this permission notice shall be included
    in all copies or substantial portions of the Software.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
    EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
    MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
    IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
    CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
    TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
    SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.



File: python.info,  Node: libffi,  Next: zlib,  Prev: expat,  Up: Licenses and Acknowledgements for Incorporated Software

16.3.15 libffi
--------------

The `_ctypes' extension is built using an included copy of the libffi
sources unless the build is configured `--with-system-libffi':

    Copyright (c) 1996-2008  Red Hat, Inc and others.

    Permission is hereby granted, free of charge, to any person obtaining
    a copy of this software and associated documentation files (the
    ``Software''), to deal in the Software without restriction, including
    without limitation the rights to use, copy, modify, merge, publish,
    distribute, sublicense, and/or sell copies of the Software, and to
    permit persons to whom the Software is furnished to do so, subject to
    the following conditions:

    The above copyright notice and this permission notice shall be included
    in all copies or substantial portions of the Software.

    THE SOFTWARE IS PROVIDED ``AS IS'', WITHOUT WARRANTY OF ANY KIND,
    EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
    MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
    NONINFRINGEMENT.  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
    HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
    WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
    DEALINGS IN THE SOFTWARE.



File: python.info,  Node: zlib,  Prev: libffi,  Up: Licenses and Acknowledgements for Incorporated Software

16.3.16 zlib
------------

The *note zlib: 1ad. extension is built using an included copy of the
zlib sources if the zlib version found on the system is too old to be
used for the build:

    Copyright (C) 1995-2010 Jean-loup Gailly and Mark Adler

    This software is provided 'as-is', without any express or implied
    warranty.  In no event will the authors be held liable for any damages
    arising from the use of this software.

    Permission is granted to anyone to use this software for any purpose,
    including commercial applications, and to alter it and redistribute it
    freely, subject to the following restrictions:

    1. The origin of this software must not be misrepresented; you must not
       claim that you wrote the original software. If you use this software
       in a product, an acknowledgment in the product documentation would be
       appreciated but is not required.

    2. Altered source versions must be plainly marked as such, and must not be
       misrepresented as being the original software.

    3. This notice may not be removed or altered from any source distribution.

    Jean-loup Gailly        Mark Adler
    jloup@gzip.org          madler@alumni.caltech.edu



File: python.info,  Node: Python Module Index,  Next: Index,  Prev: History and License,  Up: Top

Python Module Index
*******************

* Menu:

* __builtin__: 0. The module that provides the built-in namespace.
* __future__: 1. Future statement definitions
* __main__: 2. The environment where the top-level script is run.
* _winreg: 3. Routines and objects for manipulating the Windows
                        registry.
* abc: 4. Abstract base classes according to PEP 3119.
* aepack: 5. Conversion between Python variables and AppleEvent
                        data containers.
* aetools: 6. Basic support for sending Apple Events
* aetypes: 7. Python representation of the Apple Event Object Model.
* aifc: 8. Read and write audio files in AIFF or AIFC format.
* AL: 9. Constants used with the al module.
* al: a. Audio functions on the SGI.
* anydbm: b. Generic interface to DBM-style database modules.
* applesingle: c. Rudimentary decoder for AppleSingle format files.
* argparse: d. Command-line option and argument parsing library.
* array: e. Space efficient arrays of uniformly typed numeric
                        values.
* ast: f. Abstract Syntax Tree classes and manipulation.
* asynchat: 10. Support for asynchronous command/response protocols.
* asyncore: 11. A base class for developing asynchronous socket
                        handling services.
* atexit: 12. Register and execute cleanup functions.
* audioop: 13. Manipulate raw audio data.
* autoGIL: 14. Global Interpreter Lock handling in event loops.
* base64: 15. RFC 3548: Base16, Base32, Base64 Data
                        Encodings
* BaseHTTPServer: 16. Basic HTTP server (base class for SimpleHTTPServer and
                        CGIHTTPServer).
* Bastion: 17. Providing restricted access to objects.
* bdb: 18. Debugger framework.
* binascii: 19. Tools for converting between binary and various ASCII-
                        encoded binary representations.
* binhex: 1a. Encode and decode files in binhex4 format.
* bisect: 1b. Array bisection algorithms for binary searching.
* bsddb: 1c. Interface to Berkeley DB database library
* buildtools: 1d. Helper module for BuildApplet, BuildApplication
                        and macfreeze.
* bz2: 1e. Interface to compression and decompression routines
                        compatible with bzip2.
* calendar: 1f. Functions for working with calendars, including
                        some emulation of the Unix cal program.
* Carbon.AE: 20. Interface to the Apple Events toolbox.
* Carbon.AH: 21. Interface to the Apple Help manager.
* Carbon.App: 22. Interface to the Appearance Manager.
* Carbon.Appearance: 23. Constant definitions for the interface to the
                        Appearance Manager.
* Carbon.CarbonEvents: 24. Constants for the interface to the Carbon Event
                        Manager.
* Carbon.CarbonEvt: 25. Interface to the Carbon Event Manager.
* Carbon.CF: 26. Interface to the Core Foundation.
* Carbon.CG: 27. Interface to Core Graphics.
* Carbon.Cm: 28. Interface to the Component Manager.
* Carbon.Components: 29. Constants for the interface to the Component Manager.
* Carbon.ControlAccessor: 2a. Accessor functions for the interface to the Control
                          Manager.
* Carbon.Controls: 2b. Constants for the interface to the Control Manager.
* Carbon.CoreFounation: 2c. Constants for the interface to CoreFoundation.
* Carbon.CoreGraphics: 2d. Constants for the interface to CoreGraphics.
* Carbon.Ctl: 2e. Interface to the Control Manager.
* Carbon.Dialogs: 2f. Constants for the interface to the Dialog Manager.
* Carbon.Dlg: 30. Interface to the Dialog Manager.
* Carbon.Drag: 31. Interface to the Drag and Drop Manager.
* Carbon.Dragconst: 32. Constants for the interface to the Drag and Drop
                        Manager.
* Carbon.Events: 33. Constants for the interface to the classic Event
                        Manager.
* Carbon.Evt: 34. Interface to the classic Event Manager.
* Carbon.File: 35. Interface to the File Manager.
* Carbon.Files: 36. Constants for the interface to the File Manager.
* Carbon.Fm: 37. Interface to the Font Manager.
* Carbon.Folder: 38. Interface to the Folder Manager.
* Carbon.Folders: 39. Constants for the interface to the Folder Manager.
* Carbon.Fonts: 3a. Constants for the interface to the Font Manager.
* Carbon.Help: 3b. Interface to the Carbon Help Manager.
* Carbon.IBCarbon: 3c. Interface to the Carbon InterfaceBuilder support
                        libraries.
* Carbon.IBCarbonRuntime: 3d. Constants for the interface to the Carbon
                          InterfaceBuilder support libraries.
* Carbon.Icns: 3e. Interface to the Carbon Icon Manager
* Carbon.Icons: 3f. Constants for the interface to the Carbon Icon Manager
* Carbon.Launch: 40. Interface to the Carbon Launch Services.
* Carbon.LaunchServices: 41. Constants for the interface to the Carbon Launch
                         Services.
* Carbon.List: 42. Interface to the List Manager.
* Carbon.Lists: 43. Constants for the interface to the List Manager.
* Carbon.MacHelp: 44. Constants for the interface to the Carbon Help
                        Manager.
* Carbon.MediaDescr: 45. Parsers and generators for Quicktime Media descriptors
* Carbon.Menu: 46. Interface to the Menu Manager.
* Carbon.Menus: 47. Constants for the interface to the Menu Manager.
* Carbon.Mlte: 48. Interface to the MultiLingual Text Editor.
* Carbon.OSA: 49. Interface to the Carbon OSA Library.
* Carbon.OSAconst: 4a. Constants for the interface to the Carbon OSA Library.
* Carbon.Qd: 4b. Interface to the QuickDraw toolbox.
* Carbon.Qdoffs: 4c. Interface to the QuickDraw Offscreen APIs.
* Carbon.QDOffscreen: 4d. Constants for the interface to the QuickDraw Offscreen
                        APIs.
* Carbon.Qt: 4e. Interface to the QuickTime toolbox.
* Carbon.QuickDraw: 4f. Constants for the interface to the QuickDraw toolbox.
* Carbon.QuickTime: 50. Constants for the interface to the QuickTime toolbox.
* Carbon.Res: 51. Interface to the Resource Manager and Handles.
* Carbon.Resources: 52. Constants for the interface to the Resource Manager
                        and Handles.
* Carbon.Scrap: 53. The Scrap Manager provides basic services for
                        implementing cut & paste and clipboard operations.
* Carbon.Snd: 54. Interface to the Sound Manager.
* Carbon.Sound: 55. Constants for the interface to the Sound Manager.
* Carbon.TE: 56. Interface to TextEdit.
* Carbon.TextEdit: 57. Constants for the interface to TextEdit.
* Carbon.Win: 58. Interface to the Window Manager.
* Carbon.Windows: 59. Constants for the interface to the Window Manager.
* cd: 5a. Interface to the CD-ROM on Silicon Graphics systems.
* cfmfile: 5b. Code Fragment Resource module.
* cgi: 5c. Helpers for running Python scripts via the Common
                        Gateway Interface.
* CGIHTTPServer: 5d. This module provides a request handler for HTTP
                        servers which can run CGI scripts.
* cgitb: 5e. Configurable traceback handler for CGI scripts.
* chunk: 5f. Module to read IFF chunks.
* cmath: 60. Mathematical functions for complex numbers.
* cmd: 61. Build line-oriented command interpreters.
* code: 62. Facilities to implement read-eval-print loops.
* codecs: 63. Encode and decode data and streams.
* codeop: 64. Compile (possibly incomplete) Python code.
* collections: 65. High-performance datatypes
* ColorPicker: 66. Interface to the standard color selection dialog.
* colorsys: 67. Conversion functions between RGB and other color
                        systems.
* commands: 68. Utility functions for running external commands.
* compileall: 69. Tools for byte-compiling all Python source files in a
                        directory tree.
* compiler: 6a. Python code compiler written in Python.
* compiler.ast: 6b.
* compiler.visitor: 6c.
* ConfigParser: 6d. Configuration file parser.
* contextlib: 6e. Utilities for with-statement contexts.
* Cookie: 6f. Support for HTTP state management (cookies).
* cookielib: 70. Classes for automatic handling of HTTP cookies.
* copy: 71. Shallow and deep copy operations.
* copy_reg: 72. Register pickle support functions.
* cPickle: 73. Faster version of pickle, but not subclassable.
* cProfile: 74.
* crypt: 75. The crypt() function used to check Unix passwords.
* cStringIO: 76. Faster version of StringIO, but not
                        subclassable.
* csv: 77. Write and read tabular data to and from delimited
                        files.
* ctypes: 78. A foreign function library for Python.
* curses: 79. An interface to the curses library, providing
                        portable terminal handling.
* curses.ascii: 7a. Constants and set-membership functions for ASCII
                        characters.
* curses.panel: 7b. A panel stack extension that adds depth to curses
                        windows.
* curses.textpad: 7c. Emacs-like input editing in a curses window.
* datetime: 7d. Basic date and time types.
* dbhash: 7e. DBM-style interface to the BSD database library.
* dbm: 7f. The standard "database" interface, based on
                        ndbm.
* decimal: 80. Implementation of the General Decimal Arithmetic
                        Specification.
* DEVICE: 81. Constants used with the gl module.
* difflib: 82. Helpers for computing differences between objects.
* dircache: 83. Return directory listing, with cache mechanism.
* dis: 84. Disassembler for Python bytecode.
* distutils: 85. Support for building and installing Python modules
                        into an existing Python installation.
* distutils.archive_util: 86. Utility functions for creating archive files
                          (tarballs, zip files, ...)
* distutils.bcppcompiler: 87.
* distutils.ccompiler: 88. Abstract CCompiler class
* distutils.cmd: 89. This module provides the abstract base class Command.
                        This class is subclassed by the modules in the
                        distutils.command subpackage.
* distutils.command: 8a. This subpackage contains one module for each standard
                        Distutils command.
* distutils.command.bdist: 8b. Build a binary installer for a package
* distutils.command.bdist_dumb: 8c. Build a "dumb" installer - a simple archive of
                                files
* distutils.command.bdist_msi: 8d. Build a binary distribution as a Windows MSI
                               file
* distutils.command.bdist_packager: 8e. Abstract base class for packagers
* distutils.command.bdist_rpm: 8f. Build a binary distribution as a Redhat RPM and
                               SRPM
* distutils.command.bdist_wininst: 90. Build a Windows installer
* distutils.command.build: 91. Build all files of a package
* distutils.command.build_clib: 92. Build any C libraries in a package
* distutils.command.build_ext: 93. Build any extensions in a package
* distutils.command.build_py: 94. Build the .py/.pyc files of a package
* distutils.command.build_scripts: 95. Build the scripts of a package
* distutils.command.check: 96. Check the metadata of a package
* distutils.command.clean: 97. Clean a package build area
* distutils.command.config: 98. Perform package configuration
* distutils.command.install: 99. Install a package
* distutils.command.install_data: 9a. Install data files from a package
* distutils.command.install_headers: 9b. Install C/C++ header files from a package
* distutils.command.install_lib: 9c. Install library files from a package
* distutils.command.install_scripts: 9d. Install script files from a package
* distutils.command.register: 9e. Register a module with the Python Package Index
* distutils.command.sdist: 9f. Build a source distribution
* distutils.core: a0. The core Distutils functionality
* distutils.cygwinccompiler: a1.
* distutils.debug: a2. Provides the debug flag for distutils
* distutils.dep_util: a3. Utility functions for simple dependency checking
* distutils.dir_util: a4. Utility functions for operating on directories and
                        directory trees
* distutils.dist: a5. Provides the Distribution class, which
                        represents the module distribution being
                        built/installed/distributed
* distutils.emxccompiler: a6. OS/2 EMX Compiler support
* distutils.errors: a7. Provides standard distutils exceptions
* distutils.extension: a8. Provides the Extension class, used to describe
                        C/C++ extension modules in setup scripts
* distutils.fancy_getopt: a9. Additional getopt functionality
* distutils.file_util: aa. Utility functions for operating on single files
* distutils.filelist: ab. The FileList class, used for poking about the
                        file system and building lists of files.
* distutils.log: ac. A simple logging mechanism, 282-style
* distutils.msvccompiler: ad. Microsoft Compiler
* distutils.spawn: ae. Provides the spawn() function
* distutils.sysconfig: af. Low-level access to configuration information of the
                        Python interpreter.
* distutils.text_file: b0. provides the TextFile class, a simple interface
                        to text files
* distutils.unixccompiler: b1. UNIX C Compiler
* distutils.util: b2. Miscellaneous other utility functions
* distutils.version: b3. implements classes that represent module version
                        numbers.
* dl: b4. Call C functions in shared objects.
* doctest: b5. Test pieces of code within docstrings.
* DocXMLRPCServer: b6. Self-documenting XML-RPC server implementation.
* dumbdbm: b7. Portable implementation of the simple DBM interface.
* dummy_thread: b8. Drop-in replacement for the thread module.
* dummy_threading: b9. Drop-in replacement for the threading module.
* EasyDialogs: ba. Basic Macintosh dialogs.
* email: bb. Package supporting the parsing,
                        manipulating, and generating email
                        messages, including MIME documents.
* email.charset: bc. Character Sets
* email.encoders: bd. Encoders for email message payloads.
* email.errors: be. The exception classes used by the email package.
* email.generator: bf. Generate flat text email messages from a message
                        structure.
* email.header: c0. Representing non-ASCII headers
* email.iterators: c1. Iterate over a message object tree.
* email.message: c2. The base class representing email messages.
* email.mime: c3. Build MIME messages.
* email.parser: c4. Parse flat text email messages to produce a message
                        object structure.
* email.utils: c5. Miscellaneous email package utilities.
* encodings.idna: c6. Internationalized Domain Names implementation
* encodings.utf_8_sig: c7. UTF-8 codec with BOM signature
* errno: c8. Standard errno system symbols.
* exceptions: c9. Standard exception classes.
* fcntl: ca. The fcntl() and ioctl() system calls.
* filecmp: cb. Compare files efficiently.
* fileinput: cc. Loop over standard input or a list of files.
* findertools: cd. Wrappers around the finder's Apple Events interface.
* FL: ce. Constants used with the fl module.
* fl: cf. FORMS library for applications with graphical user
                        interfaces.
* flp: d0. Functions for loading stored FORMS designs.
* fm: d1. Font Manager interface for SGI workstations.
* fnmatch: d2. Unix shell style filename pattern matching.
* formatter: d3. Generic output formatter and device interface.
* fpectl: d4. Provide control for floating point exception handling.
* fpformat: d5. General floating point formatting functions.
* fractions: d6. Rational numbers.
* FrameWork: d7. Interactive application framework.
* ftplib: d8. FTP protocol client (requires sockets).
* functools: d9. Higher-order functions and operations on callable
                        objects.
* future_builtins: da.
* gc: db. Interface to the cycle-detecting garbage collector.
* gdbm: dc. GNU's reinterpretation of dbm.
* gensuitemodule: dd. Create a stub package from an OSA dictionary
* getopt: de. Portable parser for command line options; support both
                        short and long option names.
* getpass: df. Portable reading of passwords and retrieval of the
                        userid.
* gettext: e0. Multilingual internationalization services.
* gl: e1. Functions from the Silicon Graphics Graphics Library.
* GL: e2. Constants used with the gl module.
* glob: e3. Unix shell style pathname pattern expansion.
* grp: e4. The group database (getgrnam() and friends).
* gzip: e5. Interfaces for gzip compression and decompression
                        using file objects.
* hashlib: e6. Secure hash and message digest algorithms.
* heapq: e7. Heap queue algorithm (a.k.a. priority queue).
* hmac: e8. Keyed-Hashing for Message Authentication (HMAC)
                        implementation for Python.
* hotshot: e9. High performance logging profiler, mostly
                        written in C.
* hotshot.stats: ea. Statistical analysis for Hotshot
* htmlentitydefs: eb. Definitions of HTML general entities.
* htmllib: ec. A parser for HTML documents.
* HTMLParser: ed. A simple parser that can handle HTML and XHTML.
* httplib: ee. HTTP and HTTPS protocol client (requires sockets).
* ic: ef. Access to the Mac OS X Internet Config.
* icopen: f0. Internet Config replacement for open().
* imageop: f1. Manipulate raw image data.
* imaplib: f2. IMAP4 protocol client (requires sockets).
* imgfile: f3. Support for SGI imglib files.
* imghdr: f4. Determine the type of image contained in a file or
                        byte stream.
* imp: f5. Access the implementation of the import statement.
* importlib: f6. Convenience wrappers for __import__
* imputil: f7. Manage and augment the import process.
* inspect: f8. Extract information and source code from live objects.
* io: f9. Core tools for working with streams.
* itertools: fa. Functions creating iterators for efficient looping.
* jpeg: fb. Read and write image files in compressed JPEG format.
* json: fc. Encode and decode the JSON format.
* keyword: fd. Test whether a string is a keyword in Python.
* lib2to3: fe. the 2to3 library
* linecache: ff. This module provides random access to individual lines
                        from text files.
* locale: 100. Internationalization services.
* logging: 101. Flexible event logging system for applications.
* logging.config: 102. Configuration of the logging module.
* logging.handlers: 103. Handlers for the logging module.
* macerrors: 104. Constant definitions for many Mac OS error codes.
* MacOS: 105. Access to Mac OS-specific interpreter features.
* macostools: 106. Convenience routines for file manipulation.
* macpath: 107. Mac OS 9 path manipulation functions.
* macresource: 108. Locate script resources.
* mailbox: 109. Manipulate mailboxes in various formats
* mailcap: 10a. Mailcap file handling.
* marshal: 10b. Convert Python objects to streams of bytes and back
                        (with different constraints).
* math: 10c. Mathematical functions (sin() etc.).
* md5: 10d. RSA's MD5 message digest algorithm.
* mhlib: 10e. Manipulate MH mailboxes from Python.
* mimetools: 10f. Tools for parsing MIME-style message bodies.
* mimetypes: 110. Mapping of filename extensions to MIME types.
* MimeWriter: 111. Write MIME format files.
* mimify: 112. Mimification and unmimification of mail messages.
* MiniAEFrame: 113. Support to act as an Open Scripting Architecture (OSA)
                        server ("Apple Events").
* mmap: 114. Interface to memory-mapped files for Unix and Windows.
* modulefinder: 115. Find modules used by a script.
* msilib: 116. Creation of Microsoft Installer files, and CAB
                        files.
* msvcrt: 117. Miscellaneous useful routines from the MS VC++
                        runtime.
* multifile: 118. Support for reading files which contain distinct
                        parts, such as some MIME data.
* multiprocessing: 119. Process-based "threading" interface.
* multiprocessing.connection: 11a. API for dealing with sockets.
* multiprocessing.dummy: 11b. Dumb wrapper around threading.
* multiprocessing.managers: 11c. Share data between process with shared objects.
* multiprocessing.pool: 11d. Create pools of processes.
* multiprocessing.sharedctypes: 11e. Allocate ctypes objects from shared memory.
* mutex: 11f. Lock and queue for mutual exclusion.
* Nav: 120. Interface to Navigation Services.
* netrc: 121. Loading of .netrc files.
* new: 122. Interface to the creation of runtime implementation
                        objects.
* nis: 123. Interface to Sun's NIS (Yellow Pages) library.
* nntplib: 124. NNTP protocol client (requires sockets).
* numbers: 125. Numeric abstract base classes (Complex,
                        Real, Integral, etc.).
* operator: 126. Functions corresponding to the standard operators.
* optparse: 127. Command-line option parsing library.
* os: 128. Miscellaneous operating system interfaces.
* os.path: 129. Operations on pathnames.
* ossaudiodev: 12a. Access to OSS-compatible audio devices.
* parser: 12b. Access parse trees for Python source code.
* pdb: 12c. The Python debugger for interactive interpreters.
* pickle: 12d. Convert Python objects to streams of bytes and back.
* pickletools: 12e. Contains extensive comments about the pickle protocols
                        and pickle-machine opcodes, as well as some
                        useful functions.
* pipes: 12f. A Python interface to Unix shell pipelines.
* PixMapWrapper: 130. Wrapper for PixMap objects.
* pkgutil: 131. Utilities for the import system.
* platform: 132. Retrieves as much platform identifying data as
                        possible.
* plistlib: 133. Generate and parse Mac OS X plist files.
* popen2: 134. Subprocesses with accessible standard I/O streams.
* poplib: 135. POP3 protocol client (requires sockets).
* posix: 136. The most common POSIX system calls (normally used via
                        module os).
* posixfile: 137. A file-like object with support for locking.
* pprint: 138. Data pretty printer.
* profile: 139. Python source profiler.
* pstats: 13a. Statistics object for use with the profiler.
* pty: 13b. Pseudo-Terminal Handling for Linux.
* pwd: 13c. The password database (getpwnam() and friends).
* py_compile: 13d. Generate byte-code files from Python source files.
* pyclbr: 13e. Supports information extraction for a Python class
                        browser.
* pydoc: 13f. Documentation generator and online help system.
* Queue: 140. A synchronized queue class.
* quopri: 141. Encode and decode files using the MIME quoted-
                        printable encoding.
* random: 142. Generate pseudo-random numbers with various common
                        distributions.
* re: 143. Regular expression operations.
* readline: 144. GNU readline support for Python.
* repr: 145. Alternate repr() implementation with size limits.
* resource: 146. An interface to provide resource usage information on
                        the current process.
* rexec: 147. Basic restricted execution framework.
* rfc822: 148. Parse 2822 style mail messages.
* rlcompleter: 149. Python identifier completion, suitable for the
                        GNU readline library.
* robotparser: 14a. Loads a robots.txt file and answers questions about
                        fetchability of other URLs.
* runpy: 14b. Locate and run Python modules without importing them
                        first.
* sched: 14c. General purpose event scheduler.
* ScrolledText: 14d. Text widget with a vertical scroll bar.
* select: 14e. Wait for I/O completion on multiple streams.
* sets: 14f. Implementation of sets of unique elements.
* sgmllib: 150. Only as much of an SGML parser as needed to parse
                        HTML.
* sha: 151. NIST's secure hash algorithm, SHA.
* shelve: 152. Python object persistence.
* shlex: 153. Simple lexical analysis for Unix shell-like languages.
* shutil: 154. High-level file operations, including copying.
* signal: 155. Set handlers for asynchronous events.
* SimpleHTTPServer: 156. This module provides a basic request handler for HTTP
                        servers.
* SimpleXMLRPCServer: 157. Basic XML-RPC server implementation.
* site: 158. Module responsible for site-specific configuration.
* smtpd: 159. A SMTP server implementation in Python.
* smtplib: 15a. SMTP protocol client (requires sockets).
* sndhdr: 15b. Determine type of a sound file.
* socket: 15c. Low-level networking interface.
* SocketServer: 15d. A framework for network servers.
* spwd: 15e. The shadow password database (getspnam() and friends).
* sqlite3: 15f. A DB-API 2.0 implementation using SQLite 3.x.
* ssl: 160. TLS/SSL wrapper for socket objects
* stat: 161. Utilities for interpreting the results of
                        os.stat(), os.lstat() and os.fstat().
* statvfs: 162. Constants for interpreting the result of os.statvfs().
* string: 163. Common string operations.
* StringIO: 164. Read and write strings as if they were files.
* stringprep: 165. String preparation, as per RFC 3453
* struct: 166. Interpret strings as packed binary data.
* subprocess: 167. Subprocess management.
* sunau: 168. Provide an interface to the Sun AU sound format.
* sunaudiodev: 169. Access to Sun audio hardware.
* SUNAUDIODEV: 16a. Constants for use with sunaudiodev.
* symbol: 16b. Constants representing internal nodes of the parse
                        tree.
* symtable: 16c. Interface to the compiler's internal symbol tables.
* sys: 16d. Access system-specific parameters and functions.
* sysconfig: 16e. Python's configuration information
* syslog: 16f. An interface to the Unix syslog library routines.
* tabnanny: 170. Tool for detecting white space related problems in
                        Python source files in a directory tree.
* tarfile: 171. Read and write tar-format archive files.
* telnetlib: 172. Telnet client class.
* tempfile: 173. Generate temporary files and directories.
* termios: 174. POSIX style tty control.
* test: 175. Regression tests package containing the testing suite
                        for Python.
* test.test_support: 176. Support for Python regression tests.
* textwrap: 177. Text wrapping and filling
* thread: 178. Create multiple threads of control within one
                        interpreter.
* threading: 179. Higher-level threading interface.
* time: 17a. Time access and conversions.
* timeit: 17b. Measure the execution time of small code snippets.
* Tix: 17c. Tk Extension Widgets for Tkinter
* Tkinter: 17d. Interface to Tcl/Tk for graphical user interfaces
* token: 17e. Constants representing terminal nodes of the parse
                        tree.
* tokenize: 17f. Lexical scanner for Python source code.
* trace: 180. Trace or track Python statement execution.
* traceback: 181. Print or retrieve a stack traceback.
* ttk: 182. Tk themed widget set
* tty: 183. Utility functions that perform common terminal control
                        operations.
* turtle: 184. Turtle graphics for Tk
* types: 185. Names for built-in types.
* unicodedata: 186. Access the Unicode Database.
* unittest: 187. Unit testing framework for Python.
* urllib: 188. Open an arbitrary network resource by URL (requires
                        sockets).
* urllib2: 189. Next generation URL opening library.
* urlparse: 18a. Parse URLs into or assemble them from components.
* user: 18b. A standard way to reference user-specific modules.
* UserDict: 18c. Class wrapper for dictionary objects.
* UserList: 18d. Class wrapper for list objects.
* UserString: 18e. Class wrapper for string objects.
* uu: 18f. Encode and decode files in uuencode format.
* uuid: 190. UUID objects (universally unique identifiers)
                        according to RFC 4122
* videoreader: 191. Read QuickTime movies frame by frame for further
                        processing.
* W: 192. Widgets for the Mac, built on top of FrameWork.
* warnings: 193. Issue warning messages and control their disposition.
* wave: 194. Provide an interface to the WAV sound format.
* weakref: 195. Support for weak references and weak dictionaries.
* webbrowser: 196. Easy-to-use controller for Web browsers.
* whichdb: 197. Guess which DBM-style module created a given database.
* winsound: 198. Access to the sound-playing machinery for Windows.
* wsgiref: 199. WSGI Utilities and Reference Implementation.
* wsgiref.handlers: 19a. WSGI server/gateway base classes.
* wsgiref.headers: 19b. WSGI response header tools.
* wsgiref.simple_server: 19c. A simple WSGI HTTP server.
* wsgiref.util: 19d. WSGI environment utilities.
* wsgiref.validate: 19e. WSGI conformance checker.
* xdrlib: 19f. Encoders and decoders for the External Data
                        Representation (XDR).
* xml: 1a0. Package containing XML processing modules
* xml.dom: 1a1. Document Object Model API for Python.
* xml.dom.minidom: 1a2. Minimal Document Object Model (DOM) implementation.
* xml.dom.pulldom: 1a3. Support for building partial DOM trees from SAX
                        events.
* xml.etree.ElementTree: 1a4. Implementation of the ElementTree API.
* xml.parsers.expat: 1a5. An interface to the Expat non-validating XML parser.
* xml.sax: 1a6. Package containing SAX2 base classes and convenience
                        functions.
* xml.sax.handler: 1a7. Base classes for SAX event handlers.
* xml.sax.saxutils: 1a8. Convenience functions and classes for use with SAX.
* xml.sax.xmlreader: 1a9. Interface which SAX-compliant XML parsers must
                        implement.
* xmlrpclib: 1aa. XML-RPC client access.
* zipfile: 1ab. Read and write ZIP-format archive files.
* zipimport: 1ac. support for importing Python modules from ZIP
                        archives.
* zlib: 1ad. Low-level interface to compression and decompression
                        routines compatible with gzip.



Local Variables:
coding: utf-8
End:
